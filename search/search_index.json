{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"TongSim","text":"<p>TongSim \u662f\u4e00\u4e2a\u57fa\u4e8e\u865a\u5e7b\u5f15\u64ce\u6784\u5efa\u7684\u901a\u7528\u667a\u80fd\u4f53\u4eff\u771f\u4e0e\u8bad\u7ec3\u5e73\u53f0\u3002\u5b83\u4e3a\u901a\u7528\u4eba\u5de5\u667a\u80fd\uff08AGI\uff09\u667a\u80fd\u4f53\u63d0\u4f9b\u591a\u6837\u5316\u7684\u4efb\u52a1\u573a\u666f\uff0c\u5e76\u8d4b\u4e88\u667a\u80fd\u4f53\u611f\u77e5\u5916\u90e8\u4e16\u754c\u7684\u80fd\u529b\uff0c\u5982\u89c6\u89c9\u3001\u542c\u89c9\u548c\u89e6\u89c9\u3002\u667a\u80fd\u4f53\u901a\u8fc7\u611f\u77e5\u8fd9\u4e9b\u4fe1\u606f\uff0c\u7ed3\u5408\u81ea\u8eab\u7684\u72b6\u6001\u3001\u80fd\u529b\u548c\u4ef7\u503c\u56e0\u7d20\uff0c\u505a\u51fa\u76f8\u5e94\u7684\u51b3\u7b56\u3002</p> <p>\u4eff\u771f\u5e73\u53f0\u8fd8\u63d0\u4f9b\u4e86\u667a\u80fd\u4f53\u6267\u884c\u52a8\u4f5c\u7684\u80fd\u529b\uff0c\u4f7f\u5176\u80fd\u591f\u4e0e\u5916\u90e8\u73af\u5883\u8fdb\u884c\u4ea4\u4e92\u3002\u6bcf\u5f53\u667a\u80fd\u4f53\u5bf9\u73af\u5883\u8fdb\u884c\u64cd\u4f5c\u540e\uff0c\u5e73\u53f0\u4f1a\u5728\u56e0\u679c\u5173\u7cfb\u548c\u7269\u7406\u6cd5\u5219\u7684\u57fa\u7840\u4e0a\uff0c\u6a21\u62df\u73af\u5883\u72b6\u6001\u7684\u53d8\u5316\u3002\u6b64\u5916\uff0cTongSim \u8fd8\u652f\u6301 VR \u4ea4\u4e92\uff0c\u53ef\u4ee5\u5c06\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u4eba\u7c7b\u52a8\u4f5c\u6216\u5176\u4ed6\u667a\u80fd\u4f53\u7684\u884c\u4e3a\u6620\u5c04\u5230\u865a\u62df\u73af\u5883\u4e2d\uff0c\u5bf9\u667a\u80fd\u4f53\u7684\u5916\u90e8\u73af\u5883\u8fdb\u884c\u5e72\u9884\u3002</p> <p></p>"},{"location":"#_1","title":"\u7ade\u8d5b\u7cbe\u7b80\u7248\u8bf4\u660e\uff08\u52a1\u5fc5\u9605\u8bfb\uff09","text":"<p>\u76ee\u524d\u5f00\u6e90\u7684\u662f\u9762\u5411 \u201c\u7b2c\u4e00\u5c4a\u4ea7\u5b66\u7ed3\u5408\u9ad8\u6821\u901a\u7528\u4eba\u5de5\u667a\u80fd\u5927\u8d5b\uff08The 1st Industry\u2013University AGI Competition\uff09\u201d \u7684\u7cbe\u7b80\u7248 TongSim \u5e73\u53f0\u4e0e SDK \u6587\u6863\u9996\u9875\uff08MkDocs\uff09\u3002 \u672c\u4ed3\u5e93\u4ec5\u63d0\u4f9b\u6bd4\u8d5b\u4f7f\u7528\u6240\u9700\u7684\u6700\u5c0f\u80fd\u529b\u96c6\u5408\u7684\u670d\u52a1\u7aef\u4e0e\u914d\u5957 SDK\u3002</p> <p>\u4e3a\u964d\u4f4e\u4e0a\u624b\u95e8\u69db\u3001\u805a\u7126\u5927\u8d5b\u4efb\u52a1\u76ee\u6807\uff0c\u672c\u6b21\u5927\u8d5b\u53d1\u5e03\u7684 TongSim Unreal \u4e3a\u6574\u4f53\u529f\u80fd\u7cbe\u7b80\u7248\uff1a</p> <ul> <li>\u4ec5\u5305\u542b\uff1a\u9762\u5411 RL \u8bad\u7ec3\u7684\u57fa\u7840\u79fb\u52a8\u80fd\u529b \u4e0e\u6240\u9700\u7684\u6700\u5c0f\u573a\u666f\u4e0e\u8d44\u4ea7\uff08\u5982\uff1a\u57fa\u7840\u5b9a\u4f4d/\u79fb\u52a8\u3001\u59ff\u6001\u4e0e\u7b80\u5355\u4ea4\u4e92\u63a5\u53e3\uff09\u3002</li> <li>\u4e0d\u5305\u542b\uff1a\u5b8c\u6574\u7248\u4e2d\u7684\u9ad8\u7ea7\u80fd\u529b\uff08\u4e30\u5bcc\u7684\u4f20\u611f\u5668\u3001\u590d\u6742\u4ea4\u4e92\u3001\u3001\u52a8\u4f5c\u6280\u80fd\u5e93\u3001\u5e7f\u6cdb\u7684\u573a\u666f\u8d44\u4ea7\u3001\u7cfb\u7edf\u7ea7\u8bc4\u6d4b\u5de5\u5177\u94fe\u7b49\uff09\u3002</li> <li>SDK \u63a5\u53e3\u53ef\u89c1\u4f46\u53ef\u80fd\u4e0d\u53ef\u7528\uff1a\u51fa\u4e8e\u5de5\u7a0b\u4e00\u81f4\u6027\uff0cSDK \u4ecd\u4fdd\u7559\u4e86\u5bf9\u63a5\u5b8c\u6574\u5e73\u53f0\u7684\u5168\u91cf\u63a5\u53e3\u5b9a\u4e49\u3002\u5728\u7cbe\u7b80\u7248\u670d\u52a1\u7aef\u4e2d\uff0c\u90e8\u5206\u63a5\u53e3\u4f1a\u8fd4\u56de <code>UnkownMethod</code>\u3001<code>Can not found GrpcSubject</code> \u7b49\u72b6\u6001\uff0c\u8fd9\u662f\u9884\u671f\u884c\u4e3a\u3002</li> </ul> <p>\u82e5\u5bf9\u5b8c\u6574\u7248 TongSim\uff08\u542b\u66f4\u4e30\u5bcc\u7684\u4f20\u611f\u3001\u7269\u7406\u3001\u4ea4\u4e92\u4e0e\u8bc4\u6d4b\u80fd\u529b\uff09\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u8054\u7cfb\uff1awukunlun@bigai.ai</p>"},{"location":"api/ability_action/","title":"\ud83c\udff7\ufe0f Agent \u52a8\u4f5c\u80fd\u529b","text":""},{"location":"api/ability_action/#tongsim.entity.ability.impl.action","title":"tongsim.entity.ability.impl.action","text":"<p>tongsim.entity.ability.impl.action</p> <p>\u5b9a\u4e49 AgentActionAbility \u63a5\u53e3\u53ca\u5176\u5177\u4f53\u5b9e\u73b0 AgentActionAbilityImpl\u3002</p> <ul> <li><code>AgentActionAbility</code>: \u89d2\u8272\u52a8\u753b\u6267\u884c\u7684\u63a5\u53e3\uff0c\u63d0\u4f9b\u540c\u6b65\u4e0e\u5f02\u6b65\u6267\u884c\u65b9\u6cd5\u3002</li> <li><code>AgentActionAbilityImpl</code>: \u63a5\u53e3\u5b9e\u73b0\u7c7b\uff0c\u57fa\u4e8e AnimationStreamer \u63d0\u4f9b Action \u7684\u6267\u884c\u4e0e\u7ed3\u679c\u6536\u96c6\u529f\u80fd\u3002</li> </ul>"},{"location":"api/ability_action/#tongsim.entity.ability.impl.action.AgentActionAbility","title":"AgentActionAbility","text":"<p>               Bases: <code>Protocol</code></p> <p>AgentActionAbility \u5b9a\u4e49\u4e86\u89d2\u8272\u52a8\u753b\u6267\u884c\u7684\u76f8\u5173\u63a5\u53e3\u3002</p> <p>\u8be5\u63a5\u53e3\u7528\u4e8e\u7ba1\u7406 Action \u6267\u884c\u53ca\u7ed3\u679c\u6536\u96c6\uff0c\u5305\u62ec\u540c\u6b65\u4e0e\u5f02\u6b65\u6267\u884c\u65b9\u6cd5\u3002 \u6bcf\u4e2a Action \u7531\u82e5\u5e72 Animation \u7ec4\u6210\uff0c<code>do_action()</code> \u548c <code>async_do_action()</code> \u65b9\u6cd5\u5c06\u7edf\u4e00\u8d1f\u8d23\u6267\u884c\u5e76\u6536\u96c6\u7ed3\u679c\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\action.py</code> <pre><code>class AgentActionAbility(Protocol):\n    \"\"\"\n    AgentActionAbility \u5b9a\u4e49\u4e86\u89d2\u8272\u52a8\u753b\u6267\u884c\u7684\u76f8\u5173\u63a5\u53e3\u3002\n\n    \u8be5\u63a5\u53e3\u7528\u4e8e\u7ba1\u7406 Action \u6267\u884c\u53ca\u7ed3\u679c\u6536\u96c6\uff0c\u5305\u62ec\u540c\u6b65\u4e0e\u5f02\u6b65\u6267\u884c\u65b9\u6cd5\u3002\n    \u6bcf\u4e2a Action \u7531\u82e5\u5e72 Animation \u7ec4\u6210\uff0c`do_action()` \u548c `async_do_action()` \u65b9\u6cd5\u5c06\u7edf\u4e00\u8d1f\u8d23\u6267\u884c\u5e76\u6536\u96c6\u7ed3\u679c\u3002\n    \"\"\"\n\n    async def async_enqueue_action(\n        self, action: ActionBase, track_result: bool = False\n    ) -&gt; ActionBase:\n        \"\"\"\n        \u5f02\u6b65\u5c06 Action \u52a0\u5165\u6267\u884c\u961f\u5217\uff0c\u4e0d\u963b\u585e\u5f53\u524d\u6d41\u7a0b\u3002\n\n        Args:\n            action (ActionBase): \u8981\u52a0\u5165\u961f\u5217\u7684 Action \u5bf9\u8c61\u3002\n            track_result (bool): \u662f\u5426\u8ddf\u8e2a Action \u7684\u6267\u884c\u7ed3\u679c\uff0c\u9ed8\u8ba4\u4e3a False\u3002\n\n        Returns:\n            ActionBase: \u5df2\u52a0\u5165\u961f\u5217\u7684 Action \u5bf9\u8c61\u3002\n        \"\"\"\n\n    def enqueue_action(\n        self, action: ActionBase, track_result: bool = False\n    ) -&gt; ActionBase:\n        \"\"\"\n        \u540c\u6b65\u5c06 Action \u52a0\u5165\u961f\u5217\u3002\n\n        Args:\n            action (ActionBase): \u8981\u52a0\u5165\u961f\u5217\u7684 Action \u5bf9\u8c61\u3002\n            track_result (bool): \u662f\u5426\u8ddf\u8e2a Action \u7684\u6267\u884c\u7ed3\u679c\uff0c\u9ed8\u8ba4\u4e3a False\u3002\n\n        Returns:\n            ActionBase: \u5df2\u52a0\u5165\u961f\u5217\u7684 Action \u5bf9\u8c61\u3002\n        \"\"\"\n\n    async def async_do_action(\n        self, action: ActionBase | None = None, cancel_on_error: bool = False\n    ) -&gt; list[AnimResultInfo] | None:\n        \"\"\"\n        \u5f02\u6b65\u6267\u884c\u6307\u5b9a\u7684 Action \u5bf9\u8c61\uff0c\u5e76\u6536\u96c6 Animation \u7ed3\u679c\u3002\n\n        \u5982\u679c `action` \u4e3a None\uff0c\u5219\u6267\u884c\u5f53\u524d\u961f\u5217\u4e2d\u7684\u6240\u6709 Action\u3002\n\n        Args:\n            action (ActionBase | None): \u8981\u6267\u884c\u7684 Action \u5bf9\u8c61\u3002\u5982\u679c\u4e3a None\uff0c\u5219\u6267\u884c\u961f\u5217\u4e2d\u7684\u6240\u6709 Action\u3002\n            cancel_on_error (bool): \u9047\u5230\u5f02\u5e38\u65f6\u662f\u5426\u53d6\u6d88\u5269\u4f59 Animation\uff0c\u9ed8\u8ba4\u4e3a False\u3002\n\n        Returns:\n            list[AnimResultInfo] | None: \u6bcf\u4e2a Animation \u7684\u6267\u884c\u7ed3\u679c\uff0c\u6216 None\uff08\u82e5 action \u4e3a None\uff09\u3002\n\n        \"\"\"\n\n    def do_action(\n        self, action: ActionBase | None = None, cancel_on_error: bool = False\n    ) -&gt; list[AnimResultInfo] | None:\n        \"\"\"\n        \u540c\u6b65\u6267\u884c\u6307\u5b9a\u7684 Action \u5bf9\u8c61\uff0c\u5e76\u6536\u96c6 Animation \u7ed3\u679c\u3002\n\n        \u5982\u679c `action` \u4e3a None\uff0c\u5219\u6267\u884c\u5f53\u524d\u961f\u5217\u4e2d\u7684\u6240\u6709 Action\u3002\n\n        Args:\n            action (ActionBase | None): \u8981\u6267\u884c\u7684 Action \u5bf9\u8c61\u3002\u5982\u679c\u4e3a None\uff0c\u5219\u6267\u884c\u961f\u5217\u4e2d\u7684\u6240\u6709 Action\u3002\n            cancel_on_error (bool): \u9047\u5230\u5f02\u5e38\u65f6\u662f\u5426\u53d6\u6d88\u5269\u4f59 Animation\uff0c\u9ed8\u8ba4\u4e3a False\u3002\n\n        Returns:\n            list[AnimResultInfo] | None: \u6bcf\u4e2a Animation \u7684\u6267\u884c\u7ed3\u679c\uff0c\u6216 None\uff08\u82e5 action \u4e3a None\uff09\u3002\n\n        \"\"\"\n\n    async def async_get_playable_animation_names(self) -&gt; list[str]:\n        \"\"\"\n        \u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u667a\u80fd\u4f53\u53ef\u64ad\u653e\u7684\u52a8\u753b\u540d\u79f0\u5217\u8868\u3002\n\n        Returns:\n            list[str]: \u53ef\u7528\u52a8\u753b\u540d\u79f0\u7684\u5b57\u7b26\u4e32\u5217\u8868\u3002\n        \"\"\"\n\n    def get_playable_animation_names(self) -&gt; list[str]:\n        \"\"\"\n        \u83b7\u53d6\u5f53\u524d\u667a\u80fd\u4f53\u53ef\u64ad\u653e\u7684\u52a8\u753b\u540d\u79f0\u5217\u8868\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n        Returns:\n            list[str]: \u53ef\u7528\u52a8\u753b\u540d\u79f0\u7684\u5b57\u7b26\u4e32\u5217\u8868\u3002\n        \"\"\"\n\n    def enable_idle_random_anim(self, is_enable: bool) -&gt; bool:\n        \"\"\"\n        \u542f\u7528\u6216\u7981\u7528\u667a\u80fd\u4f53\u7684\u95f2\u7f6e\u72b6\u6001\u968f\u673a\u52a8\u753b\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n        \u5f53\u542f\u7528\u540e\uff0c\u667a\u80fd\u4f53\u5728\u6ca1\u6709\u6267\u884c\u5176\u4ed6\u52a8\u4f5c\u65f6\uff0c\u5c06\u81ea\u52a8\u64ad\u653e\u9884\u5b9a\u4e49\u7684\u968f\u673a\u95f2\u7f6e\u52a8\u753b\u3002\n\n        Args:\n            is_enable (bool): \u662f\u5426\u542f\u7528\u968f\u673a\u95f2\u7f6e\u52a8\u753b\u3002True \u8868\u793a\u542f\u7528\uff0cFalse \u8868\u793a\u7981\u7528\u3002\n\n        Returns:\n            bool: \u64cd\u4f5c\u662f\u5426\u6210\u529f\u3002True \u8868\u793a\u8bbe\u7f6e\u6210\u529f\uff0cFalse \u8868\u793a\u5931\u8d25\u3002\n        \"\"\"\n\n    async def async_enable_idle_random_anim(self, is_enable: bool) -&gt; bool:\n        \"\"\"\n        \u542f\u7528\u6216\u7981\u7528\u667a\u80fd\u4f53\u7684\u95f2\u7f6e\u72b6\u6001\u968f\u673a\u52a8\u753b\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        \u5f53\u542f\u7528\u540e\uff0c\u667a\u80fd\u4f53\u5728\u6ca1\u6709\u6267\u884c\u5176\u4ed6\u52a8\u4f5c\u65f6\uff0c\u5c06\u81ea\u52a8\u64ad\u653e\u9884\u5b9a\u4e49\u7684\u968f\u673a\u95f2\u7f6e\u52a8\u753b\u3002\n\n        Args:\n            is_enable (bool): \u662f\u5426\u542f\u7528\u968f\u673a\u95f2\u7f6e\u52a8\u753b\u3002True \u8868\u793a\u542f\u7528\uff0cFalse \u8868\u793a\u7981\u7528\u3002\n\n        Returns:\n            bool: \u64cd\u4f5c\u662f\u5426\u6210\u529f\u3002True \u8868\u793a\u8bbe\u7f6e\u6210\u529f\uff0cFalse \u8868\u793a\u5931\u8d25\u3002\n        \"\"\"\n\n    def is_action_queue_empty(self) -&gt; bool:\n        \"\"\"\n        \u5224\u65ad\u5f53\u524d\u667a\u80fd\u4f53\u7684\u52a8\u4f5c\u961f\u5217\u662f\u5426\u4e3a\u7a7a\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n        \u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u8868\u793a\u5f53\u524d\u6ca1\u6709\u5f85\u6267\u884c\u7684\u52a8\u4f5c\u3002\n\n        Returns:\n            bool: \u82e5\u961f\u5217\u4e3a\u7a7a\u8fd4\u56de True\uff0c\u5426\u5219\u8fd4\u56de False\u3002\n        \"\"\"\n\n    async def async_is_action_queue_empty(self) -&gt; bool:\n        \"\"\"\n        \u5224\u65ad\u5f53\u524d\u667a\u80fd\u4f53\u7684\u52a8\u4f5c\u961f\u5217\u662f\u5426\u4e3a\u7a7a\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        \u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u8868\u793a\u5f53\u524d\u6ca1\u6709\u5f85\u6267\u884c\u7684\u52a8\u4f5c\u3002\n\n        Returns:\n            bool: \u82e5\u961f\u5217\u4e3a\u7a7a\u8fd4\u56de True\uff0c\u5426\u5219\u8fd4\u56de False\u3002\n        \"\"\"\n\n    def get_agent_action_status(self) -&gt; dict:\n        \"\"\"\n        \u83b7\u53d6\u5f53\u524d\u667a\u80fd\u4f53\u7684\u52a8\u4f5c\u72b6\u6001\u4fe1\u606f\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n        Returns:\n            dict: \u52a8\u4f5c\u72b6\u6001\u4fe1\u606f\u5b57\u5178\n        \"\"\"\n\n    async def async_get_agent_action_status(self) -&gt; dict:\n        \"\"\"\n        \u83b7\u53d6\u5f53\u524d\u667a\u80fd\u4f53\u7684\u52a8\u4f5c\u72b6\u6001\u4fe1\u606f\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        Returns:\n            dict: \u52a8\u4f5c\u72b6\u6001\u4fe1\u606f\u5b57\u5178\n        \"\"\"\n\n    def get_taking_entity_id(self, which_hand: AnimCmdHandType) -&gt; str | None:\n        \"\"\"\n        \u83b7\u53d6\u6307\u5b9a\u624b\u4e0a\u5f53\u524d\u62ff\u7740\u7684\u5bf9\u8c61 ID\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n        Args:\n            which_hand (AnimCmdHandType): \u54ea\u53ea\u624b\n\n        Returns:\n            str | None: \u88ab\u62ff\u53d6\u5bf9\u8c61\u7684\u5b9e\u4f53 ID\uff0c\u82e5\u672a\u62ff\u53d6\u4efb\u4f55\u5bf9\u8c61\u5219\u8fd4\u56de None\u3002\n        \"\"\"\n\n    async def async_get_taking_entity_id(\n        self, which_hand: AnimCmdHandType\n    ) -&gt; str | None:\n        \"\"\"\n        \u83b7\u53d6\u6307\u5b9a\u624b\u4e0a\u5f53\u524d\u62ff\u7740\u7684\u5bf9\u8c61 ID\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        Args:\n            which_hand (AnimCmdHandType): \u54ea\u53ea\u624b\n        Returns:\n            str | None: \u88ab\u62ff\u53d6\u5bf9\u8c61\u7684\u5b9e\u4f53 ID\uff0c\u82e5\u672a\u62ff\u53d6\u4efb\u4f55\u5bf9\u8c61\u5219\u8fd4\u56de None\u3002\n        \"\"\"\n\n    def set_emotion(self, emotion: dict) -&gt; None:\n        \"\"\"\n        \u8bbe\u7f6e\u667a\u80fd\u4f53\u7684\u60c5\u7eea\u72b6\u6001\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n        Args:\n            emotion (dict): \u60c5\u7eea\u72b6\u6001\u7684\u5b57\u5178\u8868\u793a\u3002\u652f\u6301\u7684\u60c5\u7eea\u7c7b\u578b[\"happy\", \"angry\", \"horror\", \"sad\",\"disgust\",\"surprise\",\"worry\"],\u8303\u56f4\u5728[0,1]\u4e4b\u95f4\n        \"\"\"\n\n    async def async_set_emotion(self, emotion: dict) -&gt; None:\n        \"\"\"\n        \u8bbe\u7f6e\u667a\u80fd\u4f53\u7684\u60c5\u7eea\u72b6\u6001\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        Args:\n            emotion (dict): \u60c5\u7eea\u72b6\u6001\u7684\u5b57\u5178\u8868\u793a\u3002\u652f\u6301\u7684\u60c5\u7eea\u7c7b\u578b[\"happy\", \"angry\", \"horror\", \"sad\",\"disgust\",\"surprise\",\"worry\"]\uff0c\u8303\u56f4\u5728[0,1]\u4e4b\u95f4\n        \"\"\"\n\n    def set_enable_physics_body(self, is_enable: bool) -&gt; bool:\n        \"\"\"\n        \u8bbe\u5b9a\u662f\u5426\u5f00\u542f\u4eba\u7269\u7684\u7269\u7406\u78b0\u649e\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n        Args:\n            is_enable (bool): \u662f\u5426\u5f00\u542f\u3002\n\n        Returns:\n            \u662f\u5426\u6210\u529f\u8bbe\u7f6e\u3002\n        \"\"\"\n\n    async def async_set_enable_physics_body(self, is_enable: bool) -&gt; bool:\n        \"\"\"\n        \u8bbe\u5b9a\u662f\u5426\u5f00\u542f\u4eba\u7269\u7684\u7269\u7406\u78b0\u649e\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        Args:\n            is_enable (bool): \u662f\u5426\u5f00\u542f\u3002\n\n        Returns:\n            \u662f\u5426\u6210\u529f\u8bbe\u7f6e\u3002\n        \"\"\"\n\n    def set_move_ability(\n        self,\n        walk_speed: float,\n        run_speed: float,\n        jump_z_velocity: float,\n        crouch_speed: float,\n        move_friction: float = 0.5,\n    ) -&gt; bool:\n        \"\"\"\n        \u8bbe\u7f6e\u8fd0\u52a8\u53c2\u6570\uff08\u540c\u6b65\u63a5\u53e3\uff09\u53ea\u9002\u7528\u4e8eInputAnimation\u52a8\u4f5c\u7684\u72b6\u6001\u3002\n\n        Args:\n             walk_speed (float): \u884c\u8d70\u901f\u5ea6\n             run_speed (float): \u5954\u8dd1\u901f\u5ea6\n             jump_z_velocity (float): \u8df3\u8dc3z\u8f74\u521d\u901f\u5ea6\n             crouch_speed (float): \u8e72\u4f0f\u79fb\u52a8\u901f\u5ea6\n             move_friction (float): \u649e\u5230\u969c\u788d\u7269\u540e\u7684\u6469\u64e6\u7cfb\u6570\n        \"\"\"\n\n    async def async_set_move_ability(\n        self,\n        walk_speed: float,\n        run_speed: float,\n        jump_z_velocity: float,\n        crouch_speed: float,\n        move_friction: float = 0.5,\n    ) -&gt; bool:\n        \"\"\"\n        \u8bbe\u7f6e\u8fd0\u52a8\u53c2\u6570\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u53ea\u9002\u7528\u4e8eInputAnimation\u52a8\u4f5c\u7684\u72b6\u6001\u3002\n\n        Args:\n             walk_speed (float): \u884c\u8d70\u901f\u5ea6\n             run_speed (float): \u5954\u8dd1\u901f\u5ea6\n             jump_z_velocity (float): \u8df3\u8dc3z\u8f74\u521d\u901f\u5ea6\n             crouch_speed (float): \u8e72\u4f0f\u79fb\u52a8\u901f\u5ea6\n             move_friction (float): \u649e\u5230\u969c\u788d\u7269\u540e\u7684\u6469\u64e6\u7cfb\u6570\n        \"\"\"\n</code></pre>"},{"location":"api/ability_action/#tongsim.entity.ability.impl.action.AgentActionAbility.async_enqueue_action","title":"async_enqueue_action  <code>async</code>","text":"<pre><code>async_enqueue_action(\n    action: ActionBase, track_result: bool = False\n) -&gt; ActionBase\n</code></pre> <p>\u5f02\u6b65\u5c06 Action \u52a0\u5165\u6267\u884c\u961f\u5217\uff0c\u4e0d\u963b\u585e\u5f53\u524d\u6d41\u7a0b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>action</code> <code>ActionBase</code> <p>\u8981\u52a0\u5165\u961f\u5217\u7684 Action \u5bf9\u8c61\u3002</p> required <code>track_result</code> <code>bool</code> <p>\u662f\u5426\u8ddf\u8e2a Action \u7684\u6267\u884c\u7ed3\u679c\uff0c\u9ed8\u8ba4\u4e3a False\u3002</p> <code>False</code> <p>Returns:</p> Name Type Description <code>ActionBase</code> <code>ActionBase</code> <p>\u5df2\u52a0\u5165\u961f\u5217\u7684 Action \u5bf9\u8c61\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\action.py</code> <pre><code>async def async_enqueue_action(\n    self, action: ActionBase, track_result: bool = False\n) -&gt; ActionBase:\n    \"\"\"\n    \u5f02\u6b65\u5c06 Action \u52a0\u5165\u6267\u884c\u961f\u5217\uff0c\u4e0d\u963b\u585e\u5f53\u524d\u6d41\u7a0b\u3002\n\n    Args:\n        action (ActionBase): \u8981\u52a0\u5165\u961f\u5217\u7684 Action \u5bf9\u8c61\u3002\n        track_result (bool): \u662f\u5426\u8ddf\u8e2a Action \u7684\u6267\u884c\u7ed3\u679c\uff0c\u9ed8\u8ba4\u4e3a False\u3002\n\n    Returns:\n        ActionBase: \u5df2\u52a0\u5165\u961f\u5217\u7684 Action \u5bf9\u8c61\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_action/#tongsim.entity.ability.impl.action.AgentActionAbility.enqueue_action","title":"enqueue_action","text":"<pre><code>enqueue_action(\n    action: ActionBase, track_result: bool = False\n) -&gt; ActionBase\n</code></pre> <p>\u540c\u6b65\u5c06 Action \u52a0\u5165\u961f\u5217\u3002</p> <p>Parameters:</p> Name Type Description Default <code>action</code> <code>ActionBase</code> <p>\u8981\u52a0\u5165\u961f\u5217\u7684 Action \u5bf9\u8c61\u3002</p> required <code>track_result</code> <code>bool</code> <p>\u662f\u5426\u8ddf\u8e2a Action \u7684\u6267\u884c\u7ed3\u679c\uff0c\u9ed8\u8ba4\u4e3a False\u3002</p> <code>False</code> <p>Returns:</p> Name Type Description <code>ActionBase</code> <code>ActionBase</code> <p>\u5df2\u52a0\u5165\u961f\u5217\u7684 Action \u5bf9\u8c61\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\action.py</code> <pre><code>def enqueue_action(\n    self, action: ActionBase, track_result: bool = False\n) -&gt; ActionBase:\n    \"\"\"\n    \u540c\u6b65\u5c06 Action \u52a0\u5165\u961f\u5217\u3002\n\n    Args:\n        action (ActionBase): \u8981\u52a0\u5165\u961f\u5217\u7684 Action \u5bf9\u8c61\u3002\n        track_result (bool): \u662f\u5426\u8ddf\u8e2a Action \u7684\u6267\u884c\u7ed3\u679c\uff0c\u9ed8\u8ba4\u4e3a False\u3002\n\n    Returns:\n        ActionBase: \u5df2\u52a0\u5165\u961f\u5217\u7684 Action \u5bf9\u8c61\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_action/#tongsim.entity.ability.impl.action.AgentActionAbility.async_do_action","title":"async_do_action  <code>async</code>","text":"<pre><code>async_do_action(\n    action: ActionBase | None = None,\n    cancel_on_error: bool = False,\n) -&gt; list[AnimResultInfo] | None\n</code></pre> <p>\u5f02\u6b65\u6267\u884c\u6307\u5b9a\u7684 Action \u5bf9\u8c61\uff0c\u5e76\u6536\u96c6 Animation \u7ed3\u679c\u3002</p> <p>\u5982\u679c <code>action</code> \u4e3a None\uff0c\u5219\u6267\u884c\u5f53\u524d\u961f\u5217\u4e2d\u7684\u6240\u6709 Action\u3002</p> <p>Parameters:</p> Name Type Description Default <code>action</code> <code>ActionBase | None</code> <p>\u8981\u6267\u884c\u7684 Action \u5bf9\u8c61\u3002\u5982\u679c\u4e3a None\uff0c\u5219\u6267\u884c\u961f\u5217\u4e2d\u7684\u6240\u6709 Action\u3002</p> <code>None</code> <code>cancel_on_error</code> <code>bool</code> <p>\u9047\u5230\u5f02\u5e38\u65f6\u662f\u5426\u53d6\u6d88\u5269\u4f59 Animation\uff0c\u9ed8\u8ba4\u4e3a False\u3002</p> <code>False</code> <p>Returns:</p> Type Description <code>list[AnimResultInfo] | None</code> <p>list[AnimResultInfo] | None: \u6bcf\u4e2a Animation \u7684\u6267\u884c\u7ed3\u679c\uff0c\u6216 None\uff08\u82e5 action \u4e3a None\uff09\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\action.py</code> <pre><code>async def async_do_action(\n    self, action: ActionBase | None = None, cancel_on_error: bool = False\n) -&gt; list[AnimResultInfo] | None:\n    \"\"\"\n    \u5f02\u6b65\u6267\u884c\u6307\u5b9a\u7684 Action \u5bf9\u8c61\uff0c\u5e76\u6536\u96c6 Animation \u7ed3\u679c\u3002\n\n    \u5982\u679c `action` \u4e3a None\uff0c\u5219\u6267\u884c\u5f53\u524d\u961f\u5217\u4e2d\u7684\u6240\u6709 Action\u3002\n\n    Args:\n        action (ActionBase | None): \u8981\u6267\u884c\u7684 Action \u5bf9\u8c61\u3002\u5982\u679c\u4e3a None\uff0c\u5219\u6267\u884c\u961f\u5217\u4e2d\u7684\u6240\u6709 Action\u3002\n        cancel_on_error (bool): \u9047\u5230\u5f02\u5e38\u65f6\u662f\u5426\u53d6\u6d88\u5269\u4f59 Animation\uff0c\u9ed8\u8ba4\u4e3a False\u3002\n\n    Returns:\n        list[AnimResultInfo] | None: \u6bcf\u4e2a Animation \u7684\u6267\u884c\u7ed3\u679c\uff0c\u6216 None\uff08\u82e5 action \u4e3a None\uff09\u3002\n\n    \"\"\"\n</code></pre>"},{"location":"api/ability_action/#tongsim.entity.ability.impl.action.AgentActionAbility.do_action","title":"do_action","text":"<pre><code>do_action(\n    action: ActionBase | None = None,\n    cancel_on_error: bool = False,\n) -&gt; list[AnimResultInfo] | None\n</code></pre> <p>\u540c\u6b65\u6267\u884c\u6307\u5b9a\u7684 Action \u5bf9\u8c61\uff0c\u5e76\u6536\u96c6 Animation \u7ed3\u679c\u3002</p> <p>\u5982\u679c <code>action</code> \u4e3a None\uff0c\u5219\u6267\u884c\u5f53\u524d\u961f\u5217\u4e2d\u7684\u6240\u6709 Action\u3002</p> <p>Parameters:</p> Name Type Description Default <code>action</code> <code>ActionBase | None</code> <p>\u8981\u6267\u884c\u7684 Action \u5bf9\u8c61\u3002\u5982\u679c\u4e3a None\uff0c\u5219\u6267\u884c\u961f\u5217\u4e2d\u7684\u6240\u6709 Action\u3002</p> <code>None</code> <code>cancel_on_error</code> <code>bool</code> <p>\u9047\u5230\u5f02\u5e38\u65f6\u662f\u5426\u53d6\u6d88\u5269\u4f59 Animation\uff0c\u9ed8\u8ba4\u4e3a False\u3002</p> <code>False</code> <p>Returns:</p> Type Description <code>list[AnimResultInfo] | None</code> <p>list[AnimResultInfo] | None: \u6bcf\u4e2a Animation \u7684\u6267\u884c\u7ed3\u679c\uff0c\u6216 None\uff08\u82e5 action \u4e3a None\uff09\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\action.py</code> <pre><code>def do_action(\n    self, action: ActionBase | None = None, cancel_on_error: bool = False\n) -&gt; list[AnimResultInfo] | None:\n    \"\"\"\n    \u540c\u6b65\u6267\u884c\u6307\u5b9a\u7684 Action \u5bf9\u8c61\uff0c\u5e76\u6536\u96c6 Animation \u7ed3\u679c\u3002\n\n    \u5982\u679c `action` \u4e3a None\uff0c\u5219\u6267\u884c\u5f53\u524d\u961f\u5217\u4e2d\u7684\u6240\u6709 Action\u3002\n\n    Args:\n        action (ActionBase | None): \u8981\u6267\u884c\u7684 Action \u5bf9\u8c61\u3002\u5982\u679c\u4e3a None\uff0c\u5219\u6267\u884c\u961f\u5217\u4e2d\u7684\u6240\u6709 Action\u3002\n        cancel_on_error (bool): \u9047\u5230\u5f02\u5e38\u65f6\u662f\u5426\u53d6\u6d88\u5269\u4f59 Animation\uff0c\u9ed8\u8ba4\u4e3a False\u3002\n\n    Returns:\n        list[AnimResultInfo] | None: \u6bcf\u4e2a Animation \u7684\u6267\u884c\u7ed3\u679c\uff0c\u6216 None\uff08\u82e5 action \u4e3a None\uff09\u3002\n\n    \"\"\"\n</code></pre>"},{"location":"api/ability_action/#tongsim.entity.ability.impl.action.AgentActionAbility.async_get_playable_animation_names","title":"async_get_playable_animation_names  <code>async</code>","text":"<pre><code>async_get_playable_animation_names() -&gt; list[str]\n</code></pre> <p>\u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u667a\u80fd\u4f53\u53ef\u64ad\u653e\u7684\u52a8\u753b\u540d\u79f0\u5217\u8868\u3002</p> <p>Returns:</p> Type Description <code>list[str]</code> <p>list[str]: \u53ef\u7528\u52a8\u753b\u540d\u79f0\u7684\u5b57\u7b26\u4e32\u5217\u8868\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\action.py</code> <pre><code>async def async_get_playable_animation_names(self) -&gt; list[str]:\n    \"\"\"\n    \u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u667a\u80fd\u4f53\u53ef\u64ad\u653e\u7684\u52a8\u753b\u540d\u79f0\u5217\u8868\u3002\n\n    Returns:\n        list[str]: \u53ef\u7528\u52a8\u753b\u540d\u79f0\u7684\u5b57\u7b26\u4e32\u5217\u8868\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_action/#tongsim.entity.ability.impl.action.AgentActionAbility.get_playable_animation_names","title":"get_playable_animation_names","text":"<pre><code>get_playable_animation_names() -&gt; list[str]\n</code></pre> <p>\u83b7\u53d6\u5f53\u524d\u667a\u80fd\u4f53\u53ef\u64ad\u653e\u7684\u52a8\u753b\u540d\u79f0\u5217\u8868\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Returns:</p> Type Description <code>list[str]</code> <p>list[str]: \u53ef\u7528\u52a8\u753b\u540d\u79f0\u7684\u5b57\u7b26\u4e32\u5217\u8868\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\action.py</code> <pre><code>def get_playable_animation_names(self) -&gt; list[str]:\n    \"\"\"\n    \u83b7\u53d6\u5f53\u524d\u667a\u80fd\u4f53\u53ef\u64ad\u653e\u7684\u52a8\u753b\u540d\u79f0\u5217\u8868\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n    Returns:\n        list[str]: \u53ef\u7528\u52a8\u753b\u540d\u79f0\u7684\u5b57\u7b26\u4e32\u5217\u8868\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_action/#tongsim.entity.ability.impl.action.AgentActionAbility.enable_idle_random_anim","title":"enable_idle_random_anim","text":"<pre><code>enable_idle_random_anim(is_enable: bool) -&gt; bool\n</code></pre> <p>\u542f\u7528\u6216\u7981\u7528\u667a\u80fd\u4f53\u7684\u95f2\u7f6e\u72b6\u6001\u968f\u673a\u52a8\u753b\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002</p> <p>\u5f53\u542f\u7528\u540e\uff0c\u667a\u80fd\u4f53\u5728\u6ca1\u6709\u6267\u884c\u5176\u4ed6\u52a8\u4f5c\u65f6\uff0c\u5c06\u81ea\u52a8\u64ad\u653e\u9884\u5b9a\u4e49\u7684\u968f\u673a\u95f2\u7f6e\u52a8\u753b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>is_enable</code> <code>bool</code> <p>\u662f\u5426\u542f\u7528\u968f\u673a\u95f2\u7f6e\u52a8\u753b\u3002True \u8868\u793a\u542f\u7528\uff0cFalse \u8868\u793a\u7981\u7528\u3002</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u64cd\u4f5c\u662f\u5426\u6210\u529f\u3002True \u8868\u793a\u8bbe\u7f6e\u6210\u529f\uff0cFalse \u8868\u793a\u5931\u8d25\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\action.py</code> <pre><code>def enable_idle_random_anim(self, is_enable: bool) -&gt; bool:\n    \"\"\"\n    \u542f\u7528\u6216\u7981\u7528\u667a\u80fd\u4f53\u7684\u95f2\u7f6e\u72b6\u6001\u968f\u673a\u52a8\u753b\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n    \u5f53\u542f\u7528\u540e\uff0c\u667a\u80fd\u4f53\u5728\u6ca1\u6709\u6267\u884c\u5176\u4ed6\u52a8\u4f5c\u65f6\uff0c\u5c06\u81ea\u52a8\u64ad\u653e\u9884\u5b9a\u4e49\u7684\u968f\u673a\u95f2\u7f6e\u52a8\u753b\u3002\n\n    Args:\n        is_enable (bool): \u662f\u5426\u542f\u7528\u968f\u673a\u95f2\u7f6e\u52a8\u753b\u3002True \u8868\u793a\u542f\u7528\uff0cFalse \u8868\u793a\u7981\u7528\u3002\n\n    Returns:\n        bool: \u64cd\u4f5c\u662f\u5426\u6210\u529f\u3002True \u8868\u793a\u8bbe\u7f6e\u6210\u529f\uff0cFalse \u8868\u793a\u5931\u8d25\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_action/#tongsim.entity.ability.impl.action.AgentActionAbility.async_enable_idle_random_anim","title":"async_enable_idle_random_anim  <code>async</code>","text":"<pre><code>async_enable_idle_random_anim(is_enable: bool) -&gt; bool\n</code></pre> <p>\u542f\u7528\u6216\u7981\u7528\u667a\u80fd\u4f53\u7684\u95f2\u7f6e\u72b6\u6001\u968f\u673a\u52a8\u753b\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>\u5f53\u542f\u7528\u540e\uff0c\u667a\u80fd\u4f53\u5728\u6ca1\u6709\u6267\u884c\u5176\u4ed6\u52a8\u4f5c\u65f6\uff0c\u5c06\u81ea\u52a8\u64ad\u653e\u9884\u5b9a\u4e49\u7684\u968f\u673a\u95f2\u7f6e\u52a8\u753b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>is_enable</code> <code>bool</code> <p>\u662f\u5426\u542f\u7528\u968f\u673a\u95f2\u7f6e\u52a8\u753b\u3002True \u8868\u793a\u542f\u7528\uff0cFalse \u8868\u793a\u7981\u7528\u3002</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u64cd\u4f5c\u662f\u5426\u6210\u529f\u3002True \u8868\u793a\u8bbe\u7f6e\u6210\u529f\uff0cFalse \u8868\u793a\u5931\u8d25\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\action.py</code> <pre><code>async def async_enable_idle_random_anim(self, is_enable: bool) -&gt; bool:\n    \"\"\"\n    \u542f\u7528\u6216\u7981\u7528\u667a\u80fd\u4f53\u7684\u95f2\u7f6e\u72b6\u6001\u968f\u673a\u52a8\u753b\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    \u5f53\u542f\u7528\u540e\uff0c\u667a\u80fd\u4f53\u5728\u6ca1\u6709\u6267\u884c\u5176\u4ed6\u52a8\u4f5c\u65f6\uff0c\u5c06\u81ea\u52a8\u64ad\u653e\u9884\u5b9a\u4e49\u7684\u968f\u673a\u95f2\u7f6e\u52a8\u753b\u3002\n\n    Args:\n        is_enable (bool): \u662f\u5426\u542f\u7528\u968f\u673a\u95f2\u7f6e\u52a8\u753b\u3002True \u8868\u793a\u542f\u7528\uff0cFalse \u8868\u793a\u7981\u7528\u3002\n\n    Returns:\n        bool: \u64cd\u4f5c\u662f\u5426\u6210\u529f\u3002True \u8868\u793a\u8bbe\u7f6e\u6210\u529f\uff0cFalse \u8868\u793a\u5931\u8d25\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_action/#tongsim.entity.ability.impl.action.AgentActionAbility.is_action_queue_empty","title":"is_action_queue_empty","text":"<pre><code>is_action_queue_empty() -&gt; bool\n</code></pre> <p>\u5224\u65ad\u5f53\u524d\u667a\u80fd\u4f53\u7684\u52a8\u4f5c\u961f\u5217\u662f\u5426\u4e3a\u7a7a\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002</p> <p>\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u8868\u793a\u5f53\u524d\u6ca1\u6709\u5f85\u6267\u884c\u7684\u52a8\u4f5c\u3002</p> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u82e5\u961f\u5217\u4e3a\u7a7a\u8fd4\u56de True\uff0c\u5426\u5219\u8fd4\u56de False\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\action.py</code> <pre><code>def is_action_queue_empty(self) -&gt; bool:\n    \"\"\"\n    \u5224\u65ad\u5f53\u524d\u667a\u80fd\u4f53\u7684\u52a8\u4f5c\u961f\u5217\u662f\u5426\u4e3a\u7a7a\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n    \u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u8868\u793a\u5f53\u524d\u6ca1\u6709\u5f85\u6267\u884c\u7684\u52a8\u4f5c\u3002\n\n    Returns:\n        bool: \u82e5\u961f\u5217\u4e3a\u7a7a\u8fd4\u56de True\uff0c\u5426\u5219\u8fd4\u56de False\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_action/#tongsim.entity.ability.impl.action.AgentActionAbility.async_is_action_queue_empty","title":"async_is_action_queue_empty  <code>async</code>","text":"<pre><code>async_is_action_queue_empty() -&gt; bool\n</code></pre> <p>\u5224\u65ad\u5f53\u524d\u667a\u80fd\u4f53\u7684\u52a8\u4f5c\u961f\u5217\u662f\u5426\u4e3a\u7a7a\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u8868\u793a\u5f53\u524d\u6ca1\u6709\u5f85\u6267\u884c\u7684\u52a8\u4f5c\u3002</p> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u82e5\u961f\u5217\u4e3a\u7a7a\u8fd4\u56de True\uff0c\u5426\u5219\u8fd4\u56de False\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\action.py</code> <pre><code>async def async_is_action_queue_empty(self) -&gt; bool:\n    \"\"\"\n    \u5224\u65ad\u5f53\u524d\u667a\u80fd\u4f53\u7684\u52a8\u4f5c\u961f\u5217\u662f\u5426\u4e3a\u7a7a\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    \u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u8868\u793a\u5f53\u524d\u6ca1\u6709\u5f85\u6267\u884c\u7684\u52a8\u4f5c\u3002\n\n    Returns:\n        bool: \u82e5\u961f\u5217\u4e3a\u7a7a\u8fd4\u56de True\uff0c\u5426\u5219\u8fd4\u56de False\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_action/#tongsim.entity.ability.impl.action.AgentActionAbility.get_agent_action_status","title":"get_agent_action_status","text":"<pre><code>get_agent_action_status() -&gt; dict\n</code></pre> <p>\u83b7\u53d6\u5f53\u524d\u667a\u80fd\u4f53\u7684\u52a8\u4f5c\u72b6\u6001\u4fe1\u606f\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>\u52a8\u4f5c\u72b6\u6001\u4fe1\u606f\u5b57\u5178</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\action.py</code> <pre><code>def get_agent_action_status(self) -&gt; dict:\n    \"\"\"\n    \u83b7\u53d6\u5f53\u524d\u667a\u80fd\u4f53\u7684\u52a8\u4f5c\u72b6\u6001\u4fe1\u606f\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n    Returns:\n        dict: \u52a8\u4f5c\u72b6\u6001\u4fe1\u606f\u5b57\u5178\n    \"\"\"\n</code></pre>"},{"location":"api/ability_action/#tongsim.entity.ability.impl.action.AgentActionAbility.async_get_agent_action_status","title":"async_get_agent_action_status  <code>async</code>","text":"<pre><code>async_get_agent_action_status() -&gt; dict\n</code></pre> <p>\u83b7\u53d6\u5f53\u524d\u667a\u80fd\u4f53\u7684\u52a8\u4f5c\u72b6\u6001\u4fe1\u606f\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>\u52a8\u4f5c\u72b6\u6001\u4fe1\u606f\u5b57\u5178</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\action.py</code> <pre><code>async def async_get_agent_action_status(self) -&gt; dict:\n    \"\"\"\n    \u83b7\u53d6\u5f53\u524d\u667a\u80fd\u4f53\u7684\u52a8\u4f5c\u72b6\u6001\u4fe1\u606f\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    Returns:\n        dict: \u52a8\u4f5c\u72b6\u6001\u4fe1\u606f\u5b57\u5178\n    \"\"\"\n</code></pre>"},{"location":"api/ability_action/#tongsim.entity.ability.impl.action.AgentActionAbility.get_taking_entity_id","title":"get_taking_entity_id","text":"<pre><code>get_taking_entity_id(\n    which_hand: AnimCmdHandType,\n) -&gt; str | None\n</code></pre> <p>\u83b7\u53d6\u6307\u5b9a\u624b\u4e0a\u5f53\u524d\u62ff\u7740\u7684\u5bf9\u8c61 ID\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Parameters:</p> Name Type Description Default <code>which_hand</code> <code>AnimCmdHandType</code> <p>\u54ea\u53ea\u624b</p> required <p>Returns:</p> Type Description <code>str | None</code> <p>str | None: \u88ab\u62ff\u53d6\u5bf9\u8c61\u7684\u5b9e\u4f53 ID\uff0c\u82e5\u672a\u62ff\u53d6\u4efb\u4f55\u5bf9\u8c61\u5219\u8fd4\u56de None\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\action.py</code> <pre><code>def get_taking_entity_id(self, which_hand: AnimCmdHandType) -&gt; str | None:\n    \"\"\"\n    \u83b7\u53d6\u6307\u5b9a\u624b\u4e0a\u5f53\u524d\u62ff\u7740\u7684\u5bf9\u8c61 ID\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n    Args:\n        which_hand (AnimCmdHandType): \u54ea\u53ea\u624b\n\n    Returns:\n        str | None: \u88ab\u62ff\u53d6\u5bf9\u8c61\u7684\u5b9e\u4f53 ID\uff0c\u82e5\u672a\u62ff\u53d6\u4efb\u4f55\u5bf9\u8c61\u5219\u8fd4\u56de None\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_action/#tongsim.entity.ability.impl.action.AgentActionAbility.async_get_taking_entity_id","title":"async_get_taking_entity_id  <code>async</code>","text":"<pre><code>async_get_taking_entity_id(\n    which_hand: AnimCmdHandType,\n) -&gt; str | None\n</code></pre> <p>\u83b7\u53d6\u6307\u5b9a\u624b\u4e0a\u5f53\u524d\u62ff\u7740\u7684\u5bf9\u8c61 ID\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Parameters:</p> Name Type Description Default <code>which_hand</code> <code>AnimCmdHandType</code> <p>\u54ea\u53ea\u624b</p> required <p>Returns:     str | None: \u88ab\u62ff\u53d6\u5bf9\u8c61\u7684\u5b9e\u4f53 ID\uff0c\u82e5\u672a\u62ff\u53d6\u4efb\u4f55\u5bf9\u8c61\u5219\u8fd4\u56de None\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\action.py</code> <pre><code>async def async_get_taking_entity_id(\n    self, which_hand: AnimCmdHandType\n) -&gt; str | None:\n    \"\"\"\n    \u83b7\u53d6\u6307\u5b9a\u624b\u4e0a\u5f53\u524d\u62ff\u7740\u7684\u5bf9\u8c61 ID\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    Args:\n        which_hand (AnimCmdHandType): \u54ea\u53ea\u624b\n    Returns:\n        str | None: \u88ab\u62ff\u53d6\u5bf9\u8c61\u7684\u5b9e\u4f53 ID\uff0c\u82e5\u672a\u62ff\u53d6\u4efb\u4f55\u5bf9\u8c61\u5219\u8fd4\u56de None\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_action/#tongsim.entity.ability.impl.action.AgentActionAbility.set_emotion","title":"set_emotion","text":"<pre><code>set_emotion(emotion: dict) -&gt; None\n</code></pre> <p>\u8bbe\u7f6e\u667a\u80fd\u4f53\u7684\u60c5\u7eea\u72b6\u6001\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Parameters:</p> Name Type Description Default <code>emotion</code> <code>dict</code> <p>\u60c5\u7eea\u72b6\u6001\u7684\u5b57\u5178\u8868\u793a\u3002\u652f\u6301\u7684\u60c5\u7eea\u7c7b\u578b[\"happy\", \"angry\", \"horror\", \"sad\",\"disgust\",\"surprise\",\"worry\"],\u8303\u56f4\u5728[0,1]\u4e4b\u95f4</p> required Source code in <code>src\\tongsim\\entity\\ability\\impl\\action.py</code> <pre><code>def set_emotion(self, emotion: dict) -&gt; None:\n    \"\"\"\n    \u8bbe\u7f6e\u667a\u80fd\u4f53\u7684\u60c5\u7eea\u72b6\u6001\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n    Args:\n        emotion (dict): \u60c5\u7eea\u72b6\u6001\u7684\u5b57\u5178\u8868\u793a\u3002\u652f\u6301\u7684\u60c5\u7eea\u7c7b\u578b[\"happy\", \"angry\", \"horror\", \"sad\",\"disgust\",\"surprise\",\"worry\"],\u8303\u56f4\u5728[0,1]\u4e4b\u95f4\n    \"\"\"\n</code></pre>"},{"location":"api/ability_action/#tongsim.entity.ability.impl.action.AgentActionAbility.async_set_emotion","title":"async_set_emotion  <code>async</code>","text":"<pre><code>async_set_emotion(emotion: dict) -&gt; None\n</code></pre> <p>\u8bbe\u7f6e\u667a\u80fd\u4f53\u7684\u60c5\u7eea\u72b6\u6001\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Parameters:</p> Name Type Description Default <code>emotion</code> <code>dict</code> <p>\u60c5\u7eea\u72b6\u6001\u7684\u5b57\u5178\u8868\u793a\u3002\u652f\u6301\u7684\u60c5\u7eea\u7c7b\u578b[\"happy\", \"angry\", \"horror\", \"sad\",\"disgust\",\"surprise\",\"worry\"]\uff0c\u8303\u56f4\u5728[0,1]\u4e4b\u95f4</p> required Source code in <code>src\\tongsim\\entity\\ability\\impl\\action.py</code> <pre><code>async def async_set_emotion(self, emotion: dict) -&gt; None:\n    \"\"\"\n    \u8bbe\u7f6e\u667a\u80fd\u4f53\u7684\u60c5\u7eea\u72b6\u6001\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    Args:\n        emotion (dict): \u60c5\u7eea\u72b6\u6001\u7684\u5b57\u5178\u8868\u793a\u3002\u652f\u6301\u7684\u60c5\u7eea\u7c7b\u578b[\"happy\", \"angry\", \"horror\", \"sad\",\"disgust\",\"surprise\",\"worry\"]\uff0c\u8303\u56f4\u5728[0,1]\u4e4b\u95f4\n    \"\"\"\n</code></pre>"},{"location":"api/ability_action/#tongsim.entity.ability.impl.action.AgentActionAbility.set_enable_physics_body","title":"set_enable_physics_body","text":"<pre><code>set_enable_physics_body(is_enable: bool) -&gt; bool\n</code></pre> <p>\u8bbe\u5b9a\u662f\u5426\u5f00\u542f\u4eba\u7269\u7684\u7269\u7406\u78b0\u649e\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Parameters:</p> Name Type Description Default <code>is_enable</code> <code>bool</code> <p>\u662f\u5426\u5f00\u542f\u3002</p> required <p>Returns:</p> Type Description <code>bool</code> <p>\u662f\u5426\u6210\u529f\u8bbe\u7f6e\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\action.py</code> <pre><code>def set_enable_physics_body(self, is_enable: bool) -&gt; bool:\n    \"\"\"\n    \u8bbe\u5b9a\u662f\u5426\u5f00\u542f\u4eba\u7269\u7684\u7269\u7406\u78b0\u649e\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n    Args:\n        is_enable (bool): \u662f\u5426\u5f00\u542f\u3002\n\n    Returns:\n        \u662f\u5426\u6210\u529f\u8bbe\u7f6e\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_action/#tongsim.entity.ability.impl.action.AgentActionAbility.async_set_enable_physics_body","title":"async_set_enable_physics_body  <code>async</code>","text":"<pre><code>async_set_enable_physics_body(is_enable: bool) -&gt; bool\n</code></pre> <p>\u8bbe\u5b9a\u662f\u5426\u5f00\u542f\u4eba\u7269\u7684\u7269\u7406\u78b0\u649e\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Parameters:</p> Name Type Description Default <code>is_enable</code> <code>bool</code> <p>\u662f\u5426\u5f00\u542f\u3002</p> required <p>Returns:</p> Type Description <code>bool</code> <p>\u662f\u5426\u6210\u529f\u8bbe\u7f6e\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\action.py</code> <pre><code>async def async_set_enable_physics_body(self, is_enable: bool) -&gt; bool:\n    \"\"\"\n    \u8bbe\u5b9a\u662f\u5426\u5f00\u542f\u4eba\u7269\u7684\u7269\u7406\u78b0\u649e\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    Args:\n        is_enable (bool): \u662f\u5426\u5f00\u542f\u3002\n\n    Returns:\n        \u662f\u5426\u6210\u529f\u8bbe\u7f6e\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_action/#tongsim.entity.ability.impl.action.AgentActionAbility.set_move_ability","title":"set_move_ability","text":"<pre><code>set_move_ability(\n    walk_speed: float,\n    run_speed: float,\n    jump_z_velocity: float,\n    crouch_speed: float,\n    move_friction: float = 0.5,\n) -&gt; bool\n</code></pre> <p>\u8bbe\u7f6e\u8fd0\u52a8\u53c2\u6570\uff08\u540c\u6b65\u63a5\u53e3\uff09\u53ea\u9002\u7528\u4e8eInputAnimation\u52a8\u4f5c\u7684\u72b6\u6001\u3002</p> <p>Parameters:</p> Name Type Description Default <code>walk_speed</code> <code>float</code> <p>\u884c\u8d70\u901f\u5ea6</p> required <code>run_speed</code> <code>float</code> <p>\u5954\u8dd1\u901f\u5ea6</p> required <code>jump_z_velocity</code> <code>float</code> <p>\u8df3\u8dc3z\u8f74\u521d\u901f\u5ea6</p> required <code>crouch_speed</code> <code>float</code> <p>\u8e72\u4f0f\u79fb\u52a8\u901f\u5ea6</p> required <code>move_friction</code> <code>float</code> <p>\u649e\u5230\u969c\u788d\u7269\u540e\u7684\u6469\u64e6\u7cfb\u6570</p> <code>0.5</code> Source code in <code>src\\tongsim\\entity\\ability\\impl\\action.py</code> <pre><code>def set_move_ability(\n    self,\n    walk_speed: float,\n    run_speed: float,\n    jump_z_velocity: float,\n    crouch_speed: float,\n    move_friction: float = 0.5,\n) -&gt; bool:\n    \"\"\"\n    \u8bbe\u7f6e\u8fd0\u52a8\u53c2\u6570\uff08\u540c\u6b65\u63a5\u53e3\uff09\u53ea\u9002\u7528\u4e8eInputAnimation\u52a8\u4f5c\u7684\u72b6\u6001\u3002\n\n    Args:\n         walk_speed (float): \u884c\u8d70\u901f\u5ea6\n         run_speed (float): \u5954\u8dd1\u901f\u5ea6\n         jump_z_velocity (float): \u8df3\u8dc3z\u8f74\u521d\u901f\u5ea6\n         crouch_speed (float): \u8e72\u4f0f\u79fb\u52a8\u901f\u5ea6\n         move_friction (float): \u649e\u5230\u969c\u788d\u7269\u540e\u7684\u6469\u64e6\u7cfb\u6570\n    \"\"\"\n</code></pre>"},{"location":"api/ability_action/#tongsim.entity.ability.impl.action.AgentActionAbility.async_set_move_ability","title":"async_set_move_ability  <code>async</code>","text":"<pre><code>async_set_move_ability(\n    walk_speed: float,\n    run_speed: float,\n    jump_z_velocity: float,\n    crouch_speed: float,\n    move_friction: float = 0.5,\n) -&gt; bool\n</code></pre> <p>\u8bbe\u7f6e\u8fd0\u52a8\u53c2\u6570\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u53ea\u9002\u7528\u4e8eInputAnimation\u52a8\u4f5c\u7684\u72b6\u6001\u3002</p> <p>Parameters:</p> Name Type Description Default <code>walk_speed</code> <code>float</code> <p>\u884c\u8d70\u901f\u5ea6</p> required <code>run_speed</code> <code>float</code> <p>\u5954\u8dd1\u901f\u5ea6</p> required <code>jump_z_velocity</code> <code>float</code> <p>\u8df3\u8dc3z\u8f74\u521d\u901f\u5ea6</p> required <code>crouch_speed</code> <code>float</code> <p>\u8e72\u4f0f\u79fb\u52a8\u901f\u5ea6</p> required <code>move_friction</code> <code>float</code> <p>\u649e\u5230\u969c\u788d\u7269\u540e\u7684\u6469\u64e6\u7cfb\u6570</p> <code>0.5</code> Source code in <code>src\\tongsim\\entity\\ability\\impl\\action.py</code> <pre><code>async def async_set_move_ability(\n    self,\n    walk_speed: float,\n    run_speed: float,\n    jump_z_velocity: float,\n    crouch_speed: float,\n    move_friction: float = 0.5,\n) -&gt; bool:\n    \"\"\"\n    \u8bbe\u7f6e\u8fd0\u52a8\u53c2\u6570\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u53ea\u9002\u7528\u4e8eInputAnimation\u52a8\u4f5c\u7684\u72b6\u6001\u3002\n\n    Args:\n         walk_speed (float): \u884c\u8d70\u901f\u5ea6\n         run_speed (float): \u5954\u8dd1\u901f\u5ea6\n         jump_z_velocity (float): \u8df3\u8dc3z\u8f74\u521d\u901f\u5ea6\n         crouch_speed (float): \u8e72\u4f0f\u79fb\u52a8\u901f\u5ea6\n         move_friction (float): \u649e\u5230\u969c\u788d\u7269\u540e\u7684\u6469\u64e6\u7cfb\u6570\n    \"\"\"\n</code></pre>"},{"location":"api/ability_asset/","title":"\ud83c\udff7\ufe0f Entity \u8d44\u4ea7\u80fd\u529b","text":""},{"location":"api/ability_asset/#tongsim.entity.ability.impl.asset","title":"tongsim.entity.ability.impl.asset","text":"<p>tongsim.entity.ability.impl.asset</p>"},{"location":"api/ability_asset/#tongsim.entity.ability.impl.asset.AssetAbility","title":"AssetAbility","text":"<p>               Bases: <code>Protocol</code></p> <p>\u63d0\u4f9b\u5bf9\u8c61\u7684\u8d44\u4ea7\u914d\u7f6e\u4fe1\u606f\u7684\u83b7\u53d6\u63a5\u53e3\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\asset.py</code> <pre><code>class AssetAbility(Protocol):\n    \"\"\"\n    \u63d0\u4f9b\u5bf9\u8c61\u7684\u8d44\u4ea7\u914d\u7f6e\u4fe1\u606f\u7684\u83b7\u53d6\u63a5\u53e3\u3002\n    \"\"\"\n\n    def get_asset_name(self) -&gt; str:\n        \"\"\"\n        \u83b7\u53d6\u5bf9\u8c61\u7ed1\u5b9a\u7684\u8d44\u4ea7\u540d\u79f0\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n        Returns:\n            str: \u8d44\u4ea7\u540d\u79f0\n        \"\"\"\n\n    async def async_get_asset_name(self) -&gt; str:\n        \"\"\"\n        \u83b7\u53d6\u5bf9\u8c61\u7ed1\u5b9a\u7684\u8d44\u4ea7\u540d\u79f0\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        Returns:\n            str: \u8d44\u4ea7\u540d\u79f0\n        \"\"\"\n\n    def get_type(self) -&gt; str:\n        \"\"\"\n        \u83b7\u53d6\u8be5\u5bf9\u8c61\u7684\u914d\u7f6e\u7684\u7c7b\u578b\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n        Returns:\n            str: \u7c7b\u578b\u540d\u79f0\n        \"\"\"\n\n    async def async_get_type(self) -&gt; str:\n        \"\"\"\n        \u83b7\u53d6\u8be5\u5bf9\u8c61\u914d\u7f6e\u7684\u7c7b\u578b\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        Returns:\n            str: \u7c7b\u578b\u540d\u79f0\n        \"\"\"\n</code></pre>"},{"location":"api/ability_asset/#tongsim.entity.ability.impl.asset.AssetAbility.get_asset_name","title":"get_asset_name","text":"<pre><code>get_asset_name() -&gt; str\n</code></pre> <p>\u83b7\u53d6\u5bf9\u8c61\u7ed1\u5b9a\u7684\u8d44\u4ea7\u540d\u79f0\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>\u8d44\u4ea7\u540d\u79f0</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\asset.py</code> <pre><code>def get_asset_name(self) -&gt; str:\n    \"\"\"\n    \u83b7\u53d6\u5bf9\u8c61\u7ed1\u5b9a\u7684\u8d44\u4ea7\u540d\u79f0\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n    Returns:\n        str: \u8d44\u4ea7\u540d\u79f0\n    \"\"\"\n</code></pre>"},{"location":"api/ability_asset/#tongsim.entity.ability.impl.asset.AssetAbility.async_get_asset_name","title":"async_get_asset_name  <code>async</code>","text":"<pre><code>async_get_asset_name() -&gt; str\n</code></pre> <p>\u83b7\u53d6\u5bf9\u8c61\u7ed1\u5b9a\u7684\u8d44\u4ea7\u540d\u79f0\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>\u8d44\u4ea7\u540d\u79f0</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\asset.py</code> <pre><code>async def async_get_asset_name(self) -&gt; str:\n    \"\"\"\n    \u83b7\u53d6\u5bf9\u8c61\u7ed1\u5b9a\u7684\u8d44\u4ea7\u540d\u79f0\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    Returns:\n        str: \u8d44\u4ea7\u540d\u79f0\n    \"\"\"\n</code></pre>"},{"location":"api/ability_asset/#tongsim.entity.ability.impl.asset.AssetAbility.get_type","title":"get_type","text":"<pre><code>get_type() -&gt; str\n</code></pre> <p>\u83b7\u53d6\u8be5\u5bf9\u8c61\u7684\u914d\u7f6e\u7684\u7c7b\u578b\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>\u7c7b\u578b\u540d\u79f0</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\asset.py</code> <pre><code>def get_type(self) -&gt; str:\n    \"\"\"\n    \u83b7\u53d6\u8be5\u5bf9\u8c61\u7684\u914d\u7f6e\u7684\u7c7b\u578b\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n    Returns:\n        str: \u7c7b\u578b\u540d\u79f0\n    \"\"\"\n</code></pre>"},{"location":"api/ability_asset/#tongsim.entity.ability.impl.asset.AssetAbility.async_get_type","title":"async_get_type  <code>async</code>","text":"<pre><code>async_get_type() -&gt; str\n</code></pre> <p>\u83b7\u53d6\u8be5\u5bf9\u8c61\u914d\u7f6e\u7684\u7c7b\u578b\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>\u7c7b\u578b\u540d\u79f0</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\asset.py</code> <pre><code>async def async_get_type(self) -&gt; str:\n    \"\"\"\n    \u83b7\u53d6\u8be5\u5bf9\u8c61\u914d\u7f6e\u7684\u7c7b\u578b\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    Returns:\n        str: \u7c7b\u578b\u540d\u79f0\n    \"\"\"\n</code></pre>"},{"location":"api/ability_camera/","title":"\ud83c\udff7\ufe0f \u56fe\u50cf\u83b7\u53d6\u80fd\u529b","text":""},{"location":"api/ability_camera/#tongsim.entity.ability.impl.camera","title":"tongsim.entity.ability.impl.camera","text":""},{"location":"api/ability_camera/#tongsim.entity.ability.impl.camera.CameraAbility","title":"CameraAbility","text":"<p>               Bases: <code>Protocol</code></p> <p>\u76f8\u673a\u80fd\u529b\u63a5\u53e3\u5b9a\u4e49\uff0c\u5305\u62ec: - \u76f8\u673a\u6302\u8f7d - \u5185\u53c2\u914d\u7f6e - \u56fe\u50cf\u6570\u636e\u91c7\u96c6\uff08\u5f53\u524d\u5e27\u3001\u5386\u53f2\u5e27\u3001\u6d41\uff09 - \u53ef\u89c1\u7269\u4f53\u68c0\u6d4b\u7ed3\u679c\u8bbf\u95ee\u7b49\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\camera.py</code> <pre><code>class CameraAbility(Protocol):\n    \"\"\"\n    \u76f8\u673a\u80fd\u529b\u63a5\u53e3\u5b9a\u4e49\uff0c\u5305\u62ec:\n    - \u76f8\u673a\u6302\u8f7d\n    - \u5185\u53c2\u914d\u7f6e\n    - \u56fe\u50cf\u6570\u636e\u91c7\u96c6\uff08\u5f53\u524d\u5e27\u3001\u5386\u53f2\u5e27\u3001\u6d41\uff09\n    - \u53ef\u89c1\u7269\u4f53\u68c0\u6d4b\u7ed3\u679c\u8bbf\u95ee\u7b49\u3002\n    \"\"\"\n\n    def attach_to_target_socket(self, target_id: str, socket_name: str) -&gt; bool:\n        \"\"\"\n        \u5c06\u5f53\u524d\u76f8\u673a\u6302\u8f7d\u5230\u76ee\u6807 Entity \u7684\u6307\u5b9a socket \u4e0a\u3002\n\n        Args:\n            target_id (str): \u76ee\u6807\u5b9e\u4f53 ID\n            socket_name (str): \u76ee\u6807 socket \u540d\u79f0\u3002\u5e38\u7528socket:[\"MidCameraSocket\",\"LeftCameraSocket\",\"RightCameraSocket\"]\n\n        Returns:\n            bool: \u662f\u5426\u6210\u529f\u6302\u8f7d\u3002\n        \"\"\"\n\n    def set_intrinsic_params(self, fov: float, width: int, height: int) -&gt; bool:\n        \"\"\"\n        \u8bbe\u7f6e\u76f8\u673a\u7684\u5185\u53c2\uff0c\u5305\u62ec\u89c6\u573a\u89d2\u3001\u5206\u8fa8\u7387\u7b49\u3002\n\n        Args:\n            fov (float): \u76f8\u673a\u7684\u89c6\u573a\u89d2\uff08Field of View\uff09\u3002\n            width (int): \u56fe\u50cf\u5bbd\u5ea6\uff08\u5355\u4f4d: \u50cf\u7d20\uff09\u3002\n            height (int): \u56fe\u50cf\u9ad8\u5ea6\uff08\u5355\u4f4d: \u50cf\u7d20\uff09\u3002\n\n        Returns:\n            bool: \u662f\u5426\u8bbe\u7f6e\u6210\u529f\u3002\n        \"\"\"\n\n    def get_intrinsic_params(self) -&gt; CameraIntrinsic:\n        \"\"\"\n        \u83b7\u53d6\u5f53\u524d\u76f8\u673a\u7684\u5185\u53c2\u914d\u7f6e\u3002\n\n        Returns:\n            CameraIntrinsic: \u5305\u542b fov\u3001width \u548c height \u7684\u5185\u53c2\u4fe1\u606f\u3002\n        \"\"\"\n\n    def start_imagedata_streaming(\n        self,\n        rgb: bool = True,\n        depth: bool = False,\n        segmentation: bool = False,\n        mirror_segmentation: bool = False,\n        visible_object_list: bool = False,\n    ) -&gt; None:\n        \"\"\"\n        \u542f\u52a8\u56fe\u50cf\u6570\u636e\u6d41\u63a5\u6536\u4efb\u52a1\u3002\n\n        \u542f\u52a8\u540e\uff0c\u5c06\u6301\u7eed\u63a5\u6536\u6765\u81ea\u670d\u52a1\u5668\u7684\u56fe\u50cf\u5e27\u6570\u636e\uff0c\u5e76\u7f13\u5b58\u6700\u8fd1\u4e00\u5e27\u3002\n\n        Args:\n            rgb (bool): \u662f\u5426\u63a5\u6536 RGB \u56fe\u50cf\u6570\u636e\u3002\n            depth (bool): \u662f\u5426\u63a5\u6536\u6df1\u5ea6\u56fe\u50cf\u3002\n            segmentation (bool): \u662f\u5426\u63a5\u6536\u5206\u5272\u56fe\u50cf\u3002\n            mirror_segmentation (bool): \u662f\u5426\u63a5\u6536\u955c\u5b50\u4e2d\u7684\u5206\u5272\u56fe\u50cf\u3002\n            visible_object_list (bool): \u662f\u5426\u63a5\u6536\u53ef\u89c1\u7269\u4f53\u5217\u8868\u3002\n        \"\"\"\n\n    def stop_imagedata_streaming(self) -&gt; bool:\n        \"\"\"\n        \u505c\u6b62\u56fe\u50cf\u6570\u636e\u6d41\u63a5\u6536\u4efb\u52a1\uff08\u6682\u672a\u5b9e\u73b0\uff09\u3002\n\n        Returns:\n            bool: \u505c\u6b62\u662f\u5426\u6210\u529f\u3002\n        \"\"\"\n\n    def fetch_image_data_from_streaming(self) -&gt; CameraImageWrapper | None:\n        \"\"\"\n        \u4ece\u56fe\u50cf\u6570\u636e\u6d41\u4e2d\u83b7\u53d6\u6700\u8fd1\u4e00\u5e27\u7684\u5b8c\u6574\u56fe\u50cf\u6570\u636e\u5c01\u88c5\u3002\n\n        \u8fd4\u56de:\n            CameraImageWrapper | None: \u56fe\u50cf\u6570\u636e\u5c01\u88c5\u5bf9\u8c61\uff0c\u5305\u542b RGB\u3001\u6df1\u5ea6\u3001\u5206\u5272\u3001\u53ef\u89c1\u7269\u4f53\u4fe1\u606f\u7b49\uff1b\n                                    \u82e5\u5f53\u524d\u5c1a\u672a\u63a5\u6536\u5230\u4efb\u4f55\u56fe\u50cf\u5e27\uff0c\u5219\u8fd4\u56de None\u3002\n        \"\"\"\n\n    def fetch_rgb_from_streaming(\n        self, deep_copy: bool = False\n    ) -&gt; memoryview | bytes | None:\n        \"\"\"\n        \u4ece\u56fe\u50cf\u6570\u636e\u6d41\u4e2d\u83b7\u53d6\u6700\u8fd1\u63a5\u6536\u5230\u7684 RGB \u56fe\u50cf\u5e27\u3002\n\n        Args:\n            deep_copy (bool): \u662f\u5426\u8fd4\u56de\u6df1\u62f7\u8d1d\u526f\u672c\u3002\n\n        Returns:\n            memoryview | bytes | None: RGB \u56fe\u50cf\u6570\u636e\uff08\u5982\u679c\u5b58\u5728\uff09\u3002\n        \"\"\"\n\n    def fetch_depth_from_streaming(\n        self, deep_copy: bool = False\n    ) -&gt; memoryview | bytes | None:\n        \"\"\"\n        \u4ece\u56fe\u50cf\u6570\u636e\u6d41\u4e2d\u83b7\u53d6\u6700\u8fd1\u63a5\u6536\u5230\u7684\u6df1\u5ea6\u56fe\u50cf\u5e27\u3002\n\n        Args:\n            deep_copy (bool): \u662f\u5426\u8fd4\u56de\u6df1\u62f7\u8d1d\u526f\u672c\u3002\n\n        Returns:\n            memoryview | bytes | None: \u6df1\u5ea6\u56fe\u50cf\u6570\u636e\uff08\u5982\u679c\u5b58\u5728\uff09\u3002\n        \"\"\"\n\n    def fetch_segmentation_from_streaming(\n        self, deep_copy: bool = False\n    ) -&gt; memoryview | bytes | None:\n        \"\"\"\n        \u4ece\u56fe\u50cf\u6570\u636e\u6d41\u4e2d\u83b7\u53d6\u6700\u8fd1\u63a5\u6536\u5230\u7684\u5206\u5272\u56fe\u50cf\u5e27\u3002\n\n        Args:\n            deep_copy (bool): \u662f\u5426\u8fd4\u56de\u6df1\u62f7\u8d1d\u526f\u672c\u3002\n\n        Returns:\n            memoryview | bytes | None: \u5206\u5272\u56fe\u50cf\u6570\u636e\uff08\u5982\u679c\u5b58\u5728\uff09\u3002\n        \"\"\"\n\n    def fetch_mirror_segmentation_from_streaming(\n        self, deep_copy: bool = False\n    ) -&gt; memoryview | bytes | None:\n        \"\"\"\n        \u4ece\u56fe\u50cf\u6570\u636e\u6d41\u4e2d\u83b7\u53d6\u6700\u8fd1\u63a5\u6536\u5230\u7684\u955c\u5b50\u4e2d\u7684\u5206\u5272\u56fe\u50cf\u5e27\u3002\n\n        Args:\n            deep_copy (bool): \u662f\u5426\u8fd4\u56de\u6df1\u62f7\u8d1d\u526f\u672c\u3002\n\n        Returns:\n            memoryview | bytes | None: \u955c\u5b50\u4e2d\u7684\u5206\u5272\u56fe\u50cf\u6570\u636e\uff08\u5982\u679c\u5b58\u5728\uff09\u3002\n        \"\"\"\n\n    def fetch_visible_object_list_from_streaming(\n        self,\n    ) -&gt; list[VisibleObjectInfo] | None:\n        \"\"\"\n        \u4ece\u56fe\u50cf\u6570\u636e\u6d41\u4e2d\u83b7\u53d6\u6700\u8fd1\u4e00\u5e27\u56fe\u50cf\u6570\u636e\u4e2d\u68c0\u6d4b\u5230\u7684\u53ef\u89c1\u7269\u4f53\u4fe1\u606f\u5217\u8868\u3002\n\n        Returns:\n            list[VisibleObjectInfo] | None: \u53ef\u89c1\u7269\u4f53\u4fe1\u606f\u5217\u8868\uff0c\u82e5\u5c1a\u672a\u63a5\u6536\u6216\u672a\u542f\u7528\u5219\u4e3a None\u3002\n        \"\"\"\n\n    def get_current_imageshot(\n        self,\n        rgb: bool = True,\n        depth: bool = False,\n        segmentation: bool = False,\n        mirror_segmentation: bool = False,\n        visible_object_list: bool = False,\n    ) -&gt; CameraImageWrapper | None:\n        \"\"\"\n        \u4ee5\u540c\u6b65\u65b9\u5f0f\u8bf7\u6c42\u5f53\u524d\u56fe\u50cf\u5e27\uff08\u4e00\u6b21\u6027\u6293\u62cd\uff09\u3002\n\n        Args:\n            rgb (bool): \u662f\u5426\u83b7\u53d6 RGB \u56fe\u50cf\u3002\n            depth (bool): \u662f\u5426\u83b7\u53d6\u6df1\u5ea6\u56fe\u50cf\u3002\n            segmentation (bool): \u662f\u5426\u83b7\u53d6\u8bed\u4e49\u5206\u5272\u56fe\u50cf\u3002\n            mirror_segmentation (bool): \u662f\u5426\u83b7\u53d6\u955c\u50cf\u5206\u5272\u56fe\u50cf\u3002\n            visible_object_list (bool): \u662f\u5426\u5305\u542b\u53ef\u89c1\u7269\u4f53\u5217\u8868\u3002\n\n        Returns:\n            CameraImageWrapper | None: \u5305\u542b\u56fe\u50cf\u5185\u5bb9\u7684\u5c01\u88c5\u5bf9\u8c61\uff0c\u82e5\u5931\u8d25\u5219\u4e3a None\u3002\n        \"\"\"\n\n    async def async_get_current_imageshot(\n        self,\n        rgb: bool = True,\n        depth: bool = False,\n        segmentation: bool = False,\n        mirror_segmentation: bool = False,\n        visible_object_list: bool = False,\n    ) -&gt; CameraImageWrapper | None:\n        \"\"\"\n        \u4ee5\u5f02\u6b65\u65b9\u5f0f\u8bf7\u6c42\u5f53\u524d\u56fe\u50cf\u5e27\uff08\u4e00\u6b21\u6027\u6293\u62cd\uff09\u3002\n\n        Args:\n            rgb (bool): \u662f\u5426\u83b7\u53d6 RGB \u56fe\u50cf\u3002\n            depth (bool): \u662f\u5426\u83b7\u53d6\u6df1\u5ea6\u56fe\u50cf\u3002\n            segmentation (bool): \u662f\u5426\u83b7\u53d6\u8bed\u4e49\u5206\u5272\u56fe\u50cf\u3002\n            mirror_segmentation (bool): \u662f\u5426\u83b7\u53d6\u955c\u50cf\u5206\u5272\u56fe\u50cf\u3002\n            visible_object_list (bool): \u662f\u5426\u5305\u542b\u53ef\u89c1\u7269\u4f53\u5217\u8868\u3002\n\n        Returns:\n            CameraImageWrapper | None: \u5305\u542b\u56fe\u50cf\u5185\u5bb9\u7684\u5c01\u88c5\u5bf9\u8c61\uff0c\u82e5\u5931\u8d25\u5219\u4e3a None\u3002\n        \"\"\"\n\n    async def async_subscribe_imagedata(\n        self,\n        rgb: bool = True,\n        depth: bool = False,\n        segmentation: bool = False,\n        mirror_segmentation: bool = False,\n        visible_object_list: bool = False,\n    ) -&gt; AsyncIterator[CameraImageWrapper]:\n        \"\"\"\n        \u5f02\u6b65\u8ba2\u9605\u56fe\u50cf\u6570\u636e\u6d41\uff0c\u8fd4\u56de\u4e00\u4e2a\u5f02\u6b65\u8fed\u4ee3\u5668\uff0c\u9010\u5e27\u8fd4\u56de\u56fe\u50cf\u3002\n\n        Args:\n            rgb (bool): \u662f\u5426\u8ba2\u9605 RGB \u56fe\u50cf\u3002\n            depth (bool): \u662f\u5426\u8ba2\u9605\u6df1\u5ea6\u56fe\u50cf\u3002\n            segmentation (bool): \u662f\u5426\u8ba2\u9605\u8bed\u4e49\u5206\u5272\u56fe\u50cf\u3002\n            mirror_segmentation (bool): \u662f\u5426\u8ba2\u9605\u955c\u50cf\u5206\u5272\u56fe\u50cf\u3002\n            visible_object_list (bool): \u662f\u5426\u8ba2\u9605\u53ef\u89c1\u7269\u4f53\u5217\u8868\u3002\n\n        Returns:\n            AsyncIterator[CameraImageWrapper]: \u56fe\u50cf\u5e27\u5f02\u6b65\u8fed\u4ee3\u5668\u3002\n        \"\"\"\n</code></pre>"},{"location":"api/ability_camera/#tongsim.entity.ability.impl.camera.CameraAbility.attach_to_target_socket","title":"attach_to_target_socket","text":"<pre><code>attach_to_target_socket(\n    target_id: str, socket_name: str\n) -&gt; bool\n</code></pre> <p>\u5c06\u5f53\u524d\u76f8\u673a\u6302\u8f7d\u5230\u76ee\u6807 Entity \u7684\u6307\u5b9a socket \u4e0a\u3002</p> <p>Parameters:</p> Name Type Description Default <code>target_id</code> <code>str</code> <p>\u76ee\u6807\u5b9e\u4f53 ID</p> required <code>socket_name</code> <code>str</code> <p>\u76ee\u6807 socket \u540d\u79f0\u3002\u5e38\u7528socket:[\"MidCameraSocket\",\"LeftCameraSocket\",\"RightCameraSocket\"]</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u662f\u5426\u6210\u529f\u6302\u8f7d\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\camera.py</code> <pre><code>def attach_to_target_socket(self, target_id: str, socket_name: str) -&gt; bool:\n    \"\"\"\n    \u5c06\u5f53\u524d\u76f8\u673a\u6302\u8f7d\u5230\u76ee\u6807 Entity \u7684\u6307\u5b9a socket \u4e0a\u3002\n\n    Args:\n        target_id (str): \u76ee\u6807\u5b9e\u4f53 ID\n        socket_name (str): \u76ee\u6807 socket \u540d\u79f0\u3002\u5e38\u7528socket:[\"MidCameraSocket\",\"LeftCameraSocket\",\"RightCameraSocket\"]\n\n    Returns:\n        bool: \u662f\u5426\u6210\u529f\u6302\u8f7d\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_camera/#tongsim.entity.ability.impl.camera.CameraAbility.set_intrinsic_params","title":"set_intrinsic_params","text":"<pre><code>set_intrinsic_params(\n    fov: float, width: int, height: int\n) -&gt; bool\n</code></pre> <p>\u8bbe\u7f6e\u76f8\u673a\u7684\u5185\u53c2\uff0c\u5305\u62ec\u89c6\u573a\u89d2\u3001\u5206\u8fa8\u7387\u7b49\u3002</p> <p>Parameters:</p> Name Type Description Default <code>fov</code> <code>float</code> <p>\u76f8\u673a\u7684\u89c6\u573a\u89d2\uff08Field of View\uff09\u3002</p> required <code>width</code> <code>int</code> <p>\u56fe\u50cf\u5bbd\u5ea6\uff08\u5355\u4f4d: \u50cf\u7d20\uff09\u3002</p> required <code>height</code> <code>int</code> <p>\u56fe\u50cf\u9ad8\u5ea6\uff08\u5355\u4f4d: \u50cf\u7d20\uff09\u3002</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u662f\u5426\u8bbe\u7f6e\u6210\u529f\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\camera.py</code> <pre><code>def set_intrinsic_params(self, fov: float, width: int, height: int) -&gt; bool:\n    \"\"\"\n    \u8bbe\u7f6e\u76f8\u673a\u7684\u5185\u53c2\uff0c\u5305\u62ec\u89c6\u573a\u89d2\u3001\u5206\u8fa8\u7387\u7b49\u3002\n\n    Args:\n        fov (float): \u76f8\u673a\u7684\u89c6\u573a\u89d2\uff08Field of View\uff09\u3002\n        width (int): \u56fe\u50cf\u5bbd\u5ea6\uff08\u5355\u4f4d: \u50cf\u7d20\uff09\u3002\n        height (int): \u56fe\u50cf\u9ad8\u5ea6\uff08\u5355\u4f4d: \u50cf\u7d20\uff09\u3002\n\n    Returns:\n        bool: \u662f\u5426\u8bbe\u7f6e\u6210\u529f\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_camera/#tongsim.entity.ability.impl.camera.CameraAbility.get_intrinsic_params","title":"get_intrinsic_params","text":"<pre><code>get_intrinsic_params() -&gt; CameraIntrinsic\n</code></pre> <p>\u83b7\u53d6\u5f53\u524d\u76f8\u673a\u7684\u5185\u53c2\u914d\u7f6e\u3002</p> <p>Returns:</p> Name Type Description <code>CameraIntrinsic</code> <code>CameraIntrinsic</code> <p>\u5305\u542b fov\u3001width \u548c height \u7684\u5185\u53c2\u4fe1\u606f\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\camera.py</code> <pre><code>def get_intrinsic_params(self) -&gt; CameraIntrinsic:\n    \"\"\"\n    \u83b7\u53d6\u5f53\u524d\u76f8\u673a\u7684\u5185\u53c2\u914d\u7f6e\u3002\n\n    Returns:\n        CameraIntrinsic: \u5305\u542b fov\u3001width \u548c height \u7684\u5185\u53c2\u4fe1\u606f\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_camera/#tongsim.entity.ability.impl.camera.CameraAbility.start_imagedata_streaming","title":"start_imagedata_streaming","text":"<pre><code>start_imagedata_streaming(\n    rgb: bool = True,\n    depth: bool = False,\n    segmentation: bool = False,\n    mirror_segmentation: bool = False,\n    visible_object_list: bool = False,\n) -&gt; None\n</code></pre> <p>\u542f\u52a8\u56fe\u50cf\u6570\u636e\u6d41\u63a5\u6536\u4efb\u52a1\u3002</p> <p>\u542f\u52a8\u540e\uff0c\u5c06\u6301\u7eed\u63a5\u6536\u6765\u81ea\u670d\u52a1\u5668\u7684\u56fe\u50cf\u5e27\u6570\u636e\uff0c\u5e76\u7f13\u5b58\u6700\u8fd1\u4e00\u5e27\u3002</p> <p>Parameters:</p> Name Type Description Default <code>rgb</code> <code>bool</code> <p>\u662f\u5426\u63a5\u6536 RGB \u56fe\u50cf\u6570\u636e\u3002</p> <code>True</code> <code>depth</code> <code>bool</code> <p>\u662f\u5426\u63a5\u6536\u6df1\u5ea6\u56fe\u50cf\u3002</p> <code>False</code> <code>segmentation</code> <code>bool</code> <p>\u662f\u5426\u63a5\u6536\u5206\u5272\u56fe\u50cf\u3002</p> <code>False</code> <code>mirror_segmentation</code> <code>bool</code> <p>\u662f\u5426\u63a5\u6536\u955c\u5b50\u4e2d\u7684\u5206\u5272\u56fe\u50cf\u3002</p> <code>False</code> <code>visible_object_list</code> <code>bool</code> <p>\u662f\u5426\u63a5\u6536\u53ef\u89c1\u7269\u4f53\u5217\u8868\u3002</p> <code>False</code> Source code in <code>src\\tongsim\\entity\\ability\\impl\\camera.py</code> <pre><code>def start_imagedata_streaming(\n    self,\n    rgb: bool = True,\n    depth: bool = False,\n    segmentation: bool = False,\n    mirror_segmentation: bool = False,\n    visible_object_list: bool = False,\n) -&gt; None:\n    \"\"\"\n    \u542f\u52a8\u56fe\u50cf\u6570\u636e\u6d41\u63a5\u6536\u4efb\u52a1\u3002\n\n    \u542f\u52a8\u540e\uff0c\u5c06\u6301\u7eed\u63a5\u6536\u6765\u81ea\u670d\u52a1\u5668\u7684\u56fe\u50cf\u5e27\u6570\u636e\uff0c\u5e76\u7f13\u5b58\u6700\u8fd1\u4e00\u5e27\u3002\n\n    Args:\n        rgb (bool): \u662f\u5426\u63a5\u6536 RGB \u56fe\u50cf\u6570\u636e\u3002\n        depth (bool): \u662f\u5426\u63a5\u6536\u6df1\u5ea6\u56fe\u50cf\u3002\n        segmentation (bool): \u662f\u5426\u63a5\u6536\u5206\u5272\u56fe\u50cf\u3002\n        mirror_segmentation (bool): \u662f\u5426\u63a5\u6536\u955c\u5b50\u4e2d\u7684\u5206\u5272\u56fe\u50cf\u3002\n        visible_object_list (bool): \u662f\u5426\u63a5\u6536\u53ef\u89c1\u7269\u4f53\u5217\u8868\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_camera/#tongsim.entity.ability.impl.camera.CameraAbility.stop_imagedata_streaming","title":"stop_imagedata_streaming","text":"<pre><code>stop_imagedata_streaming() -&gt; bool\n</code></pre> <p>\u505c\u6b62\u56fe\u50cf\u6570\u636e\u6d41\u63a5\u6536\u4efb\u52a1\uff08\u6682\u672a\u5b9e\u73b0\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u505c\u6b62\u662f\u5426\u6210\u529f\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\camera.py</code> <pre><code>def stop_imagedata_streaming(self) -&gt; bool:\n    \"\"\"\n    \u505c\u6b62\u56fe\u50cf\u6570\u636e\u6d41\u63a5\u6536\u4efb\u52a1\uff08\u6682\u672a\u5b9e\u73b0\uff09\u3002\n\n    Returns:\n        bool: \u505c\u6b62\u662f\u5426\u6210\u529f\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_camera/#tongsim.entity.ability.impl.camera.CameraAbility.fetch_image_data_from_streaming","title":"fetch_image_data_from_streaming","text":"<pre><code>fetch_image_data_from_streaming() -&gt; (\n    CameraImageWrapper | None\n)\n</code></pre> <p>\u4ece\u56fe\u50cf\u6570\u636e\u6d41\u4e2d\u83b7\u53d6\u6700\u8fd1\u4e00\u5e27\u7684\u5b8c\u6574\u56fe\u50cf\u6570\u636e\u5c01\u88c5\u3002</p> \u8fd4\u56de <p>CameraImageWrapper | None: \u56fe\u50cf\u6570\u636e\u5c01\u88c5\u5bf9\u8c61\uff0c\u5305\u542b RGB\u3001\u6df1\u5ea6\u3001\u5206\u5272\u3001\u53ef\u89c1\u7269\u4f53\u4fe1\u606f\u7b49\uff1b                         \u82e5\u5f53\u524d\u5c1a\u672a\u63a5\u6536\u5230\u4efb\u4f55\u56fe\u50cf\u5e27\uff0c\u5219\u8fd4\u56de None\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\camera.py</code> <pre><code>def fetch_image_data_from_streaming(self) -&gt; CameraImageWrapper | None:\n    \"\"\"\n    \u4ece\u56fe\u50cf\u6570\u636e\u6d41\u4e2d\u83b7\u53d6\u6700\u8fd1\u4e00\u5e27\u7684\u5b8c\u6574\u56fe\u50cf\u6570\u636e\u5c01\u88c5\u3002\n\n    \u8fd4\u56de:\n        CameraImageWrapper | None: \u56fe\u50cf\u6570\u636e\u5c01\u88c5\u5bf9\u8c61\uff0c\u5305\u542b RGB\u3001\u6df1\u5ea6\u3001\u5206\u5272\u3001\u53ef\u89c1\u7269\u4f53\u4fe1\u606f\u7b49\uff1b\n                                \u82e5\u5f53\u524d\u5c1a\u672a\u63a5\u6536\u5230\u4efb\u4f55\u56fe\u50cf\u5e27\uff0c\u5219\u8fd4\u56de None\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_camera/#tongsim.entity.ability.impl.camera.CameraAbility.fetch_rgb_from_streaming","title":"fetch_rgb_from_streaming","text":"<pre><code>fetch_rgb_from_streaming(\n    deep_copy: bool = False,\n) -&gt; memoryview | bytes | None\n</code></pre> <p>\u4ece\u56fe\u50cf\u6570\u636e\u6d41\u4e2d\u83b7\u53d6\u6700\u8fd1\u63a5\u6536\u5230\u7684 RGB \u56fe\u50cf\u5e27\u3002</p> <p>Parameters:</p> Name Type Description Default <code>deep_copy</code> <code>bool</code> <p>\u662f\u5426\u8fd4\u56de\u6df1\u62f7\u8d1d\u526f\u672c\u3002</p> <code>False</code> <p>Returns:</p> Type Description <code>memoryview | bytes | None</code> <p>memoryview | bytes | None: RGB \u56fe\u50cf\u6570\u636e\uff08\u5982\u679c\u5b58\u5728\uff09\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\camera.py</code> <pre><code>def fetch_rgb_from_streaming(\n    self, deep_copy: bool = False\n) -&gt; memoryview | bytes | None:\n    \"\"\"\n    \u4ece\u56fe\u50cf\u6570\u636e\u6d41\u4e2d\u83b7\u53d6\u6700\u8fd1\u63a5\u6536\u5230\u7684 RGB \u56fe\u50cf\u5e27\u3002\n\n    Args:\n        deep_copy (bool): \u662f\u5426\u8fd4\u56de\u6df1\u62f7\u8d1d\u526f\u672c\u3002\n\n    Returns:\n        memoryview | bytes | None: RGB \u56fe\u50cf\u6570\u636e\uff08\u5982\u679c\u5b58\u5728\uff09\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_camera/#tongsim.entity.ability.impl.camera.CameraAbility.fetch_depth_from_streaming","title":"fetch_depth_from_streaming","text":"<pre><code>fetch_depth_from_streaming(\n    deep_copy: bool = False,\n) -&gt; memoryview | bytes | None\n</code></pre> <p>\u4ece\u56fe\u50cf\u6570\u636e\u6d41\u4e2d\u83b7\u53d6\u6700\u8fd1\u63a5\u6536\u5230\u7684\u6df1\u5ea6\u56fe\u50cf\u5e27\u3002</p> <p>Parameters:</p> Name Type Description Default <code>deep_copy</code> <code>bool</code> <p>\u662f\u5426\u8fd4\u56de\u6df1\u62f7\u8d1d\u526f\u672c\u3002</p> <code>False</code> <p>Returns:</p> Type Description <code>memoryview | bytes | None</code> <p>memoryview | bytes | None: \u6df1\u5ea6\u56fe\u50cf\u6570\u636e\uff08\u5982\u679c\u5b58\u5728\uff09\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\camera.py</code> <pre><code>def fetch_depth_from_streaming(\n    self, deep_copy: bool = False\n) -&gt; memoryview | bytes | None:\n    \"\"\"\n    \u4ece\u56fe\u50cf\u6570\u636e\u6d41\u4e2d\u83b7\u53d6\u6700\u8fd1\u63a5\u6536\u5230\u7684\u6df1\u5ea6\u56fe\u50cf\u5e27\u3002\n\n    Args:\n        deep_copy (bool): \u662f\u5426\u8fd4\u56de\u6df1\u62f7\u8d1d\u526f\u672c\u3002\n\n    Returns:\n        memoryview | bytes | None: \u6df1\u5ea6\u56fe\u50cf\u6570\u636e\uff08\u5982\u679c\u5b58\u5728\uff09\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_camera/#tongsim.entity.ability.impl.camera.CameraAbility.fetch_segmentation_from_streaming","title":"fetch_segmentation_from_streaming","text":"<pre><code>fetch_segmentation_from_streaming(\n    deep_copy: bool = False,\n) -&gt; memoryview | bytes | None\n</code></pre> <p>\u4ece\u56fe\u50cf\u6570\u636e\u6d41\u4e2d\u83b7\u53d6\u6700\u8fd1\u63a5\u6536\u5230\u7684\u5206\u5272\u56fe\u50cf\u5e27\u3002</p> <p>Parameters:</p> Name Type Description Default <code>deep_copy</code> <code>bool</code> <p>\u662f\u5426\u8fd4\u56de\u6df1\u62f7\u8d1d\u526f\u672c\u3002</p> <code>False</code> <p>Returns:</p> Type Description <code>memoryview | bytes | None</code> <p>memoryview | bytes | None: \u5206\u5272\u56fe\u50cf\u6570\u636e\uff08\u5982\u679c\u5b58\u5728\uff09\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\camera.py</code> <pre><code>def fetch_segmentation_from_streaming(\n    self, deep_copy: bool = False\n) -&gt; memoryview | bytes | None:\n    \"\"\"\n    \u4ece\u56fe\u50cf\u6570\u636e\u6d41\u4e2d\u83b7\u53d6\u6700\u8fd1\u63a5\u6536\u5230\u7684\u5206\u5272\u56fe\u50cf\u5e27\u3002\n\n    Args:\n        deep_copy (bool): \u662f\u5426\u8fd4\u56de\u6df1\u62f7\u8d1d\u526f\u672c\u3002\n\n    Returns:\n        memoryview | bytes | None: \u5206\u5272\u56fe\u50cf\u6570\u636e\uff08\u5982\u679c\u5b58\u5728\uff09\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_camera/#tongsim.entity.ability.impl.camera.CameraAbility.fetch_mirror_segmentation_from_streaming","title":"fetch_mirror_segmentation_from_streaming","text":"<pre><code>fetch_mirror_segmentation_from_streaming(\n    deep_copy: bool = False,\n) -&gt; memoryview | bytes | None\n</code></pre> <p>\u4ece\u56fe\u50cf\u6570\u636e\u6d41\u4e2d\u83b7\u53d6\u6700\u8fd1\u63a5\u6536\u5230\u7684\u955c\u5b50\u4e2d\u7684\u5206\u5272\u56fe\u50cf\u5e27\u3002</p> <p>Parameters:</p> Name Type Description Default <code>deep_copy</code> <code>bool</code> <p>\u662f\u5426\u8fd4\u56de\u6df1\u62f7\u8d1d\u526f\u672c\u3002</p> <code>False</code> <p>Returns:</p> Type Description <code>memoryview | bytes | None</code> <p>memoryview | bytes | None: \u955c\u5b50\u4e2d\u7684\u5206\u5272\u56fe\u50cf\u6570\u636e\uff08\u5982\u679c\u5b58\u5728\uff09\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\camera.py</code> <pre><code>def fetch_mirror_segmentation_from_streaming(\n    self, deep_copy: bool = False\n) -&gt; memoryview | bytes | None:\n    \"\"\"\n    \u4ece\u56fe\u50cf\u6570\u636e\u6d41\u4e2d\u83b7\u53d6\u6700\u8fd1\u63a5\u6536\u5230\u7684\u955c\u5b50\u4e2d\u7684\u5206\u5272\u56fe\u50cf\u5e27\u3002\n\n    Args:\n        deep_copy (bool): \u662f\u5426\u8fd4\u56de\u6df1\u62f7\u8d1d\u526f\u672c\u3002\n\n    Returns:\n        memoryview | bytes | None: \u955c\u5b50\u4e2d\u7684\u5206\u5272\u56fe\u50cf\u6570\u636e\uff08\u5982\u679c\u5b58\u5728\uff09\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_camera/#tongsim.entity.ability.impl.camera.CameraAbility.fetch_visible_object_list_from_streaming","title":"fetch_visible_object_list_from_streaming","text":"<pre><code>fetch_visible_object_list_from_streaming() -&gt; (\n    list[VisibleObjectInfo] | None\n)\n</code></pre> <p>\u4ece\u56fe\u50cf\u6570\u636e\u6d41\u4e2d\u83b7\u53d6\u6700\u8fd1\u4e00\u5e27\u56fe\u50cf\u6570\u636e\u4e2d\u68c0\u6d4b\u5230\u7684\u53ef\u89c1\u7269\u4f53\u4fe1\u606f\u5217\u8868\u3002</p> <p>Returns:</p> Type Description <code>list[VisibleObjectInfo] | None</code> <p>list[VisibleObjectInfo] | None: \u53ef\u89c1\u7269\u4f53\u4fe1\u606f\u5217\u8868\uff0c\u82e5\u5c1a\u672a\u63a5\u6536\u6216\u672a\u542f\u7528\u5219\u4e3a None\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\camera.py</code> <pre><code>def fetch_visible_object_list_from_streaming(\n    self,\n) -&gt; list[VisibleObjectInfo] | None:\n    \"\"\"\n    \u4ece\u56fe\u50cf\u6570\u636e\u6d41\u4e2d\u83b7\u53d6\u6700\u8fd1\u4e00\u5e27\u56fe\u50cf\u6570\u636e\u4e2d\u68c0\u6d4b\u5230\u7684\u53ef\u89c1\u7269\u4f53\u4fe1\u606f\u5217\u8868\u3002\n\n    Returns:\n        list[VisibleObjectInfo] | None: \u53ef\u89c1\u7269\u4f53\u4fe1\u606f\u5217\u8868\uff0c\u82e5\u5c1a\u672a\u63a5\u6536\u6216\u672a\u542f\u7528\u5219\u4e3a None\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_camera/#tongsim.entity.ability.impl.camera.CameraAbility.get_current_imageshot","title":"get_current_imageshot","text":"<pre><code>get_current_imageshot(\n    rgb: bool = True,\n    depth: bool = False,\n    segmentation: bool = False,\n    mirror_segmentation: bool = False,\n    visible_object_list: bool = False,\n) -&gt; CameraImageWrapper | None\n</code></pre> <p>\u4ee5\u540c\u6b65\u65b9\u5f0f\u8bf7\u6c42\u5f53\u524d\u56fe\u50cf\u5e27\uff08\u4e00\u6b21\u6027\u6293\u62cd\uff09\u3002</p> <p>Parameters:</p> Name Type Description Default <code>rgb</code> <code>bool</code> <p>\u662f\u5426\u83b7\u53d6 RGB \u56fe\u50cf\u3002</p> <code>True</code> <code>depth</code> <code>bool</code> <p>\u662f\u5426\u83b7\u53d6\u6df1\u5ea6\u56fe\u50cf\u3002</p> <code>False</code> <code>segmentation</code> <code>bool</code> <p>\u662f\u5426\u83b7\u53d6\u8bed\u4e49\u5206\u5272\u56fe\u50cf\u3002</p> <code>False</code> <code>mirror_segmentation</code> <code>bool</code> <p>\u662f\u5426\u83b7\u53d6\u955c\u50cf\u5206\u5272\u56fe\u50cf\u3002</p> <code>False</code> <code>visible_object_list</code> <code>bool</code> <p>\u662f\u5426\u5305\u542b\u53ef\u89c1\u7269\u4f53\u5217\u8868\u3002</p> <code>False</code> <p>Returns:</p> Type Description <code>CameraImageWrapper | None</code> <p>CameraImageWrapper | None: \u5305\u542b\u56fe\u50cf\u5185\u5bb9\u7684\u5c01\u88c5\u5bf9\u8c61\uff0c\u82e5\u5931\u8d25\u5219\u4e3a None\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\camera.py</code> <pre><code>def get_current_imageshot(\n    self,\n    rgb: bool = True,\n    depth: bool = False,\n    segmentation: bool = False,\n    mirror_segmentation: bool = False,\n    visible_object_list: bool = False,\n) -&gt; CameraImageWrapper | None:\n    \"\"\"\n    \u4ee5\u540c\u6b65\u65b9\u5f0f\u8bf7\u6c42\u5f53\u524d\u56fe\u50cf\u5e27\uff08\u4e00\u6b21\u6027\u6293\u62cd\uff09\u3002\n\n    Args:\n        rgb (bool): \u662f\u5426\u83b7\u53d6 RGB \u56fe\u50cf\u3002\n        depth (bool): \u662f\u5426\u83b7\u53d6\u6df1\u5ea6\u56fe\u50cf\u3002\n        segmentation (bool): \u662f\u5426\u83b7\u53d6\u8bed\u4e49\u5206\u5272\u56fe\u50cf\u3002\n        mirror_segmentation (bool): \u662f\u5426\u83b7\u53d6\u955c\u50cf\u5206\u5272\u56fe\u50cf\u3002\n        visible_object_list (bool): \u662f\u5426\u5305\u542b\u53ef\u89c1\u7269\u4f53\u5217\u8868\u3002\n\n    Returns:\n        CameraImageWrapper | None: \u5305\u542b\u56fe\u50cf\u5185\u5bb9\u7684\u5c01\u88c5\u5bf9\u8c61\uff0c\u82e5\u5931\u8d25\u5219\u4e3a None\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_camera/#tongsim.entity.ability.impl.camera.CameraAbility.async_get_current_imageshot","title":"async_get_current_imageshot  <code>async</code>","text":"<pre><code>async_get_current_imageshot(\n    rgb: bool = True,\n    depth: bool = False,\n    segmentation: bool = False,\n    mirror_segmentation: bool = False,\n    visible_object_list: bool = False,\n) -&gt; CameraImageWrapper | None\n</code></pre> <p>\u4ee5\u5f02\u6b65\u65b9\u5f0f\u8bf7\u6c42\u5f53\u524d\u56fe\u50cf\u5e27\uff08\u4e00\u6b21\u6027\u6293\u62cd\uff09\u3002</p> <p>Parameters:</p> Name Type Description Default <code>rgb</code> <code>bool</code> <p>\u662f\u5426\u83b7\u53d6 RGB \u56fe\u50cf\u3002</p> <code>True</code> <code>depth</code> <code>bool</code> <p>\u662f\u5426\u83b7\u53d6\u6df1\u5ea6\u56fe\u50cf\u3002</p> <code>False</code> <code>segmentation</code> <code>bool</code> <p>\u662f\u5426\u83b7\u53d6\u8bed\u4e49\u5206\u5272\u56fe\u50cf\u3002</p> <code>False</code> <code>mirror_segmentation</code> <code>bool</code> <p>\u662f\u5426\u83b7\u53d6\u955c\u50cf\u5206\u5272\u56fe\u50cf\u3002</p> <code>False</code> <code>visible_object_list</code> <code>bool</code> <p>\u662f\u5426\u5305\u542b\u53ef\u89c1\u7269\u4f53\u5217\u8868\u3002</p> <code>False</code> <p>Returns:</p> Type Description <code>CameraImageWrapper | None</code> <p>CameraImageWrapper | None: \u5305\u542b\u56fe\u50cf\u5185\u5bb9\u7684\u5c01\u88c5\u5bf9\u8c61\uff0c\u82e5\u5931\u8d25\u5219\u4e3a None\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\camera.py</code> <pre><code>async def async_get_current_imageshot(\n    self,\n    rgb: bool = True,\n    depth: bool = False,\n    segmentation: bool = False,\n    mirror_segmentation: bool = False,\n    visible_object_list: bool = False,\n) -&gt; CameraImageWrapper | None:\n    \"\"\"\n    \u4ee5\u5f02\u6b65\u65b9\u5f0f\u8bf7\u6c42\u5f53\u524d\u56fe\u50cf\u5e27\uff08\u4e00\u6b21\u6027\u6293\u62cd\uff09\u3002\n\n    Args:\n        rgb (bool): \u662f\u5426\u83b7\u53d6 RGB \u56fe\u50cf\u3002\n        depth (bool): \u662f\u5426\u83b7\u53d6\u6df1\u5ea6\u56fe\u50cf\u3002\n        segmentation (bool): \u662f\u5426\u83b7\u53d6\u8bed\u4e49\u5206\u5272\u56fe\u50cf\u3002\n        mirror_segmentation (bool): \u662f\u5426\u83b7\u53d6\u955c\u50cf\u5206\u5272\u56fe\u50cf\u3002\n        visible_object_list (bool): \u662f\u5426\u5305\u542b\u53ef\u89c1\u7269\u4f53\u5217\u8868\u3002\n\n    Returns:\n        CameraImageWrapper | None: \u5305\u542b\u56fe\u50cf\u5185\u5bb9\u7684\u5c01\u88c5\u5bf9\u8c61\uff0c\u82e5\u5931\u8d25\u5219\u4e3a None\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_camera/#tongsim.entity.ability.impl.camera.CameraAbility.async_subscribe_imagedata","title":"async_subscribe_imagedata  <code>async</code>","text":"<pre><code>async_subscribe_imagedata(\n    rgb: bool = True,\n    depth: bool = False,\n    segmentation: bool = False,\n    mirror_segmentation: bool = False,\n    visible_object_list: bool = False,\n) -&gt; AsyncIterator[CameraImageWrapper]\n</code></pre> <p>\u5f02\u6b65\u8ba2\u9605\u56fe\u50cf\u6570\u636e\u6d41\uff0c\u8fd4\u56de\u4e00\u4e2a\u5f02\u6b65\u8fed\u4ee3\u5668\uff0c\u9010\u5e27\u8fd4\u56de\u56fe\u50cf\u3002</p> <p>Parameters:</p> Name Type Description Default <code>rgb</code> <code>bool</code> <p>\u662f\u5426\u8ba2\u9605 RGB \u56fe\u50cf\u3002</p> <code>True</code> <code>depth</code> <code>bool</code> <p>\u662f\u5426\u8ba2\u9605\u6df1\u5ea6\u56fe\u50cf\u3002</p> <code>False</code> <code>segmentation</code> <code>bool</code> <p>\u662f\u5426\u8ba2\u9605\u8bed\u4e49\u5206\u5272\u56fe\u50cf\u3002</p> <code>False</code> <code>mirror_segmentation</code> <code>bool</code> <p>\u662f\u5426\u8ba2\u9605\u955c\u50cf\u5206\u5272\u56fe\u50cf\u3002</p> <code>False</code> <code>visible_object_list</code> <code>bool</code> <p>\u662f\u5426\u8ba2\u9605\u53ef\u89c1\u7269\u4f53\u5217\u8868\u3002</p> <code>False</code> <p>Returns:</p> Type Description <code>AsyncIterator[CameraImageWrapper]</code> <p>AsyncIterator[CameraImageWrapper]: \u56fe\u50cf\u5e27\u5f02\u6b65\u8fed\u4ee3\u5668\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\camera.py</code> <pre><code>async def async_subscribe_imagedata(\n    self,\n    rgb: bool = True,\n    depth: bool = False,\n    segmentation: bool = False,\n    mirror_segmentation: bool = False,\n    visible_object_list: bool = False,\n) -&gt; AsyncIterator[CameraImageWrapper]:\n    \"\"\"\n    \u5f02\u6b65\u8ba2\u9605\u56fe\u50cf\u6570\u636e\u6d41\uff0c\u8fd4\u56de\u4e00\u4e2a\u5f02\u6b65\u8fed\u4ee3\u5668\uff0c\u9010\u5e27\u8fd4\u56de\u56fe\u50cf\u3002\n\n    Args:\n        rgb (bool): \u662f\u5426\u8ba2\u9605 RGB \u56fe\u50cf\u3002\n        depth (bool): \u662f\u5426\u8ba2\u9605\u6df1\u5ea6\u56fe\u50cf\u3002\n        segmentation (bool): \u662f\u5426\u8ba2\u9605\u8bed\u4e49\u5206\u5272\u56fe\u50cf\u3002\n        mirror_segmentation (bool): \u662f\u5426\u8ba2\u9605\u955c\u50cf\u5206\u5272\u56fe\u50cf\u3002\n        visible_object_list (bool): \u662f\u5426\u8ba2\u9605\u53ef\u89c1\u7269\u4f53\u5217\u8868\u3002\n\n    Returns:\n        AsyncIterator[CameraImageWrapper]: \u56fe\u50cf\u5e27\u5f02\u6b65\u8fed\u4ee3\u5668\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_collision_shape/","title":"\ud83c\udff7\ufe0f\u78b0\u649e\u4f53\u4fe1\u606f\u83b7\u53d6\u80fd\u529b","text":""},{"location":"api/ability_collision_shape/#tongsim.entity.ability.impl.collision_shape","title":"tongsim.entity.ability.impl.collision_shape","text":"<p>tongsim.entity.ability.impl.collision</p>"},{"location":"api/ability_collision_shape/#tongsim.entity.ability.impl.collision_shape.CollisionShapeAbility","title":"CollisionShapeAbility","text":"<p>               Bases: <code>Protocol</code></p> <p>\u63d0\u4f9b\u5bf9\u8c61\u7684\u78b0\u649e\u4f53\u4fe1\u606f\u7684\u83b7\u53d6\u63a5\u53e3\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\collision_shape.py</code> <pre><code>class CollisionShapeAbility(Protocol):\n    \"\"\"\n    \u63d0\u4f9b\u5bf9\u8c61\u7684\u78b0\u649e\u4f53\u4fe1\u606f\u7684\u83b7\u53d6\u63a5\u53e3\u3002\n    \"\"\"\n\n    def get_relative_aabb(self) -&gt; Box:\n        \"\"\"\n        \u83b7\u53d6\u5bf9\u8c61\u7684\u76f8\u5bf9 Box\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n        \u6ce8\u610f\uff1a\n            \u8fd4\u56de\u7684 Box \u662f**\u76f8\u5bf9\u4e8e\u7269\u4f53\u4f4d\u7f6e\uff08location\uff09**\u7684\u672c\u5730\u5305\u56f4\u76d2\u3002\uff08\u9ed8\u8ba4 Scale \u4e3a 1\uff09\n\n        Returns:\n            Box: \u76f8\u5bf9 Box\uff08\u672c\u5730\u5750\u6807\u7cfb\u4e0b\uff09\n        \"\"\"\n\n    async def async_get_relative_aabb(self) -&gt; Box:\n        \"\"\"\n        \u83b7\u53d6\u5bf9\u8c61\u7684\u76f8\u5bf9 Box\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        \u6ce8\u610f\uff1a\n            \u8fd4\u56de\u7684 Box \u662f**\u76f8\u5bf9\u4e8e\u7269\u4f53\u4f4d\u7f6e\uff08location\uff09**\u7684\u672c\u5730\u5305\u56f4\u76d2\u3002\uff08\u9ed8\u8ba4 Scale \u4e3a 1\uff09\n\n        Returns:\n            Box: \u76f8\u5bf9 Box\uff08\u672c\u5730\u5750\u6807\u7cfb\u4e0b\uff09\n        \"\"\"\n\n    def get_world_aabb(self) -&gt; Box:\n        \"\"\"\n        \u83b7\u53d6\u7269\u4f53\u7684\u4e16\u754c\u7a7a\u95f4 Box\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n        Returns:\n            Box: \u7edd\u5bf9 Box\uff08\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\uff09\n        \"\"\"\n\n    async def async_get_world_aabb(self) -&gt; Box:\n        \"\"\"\n        \u83b7\u53d6\u7269\u4f53\u7684\u4e16\u754c\u7a7a\u95f4 Box\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        Returns:\n            Box: \u7edd\u5bf9 Box\uff08\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\uff09\n        \"\"\"\n</code></pre>"},{"location":"api/ability_collision_shape/#tongsim.entity.ability.impl.collision_shape.CollisionShapeAbility.get_relative_aabb","title":"get_relative_aabb","text":"<pre><code>get_relative_aabb() -&gt; Box\n</code></pre> <p>\u83b7\u53d6\u5bf9\u8c61\u7684\u76f8\u5bf9 Box\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002</p> <p>\u6ce8\u610f\uff1a     \u8fd4\u56de\u7684 Box \u662f\u76f8\u5bf9\u4e8e\u7269\u4f53\u4f4d\u7f6e\uff08location\uff09\u7684\u672c\u5730\u5305\u56f4\u76d2\u3002\uff08\u9ed8\u8ba4 Scale \u4e3a 1\uff09</p> <p>Returns:</p> Name Type Description <code>Box</code> <code>Box</code> <p>\u76f8\u5bf9 Box\uff08\u672c\u5730\u5750\u6807\u7cfb\u4e0b\uff09</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\collision_shape.py</code> <pre><code>def get_relative_aabb(self) -&gt; Box:\n    \"\"\"\n    \u83b7\u53d6\u5bf9\u8c61\u7684\u76f8\u5bf9 Box\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n    \u6ce8\u610f\uff1a\n        \u8fd4\u56de\u7684 Box \u662f**\u76f8\u5bf9\u4e8e\u7269\u4f53\u4f4d\u7f6e\uff08location\uff09**\u7684\u672c\u5730\u5305\u56f4\u76d2\u3002\uff08\u9ed8\u8ba4 Scale \u4e3a 1\uff09\n\n    Returns:\n        Box: \u76f8\u5bf9 Box\uff08\u672c\u5730\u5750\u6807\u7cfb\u4e0b\uff09\n    \"\"\"\n</code></pre>"},{"location":"api/ability_collision_shape/#tongsim.entity.ability.impl.collision_shape.CollisionShapeAbility.async_get_relative_aabb","title":"async_get_relative_aabb  <code>async</code>","text":"<pre><code>async_get_relative_aabb() -&gt; Box\n</code></pre> <p>\u83b7\u53d6\u5bf9\u8c61\u7684\u76f8\u5bf9 Box\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>\u6ce8\u610f\uff1a     \u8fd4\u56de\u7684 Box \u662f\u76f8\u5bf9\u4e8e\u7269\u4f53\u4f4d\u7f6e\uff08location\uff09\u7684\u672c\u5730\u5305\u56f4\u76d2\u3002\uff08\u9ed8\u8ba4 Scale \u4e3a 1\uff09</p> <p>Returns:</p> Name Type Description <code>Box</code> <code>Box</code> <p>\u76f8\u5bf9 Box\uff08\u672c\u5730\u5750\u6807\u7cfb\u4e0b\uff09</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\collision_shape.py</code> <pre><code>async def async_get_relative_aabb(self) -&gt; Box:\n    \"\"\"\n    \u83b7\u53d6\u5bf9\u8c61\u7684\u76f8\u5bf9 Box\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    \u6ce8\u610f\uff1a\n        \u8fd4\u56de\u7684 Box \u662f**\u76f8\u5bf9\u4e8e\u7269\u4f53\u4f4d\u7f6e\uff08location\uff09**\u7684\u672c\u5730\u5305\u56f4\u76d2\u3002\uff08\u9ed8\u8ba4 Scale \u4e3a 1\uff09\n\n    Returns:\n        Box: \u76f8\u5bf9 Box\uff08\u672c\u5730\u5750\u6807\u7cfb\u4e0b\uff09\n    \"\"\"\n</code></pre>"},{"location":"api/ability_collision_shape/#tongsim.entity.ability.impl.collision_shape.CollisionShapeAbility.get_world_aabb","title":"get_world_aabb","text":"<pre><code>get_world_aabb() -&gt; Box\n</code></pre> <p>\u83b7\u53d6\u7269\u4f53\u7684\u4e16\u754c\u7a7a\u95f4 Box\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>Box</code> <code>Box</code> <p>\u7edd\u5bf9 Box\uff08\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\uff09</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\collision_shape.py</code> <pre><code>def get_world_aabb(self) -&gt; Box:\n    \"\"\"\n    \u83b7\u53d6\u7269\u4f53\u7684\u4e16\u754c\u7a7a\u95f4 Box\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n    Returns:\n        Box: \u7edd\u5bf9 Box\uff08\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\uff09\n    \"\"\"\n</code></pre>"},{"location":"api/ability_collision_shape/#tongsim.entity.ability.impl.collision_shape.CollisionShapeAbility.async_get_world_aabb","title":"async_get_world_aabb  <code>async</code>","text":"<pre><code>async_get_world_aabb() -&gt; Box\n</code></pre> <p>\u83b7\u53d6\u7269\u4f53\u7684\u4e16\u754c\u7a7a\u95f4 Box\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>Box</code> <code>Box</code> <p>\u7edd\u5bf9 Box\uff08\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\uff09</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\collision_shape.py</code> <pre><code>async def async_get_world_aabb(self) -&gt; Box:\n    \"\"\"\n    \u83b7\u53d6\u7269\u4f53\u7684\u4e16\u754c\u7a7a\u95f4 Box\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    Returns:\n        Box: \u7edd\u5bf9 Box\uff08\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\uff09\n    \"\"\"\n</code></pre>"},{"location":"api/ability_consumable_energy/","title":"\ud83c\udff7\ufe0f \u98df\u7269\u4e0e\u996e\u54c1\u80fd\u91cf\u7ba1\u7406\u80fd\u529b","text":""},{"location":"api/ability_consumable_energy/#tongsim.entity.ability.impl.consumable_energy","title":"tongsim.entity.ability.impl.consumable_energy","text":"<p>tongsim.entity.ability.impl.consumable_energy</p>"},{"location":"api/ability_consumable_energy/#tongsim.entity.ability.impl.consumable_energy.ConsumableEnergyAbility","title":"ConsumableEnergyAbility","text":"<p>               Bases: <code>Protocol</code></p> <p>ConsumableEnergyAbility \u5b9a\u4e49\u4e86\u98df\u7269\u4e0e\u996e\u54c1\u80fd\u91cf\u7ba1\u7406\u7684\u63a5\u53e3\u3002</p> <p>\u652f\u6301\u80fd\u91cf\u8bfb\u53d6\u4e0e\u8bbe\u7f6e\uff0c\u5305\u62ec\u98df\u7269\u7c7b\u578b\u548c\u996e\u54c1\u7c7b\u578b\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\consumable_energy.py</code> <pre><code>class ConsumableEnergyAbility(Protocol):\n    \"\"\"\n    ConsumableEnergyAbility \u5b9a\u4e49\u4e86\u98df\u7269\u4e0e\u996e\u54c1\u80fd\u91cf\u7ba1\u7406\u7684\u63a5\u53e3\u3002\n\n    \u652f\u6301\u80fd\u91cf\u8bfb\u53d6\u4e0e\u8bbe\u7f6e\uff0c\u5305\u62ec\u98df\u7269\u7c7b\u578b\u548c\u996e\u54c1\u7c7b\u578b\u3002\n    \"\"\"\n\n    async def async_get_consumable_energy(self) -&gt; tuple[float, float]:\n        \"\"\"\n        \u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u6297\u9965\u997f\u503c\u4e0e\u6297\u53e3\u6e34\u503c\u3002\n\n        Returns:\n            tuple[float, float]: (anti_hungry, anti_thirsty)\n        \"\"\"\n\n    def get_consumable_energy(self) -&gt; tuple[float, float]:\n        \"\"\"\n        \u540c\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u6297\u9965\u997f\u503c\u4e0e\u6297\u53e3\u6e34\u503c\u3002\n\n        Returns:\n            tuple[float, float]: (anti_hungry, anti_thirsty)\n        \"\"\"\n\n    async def async_set_edible_energy(\n        self, anti_hungry: float, anti_thirsty: float, max_parts: int\n    ) -&gt; bool:\n        \"\"\"\n        \u5f02\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u53ef\u98df\u7528\u80fd\u91cf\u503c\u3002\n\n        Args:\n            anti_hungry (float): \u6297\u9965\u997f\u503c, \u4ee3\u8868\u5403\u4e0b\u8be5\u5b9e\u4f53\u540e, agent \u7684\u9965\u997f\u503c\u4f1a\u4e0a\u5347\u591a\u5c11\u3002\u8303\u56f4: 0.0 ~ 2.0, agent \u7684\u9965\u997f\u503c\u8303\u56f4\u4e3a -1.0 ~ 1.0\u3002 -1.0 \u4ee3\u8868\u5b8c\u5168\u9971\u8179\n            anti_thirsty (float): \u6297\u53e3\u6e34\u503c, \u4ee3\u8868\u5403\u4e0b\u8be5\u5b9e\u4f53\u540e, agent \u7684\u53e3\u6e34\u503c\u4f1a\u4e0a\u5347\u591a\u5c11\u3002\u8303\u56f4: 0.0 ~ 2.0, agent \u7684\u53e3\u6e34\u503c\u8303\u56f4\u4e3a -1.0 ~ 1.0\u3002 -1.0 \u4ee3\u8868\u6c34\u5206\u5145\u8db3\n            max_parts (int): \u5403\u5b8c\u9700\u8981\u5403\u51e0\u53e3\n\n        Returns:\n            bool: \u662f\u5426\u6210\u529f\u3002\n        \"\"\"\n\n    def set_edible_energy(\n        self, anti_hungry: float, anti_thirsty: float, max_parts: int\n    ) -&gt; bool:\n        \"\"\"\n        \u540c\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u53ef\u98df\u7528\u80fd\u91cf\u503c\u3002\n\n        Args:\n            anti_hungry (float): \u6297\u9965\u997f\u503c, \u4ee3\u8868\u5403\u4e0b\u8be5\u5b9e\u4f53\u540e, agent \u7684\u9965\u997f\u503c\u4f1a\u4e0a\u5347\u591a\u5c11\u3002\u8303\u56f4: 0.0 ~ 2.0, agent \u7684\u9965\u997f\u503c\u8303\u56f4\u4e3a -1.0 ~ 1.0\u3002 -1.0 \u4ee3\u8868\u5b8c\u5168\u9971\u8179\n            anti_thirsty (float): \u6297\u53e3\u6e34\u503c, \u4ee3\u8868\u5403\u4e0b\u8be5\u5b9e\u4f53\u540e, agent \u7684\u53e3\u6e34\u503c\u4f1a\u4e0a\u5347\u591a\u5c11\u3002\u8303\u56f4: 0.0 ~ 2.0, agent \u7684\u53e3\u6e34\u503c\u8303\u56f4\u4e3a -1.0 ~ 1.0\u3002 -1.0 \u4ee3\u8868\u6c34\u5206\u5145\u8db3\n            max_parts (int): \u559d\u5b8c\u9700\u8981\u559d\u51e0\u53e3\n\n        Returns:\n            bool: \u662f\u5426\u6210\u529f\u3002\n        \"\"\"\n\n    async def async_set_beverage_energy(\n        self, anti_hungry: float, anti_thirsty: float, max_parts: int\n    ) -&gt; bool:\n        \"\"\"\n        \u5f02\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u53ef\u996e\u7528\u80fd\u91cf\u503c\u3002\n\n        Args:\n            anti_hungry (float): \u6297\u9965\u997f\u503c, \u4ee3\u8868\u559d\u4e0b\u8be5\u5b9e\u4f53\u540e, agent \u7684\u9965\u997f\u503c\u4f1a\u4e0a\u5347\u591a\u5c11\u3002\u8303\u56f4: 0.0 ~ 2.0, agent \u7684\u9965\u997f\u503c\u8303\u56f4\u4e3a -1.0 ~ 1.0\u3002 -1.0 \u4ee3\u8868\u5b8c\u5168\u9971\u8179\n            anti_thirsty (float): \u6297\u53e3\u6e34\u503c, \u4ee3\u8868\u559d\u4e0b\u8be5\u5b9e\u4f53\u540e, agent \u7684\u53e3\u6e34\u503c\u4f1a\u4e0a\u5347\u591a\u5c11\u3002\u8303\u56f4: 0.0 ~ 2.0, agent \u7684\u53e3\u6e34\u503c\u8303\u56f4\u4e3a -1.0 ~ 1.0\u3002 -1.0 \u4ee3\u8868\u6c34\u5206\u5145\u8db3\n            max_parts (int): \u559d\u5b8c\u9700\u8981\u559d\u51e0\u53e3\n\n        Returns:\n            bool: \u662f\u5426\u6210\u529f\u3002\n        \"\"\"\n\n    def set_beverage_energy(\n        self, anti_hungry: float, anti_thirsty: float, max_parts: int\n    ) -&gt; bool:\n        \"\"\"\n        \u540c\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u53ef\u996e\u7528\u80fd\u91cf\u503c\u3002\n\n        Args:\n            anti_hungry (float): \u6297\u9965\u997f\u503c, \u4ee3\u8868\u559d\u4e0b\u8be5\u5b9e\u4f53\u540e, agent \u7684\u9965\u997f\u503c\u4f1a\u4e0a\u5347\u591a\u5c11\u3002\u8303\u56f4: 0.0 ~ 2.0, agent \u7684\u9965\u997f\u503c\u8303\u56f4\u4e3a -1.0 ~ 1.0\u3002 -1.0 \u4ee3\u8868\u5b8c\u5168\u9971\u8179\n            anti_thirsty (float): \u6297\u53e3\u6e34\u503c, \u4ee3\u8868\u559d\u4e0b\u8be5\u5b9e\u4f53\u540e, agent \u7684\u53e3\u6e34\u503c\u4f1a\u4e0a\u5347\u591a\u5c11\u3002\u8303\u56f4: 0.0 ~ 2.0, agent \u7684\u53e3\u6e34\u503c\u8303\u56f4\u4e3a -1.0 ~ 1.0\u3002 -1.0 \u4ee3\u8868\u6c34\u5206\u5145\u8db3\n            max_parts (int): \u559d\u5b8c\u9700\u8981\u559d\u51e0\u53e3\n\n        Returns:\n            bool: \u662f\u5426\u6210\u529f\u3002\n        \"\"\"\n</code></pre>"},{"location":"api/ability_consumable_energy/#tongsim.entity.ability.impl.consumable_energy.ConsumableEnergyAbility.async_get_consumable_energy","title":"async_get_consumable_energy  <code>async</code>","text":"<pre><code>async_get_consumable_energy() -&gt; tuple[float, float]\n</code></pre> <p>\u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u6297\u9965\u997f\u503c\u4e0e\u6297\u53e3\u6e34\u503c\u3002</p> <p>Returns:</p> Type Description <code>tuple[float, float]</code> <p>tuple[float, float]: (anti_hungry, anti_thirsty)</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\consumable_energy.py</code> <pre><code>async def async_get_consumable_energy(self) -&gt; tuple[float, float]:\n    \"\"\"\n    \u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u6297\u9965\u997f\u503c\u4e0e\u6297\u53e3\u6e34\u503c\u3002\n\n    Returns:\n        tuple[float, float]: (anti_hungry, anti_thirsty)\n    \"\"\"\n</code></pre>"},{"location":"api/ability_consumable_energy/#tongsim.entity.ability.impl.consumable_energy.ConsumableEnergyAbility.get_consumable_energy","title":"get_consumable_energy","text":"<pre><code>get_consumable_energy() -&gt; tuple[float, float]\n</code></pre> <p>\u540c\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u6297\u9965\u997f\u503c\u4e0e\u6297\u53e3\u6e34\u503c\u3002</p> <p>Returns:</p> Type Description <code>tuple[float, float]</code> <p>tuple[float, float]: (anti_hungry, anti_thirsty)</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\consumable_energy.py</code> <pre><code>def get_consumable_energy(self) -&gt; tuple[float, float]:\n    \"\"\"\n    \u540c\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u6297\u9965\u997f\u503c\u4e0e\u6297\u53e3\u6e34\u503c\u3002\n\n    Returns:\n        tuple[float, float]: (anti_hungry, anti_thirsty)\n    \"\"\"\n</code></pre>"},{"location":"api/ability_consumable_energy/#tongsim.entity.ability.impl.consumable_energy.ConsumableEnergyAbility.async_set_edible_energy","title":"async_set_edible_energy  <code>async</code>","text":"<pre><code>async_set_edible_energy(\n    anti_hungry: float, anti_thirsty: float, max_parts: int\n) -&gt; bool\n</code></pre> <p>\u5f02\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u53ef\u98df\u7528\u80fd\u91cf\u503c\u3002</p> <p>Parameters:</p> Name Type Description Default <code>anti_hungry</code> <code>float</code> <p>\u6297\u9965\u997f\u503c, \u4ee3\u8868\u5403\u4e0b\u8be5\u5b9e\u4f53\u540e, agent \u7684\u9965\u997f\u503c\u4f1a\u4e0a\u5347\u591a\u5c11\u3002\u8303\u56f4: 0.0 ~ 2.0, agent \u7684\u9965\u997f\u503c\u8303\u56f4\u4e3a -1.0 ~ 1.0\u3002 -1.0 \u4ee3\u8868\u5b8c\u5168\u9971\u8179</p> required <code>anti_thirsty</code> <code>float</code> <p>\u6297\u53e3\u6e34\u503c, \u4ee3\u8868\u5403\u4e0b\u8be5\u5b9e\u4f53\u540e, agent \u7684\u53e3\u6e34\u503c\u4f1a\u4e0a\u5347\u591a\u5c11\u3002\u8303\u56f4: 0.0 ~ 2.0, agent \u7684\u53e3\u6e34\u503c\u8303\u56f4\u4e3a -1.0 ~ 1.0\u3002 -1.0 \u4ee3\u8868\u6c34\u5206\u5145\u8db3</p> required <code>max_parts</code> <code>int</code> <p>\u5403\u5b8c\u9700\u8981\u5403\u51e0\u53e3</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u662f\u5426\u6210\u529f\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\consumable_energy.py</code> <pre><code>async def async_set_edible_energy(\n    self, anti_hungry: float, anti_thirsty: float, max_parts: int\n) -&gt; bool:\n    \"\"\"\n    \u5f02\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u53ef\u98df\u7528\u80fd\u91cf\u503c\u3002\n\n    Args:\n        anti_hungry (float): \u6297\u9965\u997f\u503c, \u4ee3\u8868\u5403\u4e0b\u8be5\u5b9e\u4f53\u540e, agent \u7684\u9965\u997f\u503c\u4f1a\u4e0a\u5347\u591a\u5c11\u3002\u8303\u56f4: 0.0 ~ 2.0, agent \u7684\u9965\u997f\u503c\u8303\u56f4\u4e3a -1.0 ~ 1.0\u3002 -1.0 \u4ee3\u8868\u5b8c\u5168\u9971\u8179\n        anti_thirsty (float): \u6297\u53e3\u6e34\u503c, \u4ee3\u8868\u5403\u4e0b\u8be5\u5b9e\u4f53\u540e, agent \u7684\u53e3\u6e34\u503c\u4f1a\u4e0a\u5347\u591a\u5c11\u3002\u8303\u56f4: 0.0 ~ 2.0, agent \u7684\u53e3\u6e34\u503c\u8303\u56f4\u4e3a -1.0 ~ 1.0\u3002 -1.0 \u4ee3\u8868\u6c34\u5206\u5145\u8db3\n        max_parts (int): \u5403\u5b8c\u9700\u8981\u5403\u51e0\u53e3\n\n    Returns:\n        bool: \u662f\u5426\u6210\u529f\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_consumable_energy/#tongsim.entity.ability.impl.consumable_energy.ConsumableEnergyAbility.set_edible_energy","title":"set_edible_energy","text":"<pre><code>set_edible_energy(\n    anti_hungry: float, anti_thirsty: float, max_parts: int\n) -&gt; bool\n</code></pre> <p>\u540c\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u53ef\u98df\u7528\u80fd\u91cf\u503c\u3002</p> <p>Parameters:</p> Name Type Description Default <code>anti_hungry</code> <code>float</code> <p>\u6297\u9965\u997f\u503c, \u4ee3\u8868\u5403\u4e0b\u8be5\u5b9e\u4f53\u540e, agent \u7684\u9965\u997f\u503c\u4f1a\u4e0a\u5347\u591a\u5c11\u3002\u8303\u56f4: 0.0 ~ 2.0, agent \u7684\u9965\u997f\u503c\u8303\u56f4\u4e3a -1.0 ~ 1.0\u3002 -1.0 \u4ee3\u8868\u5b8c\u5168\u9971\u8179</p> required <code>anti_thirsty</code> <code>float</code> <p>\u6297\u53e3\u6e34\u503c, \u4ee3\u8868\u5403\u4e0b\u8be5\u5b9e\u4f53\u540e, agent \u7684\u53e3\u6e34\u503c\u4f1a\u4e0a\u5347\u591a\u5c11\u3002\u8303\u56f4: 0.0 ~ 2.0, agent \u7684\u53e3\u6e34\u503c\u8303\u56f4\u4e3a -1.0 ~ 1.0\u3002 -1.0 \u4ee3\u8868\u6c34\u5206\u5145\u8db3</p> required <code>max_parts</code> <code>int</code> <p>\u559d\u5b8c\u9700\u8981\u559d\u51e0\u53e3</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u662f\u5426\u6210\u529f\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\consumable_energy.py</code> <pre><code>def set_edible_energy(\n    self, anti_hungry: float, anti_thirsty: float, max_parts: int\n) -&gt; bool:\n    \"\"\"\n    \u540c\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u53ef\u98df\u7528\u80fd\u91cf\u503c\u3002\n\n    Args:\n        anti_hungry (float): \u6297\u9965\u997f\u503c, \u4ee3\u8868\u5403\u4e0b\u8be5\u5b9e\u4f53\u540e, agent \u7684\u9965\u997f\u503c\u4f1a\u4e0a\u5347\u591a\u5c11\u3002\u8303\u56f4: 0.0 ~ 2.0, agent \u7684\u9965\u997f\u503c\u8303\u56f4\u4e3a -1.0 ~ 1.0\u3002 -1.0 \u4ee3\u8868\u5b8c\u5168\u9971\u8179\n        anti_thirsty (float): \u6297\u53e3\u6e34\u503c, \u4ee3\u8868\u5403\u4e0b\u8be5\u5b9e\u4f53\u540e, agent \u7684\u53e3\u6e34\u503c\u4f1a\u4e0a\u5347\u591a\u5c11\u3002\u8303\u56f4: 0.0 ~ 2.0, agent \u7684\u53e3\u6e34\u503c\u8303\u56f4\u4e3a -1.0 ~ 1.0\u3002 -1.0 \u4ee3\u8868\u6c34\u5206\u5145\u8db3\n        max_parts (int): \u559d\u5b8c\u9700\u8981\u559d\u51e0\u53e3\n\n    Returns:\n        bool: \u662f\u5426\u6210\u529f\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_consumable_energy/#tongsim.entity.ability.impl.consumable_energy.ConsumableEnergyAbility.async_set_beverage_energy","title":"async_set_beverage_energy  <code>async</code>","text":"<pre><code>async_set_beverage_energy(\n    anti_hungry: float, anti_thirsty: float, max_parts: int\n) -&gt; bool\n</code></pre> <p>\u5f02\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u53ef\u996e\u7528\u80fd\u91cf\u503c\u3002</p> <p>Parameters:</p> Name Type Description Default <code>anti_hungry</code> <code>float</code> <p>\u6297\u9965\u997f\u503c, \u4ee3\u8868\u559d\u4e0b\u8be5\u5b9e\u4f53\u540e, agent \u7684\u9965\u997f\u503c\u4f1a\u4e0a\u5347\u591a\u5c11\u3002\u8303\u56f4: 0.0 ~ 2.0, agent \u7684\u9965\u997f\u503c\u8303\u56f4\u4e3a -1.0 ~ 1.0\u3002 -1.0 \u4ee3\u8868\u5b8c\u5168\u9971\u8179</p> required <code>anti_thirsty</code> <code>float</code> <p>\u6297\u53e3\u6e34\u503c, \u4ee3\u8868\u559d\u4e0b\u8be5\u5b9e\u4f53\u540e, agent \u7684\u53e3\u6e34\u503c\u4f1a\u4e0a\u5347\u591a\u5c11\u3002\u8303\u56f4: 0.0 ~ 2.0, agent \u7684\u53e3\u6e34\u503c\u8303\u56f4\u4e3a -1.0 ~ 1.0\u3002 -1.0 \u4ee3\u8868\u6c34\u5206\u5145\u8db3</p> required <code>max_parts</code> <code>int</code> <p>\u559d\u5b8c\u9700\u8981\u559d\u51e0\u53e3</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u662f\u5426\u6210\u529f\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\consumable_energy.py</code> <pre><code>async def async_set_beverage_energy(\n    self, anti_hungry: float, anti_thirsty: float, max_parts: int\n) -&gt; bool:\n    \"\"\"\n    \u5f02\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u53ef\u996e\u7528\u80fd\u91cf\u503c\u3002\n\n    Args:\n        anti_hungry (float): \u6297\u9965\u997f\u503c, \u4ee3\u8868\u559d\u4e0b\u8be5\u5b9e\u4f53\u540e, agent \u7684\u9965\u997f\u503c\u4f1a\u4e0a\u5347\u591a\u5c11\u3002\u8303\u56f4: 0.0 ~ 2.0, agent \u7684\u9965\u997f\u503c\u8303\u56f4\u4e3a -1.0 ~ 1.0\u3002 -1.0 \u4ee3\u8868\u5b8c\u5168\u9971\u8179\n        anti_thirsty (float): \u6297\u53e3\u6e34\u503c, \u4ee3\u8868\u559d\u4e0b\u8be5\u5b9e\u4f53\u540e, agent \u7684\u53e3\u6e34\u503c\u4f1a\u4e0a\u5347\u591a\u5c11\u3002\u8303\u56f4: 0.0 ~ 2.0, agent \u7684\u53e3\u6e34\u503c\u8303\u56f4\u4e3a -1.0 ~ 1.0\u3002 -1.0 \u4ee3\u8868\u6c34\u5206\u5145\u8db3\n        max_parts (int): \u559d\u5b8c\u9700\u8981\u559d\u51e0\u53e3\n\n    Returns:\n        bool: \u662f\u5426\u6210\u529f\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_consumable_energy/#tongsim.entity.ability.impl.consumable_energy.ConsumableEnergyAbility.set_beverage_energy","title":"set_beverage_energy","text":"<pre><code>set_beverage_energy(\n    anti_hungry: float, anti_thirsty: float, max_parts: int\n) -&gt; bool\n</code></pre> <p>\u540c\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u53ef\u996e\u7528\u80fd\u91cf\u503c\u3002</p> <p>Parameters:</p> Name Type Description Default <code>anti_hungry</code> <code>float</code> <p>\u6297\u9965\u997f\u503c, \u4ee3\u8868\u559d\u4e0b\u8be5\u5b9e\u4f53\u540e, agent \u7684\u9965\u997f\u503c\u4f1a\u4e0a\u5347\u591a\u5c11\u3002\u8303\u56f4: 0.0 ~ 2.0, agent \u7684\u9965\u997f\u503c\u8303\u56f4\u4e3a -1.0 ~ 1.0\u3002 -1.0 \u4ee3\u8868\u5b8c\u5168\u9971\u8179</p> required <code>anti_thirsty</code> <code>float</code> <p>\u6297\u53e3\u6e34\u503c, \u4ee3\u8868\u559d\u4e0b\u8be5\u5b9e\u4f53\u540e, agent \u7684\u53e3\u6e34\u503c\u4f1a\u4e0a\u5347\u591a\u5c11\u3002\u8303\u56f4: 0.0 ~ 2.0, agent \u7684\u53e3\u6e34\u503c\u8303\u56f4\u4e3a -1.0 ~ 1.0\u3002 -1.0 \u4ee3\u8868\u6c34\u5206\u5145\u8db3</p> required <code>max_parts</code> <code>int</code> <p>\u559d\u5b8c\u9700\u8981\u559d\u51e0\u53e3</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u662f\u5426\u6210\u529f\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\consumable_energy.py</code> <pre><code>def set_beverage_energy(\n    self, anti_hungry: float, anti_thirsty: float, max_parts: int\n) -&gt; bool:\n    \"\"\"\n    \u540c\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u53ef\u996e\u7528\u80fd\u91cf\u503c\u3002\n\n    Args:\n        anti_hungry (float): \u6297\u9965\u997f\u503c, \u4ee3\u8868\u559d\u4e0b\u8be5\u5b9e\u4f53\u540e, agent \u7684\u9965\u997f\u503c\u4f1a\u4e0a\u5347\u591a\u5c11\u3002\u8303\u56f4: 0.0 ~ 2.0, agent \u7684\u9965\u997f\u503c\u8303\u56f4\u4e3a -1.0 ~ 1.0\u3002 -1.0 \u4ee3\u8868\u5b8c\u5168\u9971\u8179\n        anti_thirsty (float): \u6297\u53e3\u6e34\u503c, \u4ee3\u8868\u559d\u4e0b\u8be5\u5b9e\u4f53\u540e, agent \u7684\u53e3\u6e34\u503c\u4f1a\u4e0a\u5347\u591a\u5c11\u3002\u8303\u56f4: 0.0 ~ 2.0, agent \u7684\u53e3\u6e34\u503c\u8303\u56f4\u4e3a -1.0 ~ 1.0\u3002 -1.0 \u4ee3\u8868\u6c34\u5206\u5145\u8db3\n        max_parts (int): \u559d\u5b8c\u9700\u8981\u559d\u51e0\u53e3\n\n    Returns:\n        bool: \u662f\u5426\u6210\u529f\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_interactable/","title":"\ud83c\udff7\ufe0f \u652f\u6301\u4ea4\u4e92\u63a7\u5236\u7684\u80fd\u529b","text":""},{"location":"api/ability_interactable/#tongsim.entity.ability.impl.interactable","title":"tongsim.entity.ability.impl.interactable","text":"<p>tongsim.entity.ability.impl.interactable</p>"},{"location":"api/ability_interactable/#tongsim.entity.ability.impl.interactable.InteractableAbility","title":"InteractableAbility","text":"<p>               Bases: <code>Protocol</code></p> <p>InteractableAbility \u5b9a\u4e49\u4e86\u652f\u6301\u4ea4\u4e92\u63a7\u5236\u7684\u5b9e\u4f53\u80fd\u529b\u63a5\u53e3\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\interactable.py</code> <pre><code>class InteractableAbility(Protocol):\n    \"\"\"\n    InteractableAbility \u5b9a\u4e49\u4e86\u652f\u6301\u4ea4\u4e92\u63a7\u5236\u7684\u5b9e\u4f53\u80fd\u529b\u63a5\u53e3\u3002\n    \"\"\"\n\n    async def async_get_active_state(self) -&gt; bool:\n        \"\"\"\n        \u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u6fc0\u6d3b\u72b6\u6001\u3002\u6ce8\u610f\u5982\u679c\u4e00\u4e2a\u7535\u5668\u6ca1\u6709\u901a\u7535\uff0c\u72b6\u6001\u6fc0\u6d3b\u4e86\u4e5f\u4e0d\u4f1a\u5de5\u4f5c\u3002\n\n        Returns:\n            bool: True \u8868\u793a\u6fc0\u6d3b\uff0cFalse \u8868\u793a\u672a\u6fc0\u6d3b\u3002\n        \"\"\"\n\n    def get_active_state(self) -&gt; bool:\n        \"\"\"\n        \u540c\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u6fc0\u6d3b\u72b6\u6001\u3002\u6ce8\u610f\u5982\u679c\u4e00\u4e2a\u7535\u5668\u6ca1\u6709\u901a\u7535\uff0c\u72b6\u6001\u6fc0\u6d3b\u4e86\u4e5f\u4e0d\u4f1a\u5de5\u4f5c\u3002\n\n        Returns:\n            bool: True \u8868\u793a\u6fc0\u6d3b\uff0cFalse \u8868\u793a\u672a\u6fc0\u6d3b\u3002\n        \"\"\"\n\n    async def async_set_active_state(self, is_active: bool) -&gt; bool:\n        \"\"\"\n        \u5f02\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u6fc0\u6d3b\u72b6\u6001\u3002\u6ce8\u610f\u5982\u679c\u4e00\u4e2a\u7535\u5668\u6ca1\u6709\u901a\u7535\uff0c\u72b6\u6001\u6fc0\u6d3b\u4e86\u4e5f\u4e0d\u4f1a\u5de5\u4f5c\u3002\n\n        Args:\n            is_active (bool): True \u8868\u793a\u6fc0\u6d3b\uff0cFalse \u8868\u793a\u5173\u95ed\u3002\n\n        Returns:\n            bool: \u662f\u5426\u8bbe\u7f6e\u6210\u529f\u3002\n        \"\"\"\n\n    def set_active_state(self, is_active: bool) -&gt; bool:\n        \"\"\"\n        \u540c\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u6fc0\u6d3b\u72b6\u6001\u3002\u6ce8\u610f\u5982\u679c\u4e00\u4e2a\u7535\u5668\u6ca1\u6709\u901a\u7535\uff0c\u72b6\u6001\u6fc0\u6d3b\u4e86\u4e5f\u4e0d\u4f1a\u5de5\u4f5c\u3002\n\n        Args:\n            is_active (bool): True \u8868\u793a\u6fc0\u6d3b\uff0cFalse \u8868\u793a\u5173\u95ed\u3002\n\n        Returns:\n            bool: \u662f\u5426\u8bbe\u7f6e\u6210\u529f\u3002\n        \"\"\"\n\n    async def async_get_interact_point(self) -&gt; Vector3:\n        \"\"\"\n        \u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u4ea4\u4e92\u70b9\u3002\u4f9d\u8d56\u8d44\u4ea7\u914d\u7f6e\uff0c\u82e5\u8d44\u4ea7\u914d\u7f6e\u7f3a\u5931\uff0c\u5219\u8fd4\u56de \u7269\u4f53\u951a\u70b9\u3002\n\n        Returns:\n            Vector3: \u4ea4\u4e92\u70b9\u7684\u4e16\u754c\u5750\u6807\u3002\n        \"\"\"\n\n    def get_interact_point(self) -&gt; Vector3:\n        \"\"\"\n        \u540c\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u4ea4\u4e92\u70b9\u4fe1\u606f\u3002\u4f9d\u8d56\u8d44\u4ea7\u914d\u7f6e\uff0c\u82e5\u8d44\u4ea7\u914d\u7f6e\u7f3a\u5931\uff0c\u5219\u8fd4\u56de \u7269\u4f53\u951a\u70b9\u3002\n\n        Returns:\n            Vector3: \u4ea4\u4e92\u70b9\u7684\u4e16\u754c\u5750\u6807\u3002\n        \"\"\"\n\n    async def async_get_group_id(self) -&gt; str:\n        \"\"\"\n        \u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u5206\u7ec4 ID\u3002\n\n        Returns:\n            str: \u5206\u7ec4 ID\u3002\n        \"\"\"\n\n    def get_group_id(self) -&gt; str:\n        \"\"\"\n        \u540c\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u5206\u7ec4 ID\u3002\n\n        Returns:\n            str: \u5206\u7ec4 ID\u3002\n        \"\"\"\n\n    async def async_get_entity_ids_in_same_group(self) -&gt; list[str]:\n        \"\"\"\n        \u5f02\u6b65\u83b7\u53d6\u540c\u4e00\u5206\u7ec4\u5185\u6240\u6709\u5b9e\u4f53\u7684 ID\u3002\n\n        Returns:\n            list[str]: \u5b9e\u4f53 ID \u5217\u8868\u3002\n        \"\"\"\n\n    def get_entity_ids_in_same_group(self) -&gt; list[str]:\n        \"\"\"\n        \u540c\u6b65\u83b7\u53d6\u540c\u4e00\u5206\u7ec4\u5185\u6240\u6709\u5b9e\u4f53\u7684 ID\u3002\n\n        Returns:\n            list[str]: \u5b9e\u4f53 ID \u5217\u8868\u3002\n        \"\"\"\n\n    async def async_set_group_id(self, new_group_id: str) -&gt; bool:\n        \"\"\"\n        \u5f02\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u5206\u7ec4 ID\u3002\n\n        Args:\n            new_group_id (str): \u65b0\u7684\u5206\u7ec4 ID\u3002\n\n        Returns:\n            bool: \u662f\u5426\u8bbe\u7f6e\u6210\u529f\u3002\n        \"\"\"\n\n    def set_group_id(self, new_group_id: str) -&gt; bool:\n        \"\"\"\n        \u540c\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u5206\u7ec4 ID\u3002\n\n        Args:\n            new_group_id (str): \u65b0\u7684\u5206\u7ec4 ID\u3002\n\n        Returns:\n            bool: \u662f\u5426\u8bbe\u7f6e\u6210\u529f\u3002\n        \"\"\"\n\n    def is_working(self) -&gt; bool:\n        \"\"\"\n        \u540c\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u662f\u5426\u6b63\u5728\u8fd0\u4f5c\uff08\u4f8b\u5982\u7535\u5668\u662f\u5426\u6b63\u5728\u5de5\u4f5c\uff09\u3002\n\n        Returns:\n            bool: True \u8868\u793a\u6b63\u5728\u5de5\u4f5c\uff0cFalse \u8868\u793a\u672a\u5de5\u4f5c\u3002\n        \"\"\"\n\n    async def async_is_working(self) -&gt; bool:\n        \"\"\"\n        \u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u662f\u5426\u6b63\u5728\u8fd0\u4f5c\uff08\u4f8b\u5982\u7535\u5668\u662f\u5426\u6b63\u5728\u5de5\u4f5c\uff09\u3002\n\n        Returns:\n            bool: True \u8868\u793a\u6b63\u5728\u5de5\u4f5c\uff0cFalse \u8868\u793a\u672a\u5de5\u4f5c\u3002\n        \"\"\"\n\n    async def async_get_place_point(self) -&gt; Vector3:\n        \"\"\"\n        \u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u914d\u7f6e\u7684\u653e\u7f6e\u70b9\u3002\u4f9d\u8d56\u8d44\u4ea7\u914d\u7f6e\uff0c\u82e5\u8d44\u4ea7\u914d\u7f6e\u7f3a\u5931\uff0c\u5219\u8fd4\u56de\u7269\u4f53\u951a\u70b9\u3002\n        \u4e3e\u4f8b:\n        - \u83b7\u53d6 \u996e\u6c34\u673a\u63a5\u6c34\u65f6 \u7684 \u6c34\u676f\u653e\u7f6e\u4f4d\u7f6e\n        - \u83b7\u53d6 \u591f\u4e0d\u7740\u7684\u6c34\u9f99\u5934\u4ea4\u4e92\u65f6 \u7684 \u51f3\u5b50\u653e\u7f6e\u4f4d\u7f6e\n\n        Returns:\n            Vector3: \u4ea4\u4e92\u70b9\u7684\u4e16\u754c\u5750\u6807\u3002\n        \"\"\"\n\n    def get_place_point(self) -&gt; Vector3:\n        \"\"\"\n        \u540c\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u914d\u7f6e\u7684\u653e\u7f6e\u70b9\u3002\u4f9d\u8d56\u8d44\u4ea7\u914d\u7f6e\uff0c\u82e5\u8d44\u4ea7\u914d\u7f6e\u7f3a\u5931\uff0c\u5219\u8fd4\u56de\u7269\u4f53\u951a\u70b9\u3002\n        \u4e3e\u4f8b:\n        - \u83b7\u53d6 \u996e\u6c34\u673a\u63a5\u6c34\u65f6 \u7684 \u6c34\u676f\u653e\u7f6e\u4f4d\u7f6e\n        - \u83b7\u53d6 \u591f\u4e0d\u7740\u7684\u6c34\u9f99\u5934\u4ea4\u4e92\u65f6 \u7684 \u51f3\u5b50\u653e\u7f6e\u4f4d\u7f6e\n\n        Returns:\n            Vector3: \u4ea4\u4e92\u70b9\u7684\u4e16\u754c\u5750\u6807\u3002\n        \"\"\"\n\n    async def async_set_ui_text(self, text: str) -&gt; bool:\n        \"\"\"\n        \u8bbe\u7f6e\u4e00\u4e2a\u7269\u4f53\u663e\u793a\u7684\u6587\u672c\uff0c\u5982\u652f\u6301\u6587\u672c\u663e\u793a\u529f\u80fd\n        \u4e3e\u4f8b:\n        - \u8bbe\u7f6e\u5bc6\u7801\u9501\u663e\u793a\u6587\u672c\n\n        Args:\n            text (str): \u9700\u8981\u663e\u793a\u7684\u6587\u672c\u3002\n\n        Returns:\n            bool: \u6210\u529f\u4e0e\u5426\u3002\n        \"\"\"\n\n    def set_ui_text(self, text: str) -&gt; bool:\n        \"\"\"\n        \u8bbe\u7f6e\u4e00\u4e2a\u7269\u4f53\u663e\u793a\u7684\u6587\u672c\uff0c\u5982\u652f\u6301\u6587\u672c\u663e\u793a\u529f\u80fd\n        \u4e3e\u4f8b:\n        - \u8bbe\u7f6e\u5bc6\u7801\u9501\u663e\u793a\u6587\u672c\n\n        Args:\n            text (str): \u9700\u8981\u663e\u793a\u7684\u6587\u672c\u3002\n\n        Returns:\n            bool: \u6210\u529f\u4e0e\u5426\u3002\n        \"\"\"\n</code></pre>"},{"location":"api/ability_interactable/#tongsim.entity.ability.impl.interactable.InteractableAbility.async_get_active_state","title":"async_get_active_state  <code>async</code>","text":"<pre><code>async_get_active_state() -&gt; bool\n</code></pre> <p>\u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u6fc0\u6d3b\u72b6\u6001\u3002\u6ce8\u610f\u5982\u679c\u4e00\u4e2a\u7535\u5668\u6ca1\u6709\u901a\u7535\uff0c\u72b6\u6001\u6fc0\u6d3b\u4e86\u4e5f\u4e0d\u4f1a\u5de5\u4f5c\u3002</p> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>True \u8868\u793a\u6fc0\u6d3b\uff0cFalse \u8868\u793a\u672a\u6fc0\u6d3b\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\interactable.py</code> <pre><code>async def async_get_active_state(self) -&gt; bool:\n    \"\"\"\n    \u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u6fc0\u6d3b\u72b6\u6001\u3002\u6ce8\u610f\u5982\u679c\u4e00\u4e2a\u7535\u5668\u6ca1\u6709\u901a\u7535\uff0c\u72b6\u6001\u6fc0\u6d3b\u4e86\u4e5f\u4e0d\u4f1a\u5de5\u4f5c\u3002\n\n    Returns:\n        bool: True \u8868\u793a\u6fc0\u6d3b\uff0cFalse \u8868\u793a\u672a\u6fc0\u6d3b\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_interactable/#tongsim.entity.ability.impl.interactable.InteractableAbility.get_active_state","title":"get_active_state","text":"<pre><code>get_active_state() -&gt; bool\n</code></pre> <p>\u540c\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u6fc0\u6d3b\u72b6\u6001\u3002\u6ce8\u610f\u5982\u679c\u4e00\u4e2a\u7535\u5668\u6ca1\u6709\u901a\u7535\uff0c\u72b6\u6001\u6fc0\u6d3b\u4e86\u4e5f\u4e0d\u4f1a\u5de5\u4f5c\u3002</p> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>True \u8868\u793a\u6fc0\u6d3b\uff0cFalse \u8868\u793a\u672a\u6fc0\u6d3b\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\interactable.py</code> <pre><code>def get_active_state(self) -&gt; bool:\n    \"\"\"\n    \u540c\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u6fc0\u6d3b\u72b6\u6001\u3002\u6ce8\u610f\u5982\u679c\u4e00\u4e2a\u7535\u5668\u6ca1\u6709\u901a\u7535\uff0c\u72b6\u6001\u6fc0\u6d3b\u4e86\u4e5f\u4e0d\u4f1a\u5de5\u4f5c\u3002\n\n    Returns:\n        bool: True \u8868\u793a\u6fc0\u6d3b\uff0cFalse \u8868\u793a\u672a\u6fc0\u6d3b\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_interactable/#tongsim.entity.ability.impl.interactable.InteractableAbility.async_set_active_state","title":"async_set_active_state  <code>async</code>","text":"<pre><code>async_set_active_state(is_active: bool) -&gt; bool\n</code></pre> <p>\u5f02\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u6fc0\u6d3b\u72b6\u6001\u3002\u6ce8\u610f\u5982\u679c\u4e00\u4e2a\u7535\u5668\u6ca1\u6709\u901a\u7535\uff0c\u72b6\u6001\u6fc0\u6d3b\u4e86\u4e5f\u4e0d\u4f1a\u5de5\u4f5c\u3002</p> <p>Parameters:</p> Name Type Description Default <code>is_active</code> <code>bool</code> <p>True \u8868\u793a\u6fc0\u6d3b\uff0cFalse \u8868\u793a\u5173\u95ed\u3002</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u662f\u5426\u8bbe\u7f6e\u6210\u529f\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\interactable.py</code> <pre><code>async def async_set_active_state(self, is_active: bool) -&gt; bool:\n    \"\"\"\n    \u5f02\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u6fc0\u6d3b\u72b6\u6001\u3002\u6ce8\u610f\u5982\u679c\u4e00\u4e2a\u7535\u5668\u6ca1\u6709\u901a\u7535\uff0c\u72b6\u6001\u6fc0\u6d3b\u4e86\u4e5f\u4e0d\u4f1a\u5de5\u4f5c\u3002\n\n    Args:\n        is_active (bool): True \u8868\u793a\u6fc0\u6d3b\uff0cFalse \u8868\u793a\u5173\u95ed\u3002\n\n    Returns:\n        bool: \u662f\u5426\u8bbe\u7f6e\u6210\u529f\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_interactable/#tongsim.entity.ability.impl.interactable.InteractableAbility.set_active_state","title":"set_active_state","text":"<pre><code>set_active_state(is_active: bool) -&gt; bool\n</code></pre> <p>\u540c\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u6fc0\u6d3b\u72b6\u6001\u3002\u6ce8\u610f\u5982\u679c\u4e00\u4e2a\u7535\u5668\u6ca1\u6709\u901a\u7535\uff0c\u72b6\u6001\u6fc0\u6d3b\u4e86\u4e5f\u4e0d\u4f1a\u5de5\u4f5c\u3002</p> <p>Parameters:</p> Name Type Description Default <code>is_active</code> <code>bool</code> <p>True \u8868\u793a\u6fc0\u6d3b\uff0cFalse \u8868\u793a\u5173\u95ed\u3002</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u662f\u5426\u8bbe\u7f6e\u6210\u529f\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\interactable.py</code> <pre><code>def set_active_state(self, is_active: bool) -&gt; bool:\n    \"\"\"\n    \u540c\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u6fc0\u6d3b\u72b6\u6001\u3002\u6ce8\u610f\u5982\u679c\u4e00\u4e2a\u7535\u5668\u6ca1\u6709\u901a\u7535\uff0c\u72b6\u6001\u6fc0\u6d3b\u4e86\u4e5f\u4e0d\u4f1a\u5de5\u4f5c\u3002\n\n    Args:\n        is_active (bool): True \u8868\u793a\u6fc0\u6d3b\uff0cFalse \u8868\u793a\u5173\u95ed\u3002\n\n    Returns:\n        bool: \u662f\u5426\u8bbe\u7f6e\u6210\u529f\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_interactable/#tongsim.entity.ability.impl.interactable.InteractableAbility.async_get_interact_point","title":"async_get_interact_point  <code>async</code>","text":"<pre><code>async_get_interact_point() -&gt; Vector3\n</code></pre> <p>\u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u4ea4\u4e92\u70b9\u3002\u4f9d\u8d56\u8d44\u4ea7\u914d\u7f6e\uff0c\u82e5\u8d44\u4ea7\u914d\u7f6e\u7f3a\u5931\uff0c\u5219\u8fd4\u56de \u7269\u4f53\u951a\u70b9\u3002</p> <p>Returns:</p> Name Type Description <code>Vector3</code> <code>Vector3</code> <p>\u4ea4\u4e92\u70b9\u7684\u4e16\u754c\u5750\u6807\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\interactable.py</code> <pre><code>async def async_get_interact_point(self) -&gt; Vector3:\n    \"\"\"\n    \u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u4ea4\u4e92\u70b9\u3002\u4f9d\u8d56\u8d44\u4ea7\u914d\u7f6e\uff0c\u82e5\u8d44\u4ea7\u914d\u7f6e\u7f3a\u5931\uff0c\u5219\u8fd4\u56de \u7269\u4f53\u951a\u70b9\u3002\n\n    Returns:\n        Vector3: \u4ea4\u4e92\u70b9\u7684\u4e16\u754c\u5750\u6807\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_interactable/#tongsim.entity.ability.impl.interactable.InteractableAbility.get_interact_point","title":"get_interact_point","text":"<pre><code>get_interact_point() -&gt; Vector3\n</code></pre> <p>\u540c\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u4ea4\u4e92\u70b9\u4fe1\u606f\u3002\u4f9d\u8d56\u8d44\u4ea7\u914d\u7f6e\uff0c\u82e5\u8d44\u4ea7\u914d\u7f6e\u7f3a\u5931\uff0c\u5219\u8fd4\u56de \u7269\u4f53\u951a\u70b9\u3002</p> <p>Returns:</p> Name Type Description <code>Vector3</code> <code>Vector3</code> <p>\u4ea4\u4e92\u70b9\u7684\u4e16\u754c\u5750\u6807\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\interactable.py</code> <pre><code>def get_interact_point(self) -&gt; Vector3:\n    \"\"\"\n    \u540c\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u4ea4\u4e92\u70b9\u4fe1\u606f\u3002\u4f9d\u8d56\u8d44\u4ea7\u914d\u7f6e\uff0c\u82e5\u8d44\u4ea7\u914d\u7f6e\u7f3a\u5931\uff0c\u5219\u8fd4\u56de \u7269\u4f53\u951a\u70b9\u3002\n\n    Returns:\n        Vector3: \u4ea4\u4e92\u70b9\u7684\u4e16\u754c\u5750\u6807\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_interactable/#tongsim.entity.ability.impl.interactable.InteractableAbility.async_get_group_id","title":"async_get_group_id  <code>async</code>","text":"<pre><code>async_get_group_id() -&gt; str\n</code></pre> <p>\u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u5206\u7ec4 ID\u3002</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>\u5206\u7ec4 ID\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\interactable.py</code> <pre><code>async def async_get_group_id(self) -&gt; str:\n    \"\"\"\n    \u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u5206\u7ec4 ID\u3002\n\n    Returns:\n        str: \u5206\u7ec4 ID\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_interactable/#tongsim.entity.ability.impl.interactable.InteractableAbility.get_group_id","title":"get_group_id","text":"<pre><code>get_group_id() -&gt; str\n</code></pre> <p>\u540c\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u5206\u7ec4 ID\u3002</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>\u5206\u7ec4 ID\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\interactable.py</code> <pre><code>def get_group_id(self) -&gt; str:\n    \"\"\"\n    \u540c\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u5206\u7ec4 ID\u3002\n\n    Returns:\n        str: \u5206\u7ec4 ID\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_interactable/#tongsim.entity.ability.impl.interactable.InteractableAbility.async_get_entity_ids_in_same_group","title":"async_get_entity_ids_in_same_group  <code>async</code>","text":"<pre><code>async_get_entity_ids_in_same_group() -&gt; list[str]\n</code></pre> <p>\u5f02\u6b65\u83b7\u53d6\u540c\u4e00\u5206\u7ec4\u5185\u6240\u6709\u5b9e\u4f53\u7684 ID\u3002</p> <p>Returns:</p> Type Description <code>list[str]</code> <p>list[str]: \u5b9e\u4f53 ID \u5217\u8868\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\interactable.py</code> <pre><code>async def async_get_entity_ids_in_same_group(self) -&gt; list[str]:\n    \"\"\"\n    \u5f02\u6b65\u83b7\u53d6\u540c\u4e00\u5206\u7ec4\u5185\u6240\u6709\u5b9e\u4f53\u7684 ID\u3002\n\n    Returns:\n        list[str]: \u5b9e\u4f53 ID \u5217\u8868\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_interactable/#tongsim.entity.ability.impl.interactable.InteractableAbility.get_entity_ids_in_same_group","title":"get_entity_ids_in_same_group","text":"<pre><code>get_entity_ids_in_same_group() -&gt; list[str]\n</code></pre> <p>\u540c\u6b65\u83b7\u53d6\u540c\u4e00\u5206\u7ec4\u5185\u6240\u6709\u5b9e\u4f53\u7684 ID\u3002</p> <p>Returns:</p> Type Description <code>list[str]</code> <p>list[str]: \u5b9e\u4f53 ID \u5217\u8868\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\interactable.py</code> <pre><code>def get_entity_ids_in_same_group(self) -&gt; list[str]:\n    \"\"\"\n    \u540c\u6b65\u83b7\u53d6\u540c\u4e00\u5206\u7ec4\u5185\u6240\u6709\u5b9e\u4f53\u7684 ID\u3002\n\n    Returns:\n        list[str]: \u5b9e\u4f53 ID \u5217\u8868\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_interactable/#tongsim.entity.ability.impl.interactable.InteractableAbility.async_set_group_id","title":"async_set_group_id  <code>async</code>","text":"<pre><code>async_set_group_id(new_group_id: str) -&gt; bool\n</code></pre> <p>\u5f02\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u5206\u7ec4 ID\u3002</p> <p>Parameters:</p> Name Type Description Default <code>new_group_id</code> <code>str</code> <p>\u65b0\u7684\u5206\u7ec4 ID\u3002</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u662f\u5426\u8bbe\u7f6e\u6210\u529f\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\interactable.py</code> <pre><code>async def async_set_group_id(self, new_group_id: str) -&gt; bool:\n    \"\"\"\n    \u5f02\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u5206\u7ec4 ID\u3002\n\n    Args:\n        new_group_id (str): \u65b0\u7684\u5206\u7ec4 ID\u3002\n\n    Returns:\n        bool: \u662f\u5426\u8bbe\u7f6e\u6210\u529f\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_interactable/#tongsim.entity.ability.impl.interactable.InteractableAbility.set_group_id","title":"set_group_id","text":"<pre><code>set_group_id(new_group_id: str) -&gt; bool\n</code></pre> <p>\u540c\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u5206\u7ec4 ID\u3002</p> <p>Parameters:</p> Name Type Description Default <code>new_group_id</code> <code>str</code> <p>\u65b0\u7684\u5206\u7ec4 ID\u3002</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u662f\u5426\u8bbe\u7f6e\u6210\u529f\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\interactable.py</code> <pre><code>def set_group_id(self, new_group_id: str) -&gt; bool:\n    \"\"\"\n    \u540c\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u5206\u7ec4 ID\u3002\n\n    Args:\n        new_group_id (str): \u65b0\u7684\u5206\u7ec4 ID\u3002\n\n    Returns:\n        bool: \u662f\u5426\u8bbe\u7f6e\u6210\u529f\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_interactable/#tongsim.entity.ability.impl.interactable.InteractableAbility.is_working","title":"is_working","text":"<pre><code>is_working() -&gt; bool\n</code></pre> <p>\u540c\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u662f\u5426\u6b63\u5728\u8fd0\u4f5c\uff08\u4f8b\u5982\u7535\u5668\u662f\u5426\u6b63\u5728\u5de5\u4f5c\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>True \u8868\u793a\u6b63\u5728\u5de5\u4f5c\uff0cFalse \u8868\u793a\u672a\u5de5\u4f5c\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\interactable.py</code> <pre><code>def is_working(self) -&gt; bool:\n    \"\"\"\n    \u540c\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u662f\u5426\u6b63\u5728\u8fd0\u4f5c\uff08\u4f8b\u5982\u7535\u5668\u662f\u5426\u6b63\u5728\u5de5\u4f5c\uff09\u3002\n\n    Returns:\n        bool: True \u8868\u793a\u6b63\u5728\u5de5\u4f5c\uff0cFalse \u8868\u793a\u672a\u5de5\u4f5c\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_interactable/#tongsim.entity.ability.impl.interactable.InteractableAbility.async_is_working","title":"async_is_working  <code>async</code>","text":"<pre><code>async_is_working() -&gt; bool\n</code></pre> <p>\u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u662f\u5426\u6b63\u5728\u8fd0\u4f5c\uff08\u4f8b\u5982\u7535\u5668\u662f\u5426\u6b63\u5728\u5de5\u4f5c\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>True \u8868\u793a\u6b63\u5728\u5de5\u4f5c\uff0cFalse \u8868\u793a\u672a\u5de5\u4f5c\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\interactable.py</code> <pre><code>async def async_is_working(self) -&gt; bool:\n    \"\"\"\n    \u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u662f\u5426\u6b63\u5728\u8fd0\u4f5c\uff08\u4f8b\u5982\u7535\u5668\u662f\u5426\u6b63\u5728\u5de5\u4f5c\uff09\u3002\n\n    Returns:\n        bool: True \u8868\u793a\u6b63\u5728\u5de5\u4f5c\uff0cFalse \u8868\u793a\u672a\u5de5\u4f5c\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_interactable/#tongsim.entity.ability.impl.interactable.InteractableAbility.async_get_place_point","title":"async_get_place_point  <code>async</code>","text":"<pre><code>async_get_place_point() -&gt; Vector3\n</code></pre> <p>\u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u914d\u7f6e\u7684\u653e\u7f6e\u70b9\u3002\u4f9d\u8d56\u8d44\u4ea7\u914d\u7f6e\uff0c\u82e5\u8d44\u4ea7\u914d\u7f6e\u7f3a\u5931\uff0c\u5219\u8fd4\u56de\u7269\u4f53\u951a\u70b9\u3002 \u4e3e\u4f8b: - \u83b7\u53d6 \u996e\u6c34\u673a\u63a5\u6c34\u65f6 \u7684 \u6c34\u676f\u653e\u7f6e\u4f4d\u7f6e - \u83b7\u53d6 \u591f\u4e0d\u7740\u7684\u6c34\u9f99\u5934\u4ea4\u4e92\u65f6 \u7684 \u51f3\u5b50\u653e\u7f6e\u4f4d\u7f6e</p> <p>Returns:</p> Name Type Description <code>Vector3</code> <code>Vector3</code> <p>\u4ea4\u4e92\u70b9\u7684\u4e16\u754c\u5750\u6807\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\interactable.py</code> <pre><code>async def async_get_place_point(self) -&gt; Vector3:\n    \"\"\"\n    \u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u914d\u7f6e\u7684\u653e\u7f6e\u70b9\u3002\u4f9d\u8d56\u8d44\u4ea7\u914d\u7f6e\uff0c\u82e5\u8d44\u4ea7\u914d\u7f6e\u7f3a\u5931\uff0c\u5219\u8fd4\u56de\u7269\u4f53\u951a\u70b9\u3002\n    \u4e3e\u4f8b:\n    - \u83b7\u53d6 \u996e\u6c34\u673a\u63a5\u6c34\u65f6 \u7684 \u6c34\u676f\u653e\u7f6e\u4f4d\u7f6e\n    - \u83b7\u53d6 \u591f\u4e0d\u7740\u7684\u6c34\u9f99\u5934\u4ea4\u4e92\u65f6 \u7684 \u51f3\u5b50\u653e\u7f6e\u4f4d\u7f6e\n\n    Returns:\n        Vector3: \u4ea4\u4e92\u70b9\u7684\u4e16\u754c\u5750\u6807\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_interactable/#tongsim.entity.ability.impl.interactable.InteractableAbility.get_place_point","title":"get_place_point","text":"<pre><code>get_place_point() -&gt; Vector3\n</code></pre> <p>\u540c\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u914d\u7f6e\u7684\u653e\u7f6e\u70b9\u3002\u4f9d\u8d56\u8d44\u4ea7\u914d\u7f6e\uff0c\u82e5\u8d44\u4ea7\u914d\u7f6e\u7f3a\u5931\uff0c\u5219\u8fd4\u56de\u7269\u4f53\u951a\u70b9\u3002 \u4e3e\u4f8b: - \u83b7\u53d6 \u996e\u6c34\u673a\u63a5\u6c34\u65f6 \u7684 \u6c34\u676f\u653e\u7f6e\u4f4d\u7f6e - \u83b7\u53d6 \u591f\u4e0d\u7740\u7684\u6c34\u9f99\u5934\u4ea4\u4e92\u65f6 \u7684 \u51f3\u5b50\u653e\u7f6e\u4f4d\u7f6e</p> <p>Returns:</p> Name Type Description <code>Vector3</code> <code>Vector3</code> <p>\u4ea4\u4e92\u70b9\u7684\u4e16\u754c\u5750\u6807\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\interactable.py</code> <pre><code>def get_place_point(self) -&gt; Vector3:\n    \"\"\"\n    \u540c\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u914d\u7f6e\u7684\u653e\u7f6e\u70b9\u3002\u4f9d\u8d56\u8d44\u4ea7\u914d\u7f6e\uff0c\u82e5\u8d44\u4ea7\u914d\u7f6e\u7f3a\u5931\uff0c\u5219\u8fd4\u56de\u7269\u4f53\u951a\u70b9\u3002\n    \u4e3e\u4f8b:\n    - \u83b7\u53d6 \u996e\u6c34\u673a\u63a5\u6c34\u65f6 \u7684 \u6c34\u676f\u653e\u7f6e\u4f4d\u7f6e\n    - \u83b7\u53d6 \u591f\u4e0d\u7740\u7684\u6c34\u9f99\u5934\u4ea4\u4e92\u65f6 \u7684 \u51f3\u5b50\u653e\u7f6e\u4f4d\u7f6e\n\n    Returns:\n        Vector3: \u4ea4\u4e92\u70b9\u7684\u4e16\u754c\u5750\u6807\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_interactable/#tongsim.entity.ability.impl.interactable.InteractableAbility.async_set_ui_text","title":"async_set_ui_text  <code>async</code>","text":"<pre><code>async_set_ui_text(text: str) -&gt; bool\n</code></pre> <p>\u8bbe\u7f6e\u4e00\u4e2a\u7269\u4f53\u663e\u793a\u7684\u6587\u672c\uff0c\u5982\u652f\u6301\u6587\u672c\u663e\u793a\u529f\u80fd \u4e3e\u4f8b: - \u8bbe\u7f6e\u5bc6\u7801\u9501\u663e\u793a\u6587\u672c</p> <p>Parameters:</p> Name Type Description Default <code>text</code> <code>str</code> <p>\u9700\u8981\u663e\u793a\u7684\u6587\u672c\u3002</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u6210\u529f\u4e0e\u5426\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\interactable.py</code> <pre><code>async def async_set_ui_text(self, text: str) -&gt; bool:\n    \"\"\"\n    \u8bbe\u7f6e\u4e00\u4e2a\u7269\u4f53\u663e\u793a\u7684\u6587\u672c\uff0c\u5982\u652f\u6301\u6587\u672c\u663e\u793a\u529f\u80fd\n    \u4e3e\u4f8b:\n    - \u8bbe\u7f6e\u5bc6\u7801\u9501\u663e\u793a\u6587\u672c\n\n    Args:\n        text (str): \u9700\u8981\u663e\u793a\u7684\u6587\u672c\u3002\n\n    Returns:\n        bool: \u6210\u529f\u4e0e\u5426\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_interactable/#tongsim.entity.ability.impl.interactable.InteractableAbility.set_ui_text","title":"set_ui_text","text":"<pre><code>set_ui_text(text: str) -&gt; bool\n</code></pre> <p>\u8bbe\u7f6e\u4e00\u4e2a\u7269\u4f53\u663e\u793a\u7684\u6587\u672c\uff0c\u5982\u652f\u6301\u6587\u672c\u663e\u793a\u529f\u80fd \u4e3e\u4f8b: - \u8bbe\u7f6e\u5bc6\u7801\u9501\u663e\u793a\u6587\u672c</p> <p>Parameters:</p> Name Type Description Default <code>text</code> <code>str</code> <p>\u9700\u8981\u663e\u793a\u7684\u6587\u672c\u3002</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u6210\u529f\u4e0e\u5426\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\interactable.py</code> <pre><code>def set_ui_text(self, text: str) -&gt; bool:\n    \"\"\"\n    \u8bbe\u7f6e\u4e00\u4e2a\u7269\u4f53\u663e\u793a\u7684\u6587\u672c\uff0c\u5982\u652f\u6301\u6587\u672c\u663e\u793a\u529f\u80fd\n    \u4e3e\u4f8b:\n    - \u8bbe\u7f6e\u5bc6\u7801\u9501\u663e\u793a\u6587\u672c\n\n    Args:\n        text (str): \u9700\u8981\u663e\u793a\u7684\u6587\u672c\u3002\n\n    Returns:\n        bool: \u6210\u529f\u4e0e\u5426\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_powerable/","title":"\ud83c\udff7\ufe0f \u7535\u6e90\u7684\u80fd\u529b","text":""},{"location":"api/ability_powerable/#tongsim.entity.ability.impl.powerable","title":"tongsim.entity.ability.impl.powerable","text":"<p>tongsim.entity.ability.impl.powerable</p>"},{"location":"api/ability_powerable/#tongsim.entity.ability.impl.powerable.PowerableAbility","title":"PowerableAbility","text":"<p>               Bases: <code>Protocol</code></p> <p>PowerableAbility \u5b9a\u4e49\u4e86\u5177\u5907\u901a\u7535\u72b6\u6001\u7ba1\u7406\u7684\u5b9e\u4f53\u80fd\u529b\u63a5\u53e3\u3002</p> <p>\u63d0\u4f9b\u662f\u5426\u901a\u7535\u72b6\u6001\u7684\u67e5\u8be2\u4e0e\u63a7\u5236\u63a5\u53e3\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\powerable.py</code> <pre><code>class PowerableAbility(Protocol):\n    \"\"\"\n    PowerableAbility \u5b9a\u4e49\u4e86\u5177\u5907\u901a\u7535\u72b6\u6001\u7ba1\u7406\u7684\u5b9e\u4f53\u80fd\u529b\u63a5\u53e3\u3002\n\n    \u63d0\u4f9b\u662f\u5426\u901a\u7535\u72b6\u6001\u7684\u67e5\u8be2\u4e0e\u63a7\u5236\u63a5\u53e3\u3002\n    \"\"\"\n\n    async def async_get_power_status(self) -&gt; bool:\n        \"\"\"\n        \u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u901a\u7535\u72b6\u6001\u3002\n\n        Returns:\n            bool: True \u8868\u793a\u901a\u7535\uff0cFalse \u8868\u793a\u65ad\u7535\u3002\n        \"\"\"\n\n    def get_power_status(self) -&gt; bool:\n        \"\"\"\n        \u540c\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u901a\u7535\u72b6\u6001\u3002\n\n        Returns:\n            bool: True \u8868\u793a\u901a\u7535\uff0cFalse \u8868\u793a\u65ad\u7535\u3002\n        \"\"\"\n\n    async def async_set_power_status(self, is_on: bool) -&gt; bool:\n        \"\"\"\n        \u5f02\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u901a\u7535\u72b6\u6001\u3002\u6ce8\u610f\u5f53\u8be5\u63a5\u53e3\u8bbe\u7f6e\u540e\uff0c\u65e0\u8bba\u7269\u4f53\u662f\u5426\u63a5\u901a\u7535\u6e90\uff0c\u90fd\u4f1a\u83b7\u5f97 \u901a\u7535/\u65ad\u7535 \u7684\u72b6\u6001\u3002\n\n        Args:\n            is_on (bool): True \u8868\u793a\u901a\u7535\uff0cFalse \u8868\u793a\u65ad\u7535\u3002\n\n        Returns:\n            bool: \u662f\u5426\u8bbe\u7f6e\u6210\u529f\u3002\n        \"\"\"\n\n    def set_power_status(self, is_on: bool) -&gt; bool:\n        \"\"\"\n        \u540c\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u901a\u7535\u72b6\u6001\u3002\u6ce8\u610f\u5f53\u8be5\u63a5\u53e3\u8bbe\u7f6e\u540e\uff0c\u65e0\u8bba\u7269\u4f53\u662f\u5426\u63a5\u901a\u7535\u6e90\uff0c\u90fd\u4f1a\u83b7\u5f97 \u901a\u7535/\u65ad\u7535 \u7684\u72b6\u6001\u3002\n\n        Args:\n            is_on (bool): True \u8868\u793a\u901a\u7535\uff0cFalse \u8868\u793a\u65ad\u7535\u3002\n\n        Returns:\n            bool: \u662f\u5426\u8bbe\u7f6e\u6210\u529f\u3002\n        \"\"\"\n</code></pre>"},{"location":"api/ability_powerable/#tongsim.entity.ability.impl.powerable.PowerableAbility.async_get_power_status","title":"async_get_power_status  <code>async</code>","text":"<pre><code>async_get_power_status() -&gt; bool\n</code></pre> <p>\u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u901a\u7535\u72b6\u6001\u3002</p> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>True \u8868\u793a\u901a\u7535\uff0cFalse \u8868\u793a\u65ad\u7535\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\powerable.py</code> <pre><code>async def async_get_power_status(self) -&gt; bool:\n    \"\"\"\n    \u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u901a\u7535\u72b6\u6001\u3002\n\n    Returns:\n        bool: True \u8868\u793a\u901a\u7535\uff0cFalse \u8868\u793a\u65ad\u7535\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_powerable/#tongsim.entity.ability.impl.powerable.PowerableAbility.get_power_status","title":"get_power_status","text":"<pre><code>get_power_status() -&gt; bool\n</code></pre> <p>\u540c\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u901a\u7535\u72b6\u6001\u3002</p> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>True \u8868\u793a\u901a\u7535\uff0cFalse \u8868\u793a\u65ad\u7535\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\powerable.py</code> <pre><code>def get_power_status(self) -&gt; bool:\n    \"\"\"\n    \u540c\u6b65\u83b7\u53d6\u5f53\u524d\u5b9e\u4f53\u7684\u901a\u7535\u72b6\u6001\u3002\n\n    Returns:\n        bool: True \u8868\u793a\u901a\u7535\uff0cFalse \u8868\u793a\u65ad\u7535\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_powerable/#tongsim.entity.ability.impl.powerable.PowerableAbility.async_set_power_status","title":"async_set_power_status  <code>async</code>","text":"<pre><code>async_set_power_status(is_on: bool) -&gt; bool\n</code></pre> <p>\u5f02\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u901a\u7535\u72b6\u6001\u3002\u6ce8\u610f\u5f53\u8be5\u63a5\u53e3\u8bbe\u7f6e\u540e\uff0c\u65e0\u8bba\u7269\u4f53\u662f\u5426\u63a5\u901a\u7535\u6e90\uff0c\u90fd\u4f1a\u83b7\u5f97 \u901a\u7535/\u65ad\u7535 \u7684\u72b6\u6001\u3002</p> <p>Parameters:</p> Name Type Description Default <code>is_on</code> <code>bool</code> <p>True \u8868\u793a\u901a\u7535\uff0cFalse \u8868\u793a\u65ad\u7535\u3002</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u662f\u5426\u8bbe\u7f6e\u6210\u529f\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\powerable.py</code> <pre><code>async def async_set_power_status(self, is_on: bool) -&gt; bool:\n    \"\"\"\n    \u5f02\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u901a\u7535\u72b6\u6001\u3002\u6ce8\u610f\u5f53\u8be5\u63a5\u53e3\u8bbe\u7f6e\u540e\uff0c\u65e0\u8bba\u7269\u4f53\u662f\u5426\u63a5\u901a\u7535\u6e90\uff0c\u90fd\u4f1a\u83b7\u5f97 \u901a\u7535/\u65ad\u7535 \u7684\u72b6\u6001\u3002\n\n    Args:\n        is_on (bool): True \u8868\u793a\u901a\u7535\uff0cFalse \u8868\u793a\u65ad\u7535\u3002\n\n    Returns:\n        bool: \u662f\u5426\u8bbe\u7f6e\u6210\u529f\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_powerable/#tongsim.entity.ability.impl.powerable.PowerableAbility.set_power_status","title":"set_power_status","text":"<pre><code>set_power_status(is_on: bool) -&gt; bool\n</code></pre> <p>\u540c\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u901a\u7535\u72b6\u6001\u3002\u6ce8\u610f\u5f53\u8be5\u63a5\u53e3\u8bbe\u7f6e\u540e\uff0c\u65e0\u8bba\u7269\u4f53\u662f\u5426\u63a5\u901a\u7535\u6e90\uff0c\u90fd\u4f1a\u83b7\u5f97 \u901a\u7535/\u65ad\u7535 \u7684\u72b6\u6001\u3002</p> <p>Parameters:</p> Name Type Description Default <code>is_on</code> <code>bool</code> <p>True \u8868\u793a\u901a\u7535\uff0cFalse \u8868\u793a\u65ad\u7535\u3002</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u662f\u5426\u8bbe\u7f6e\u6210\u529f\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\powerable.py</code> <pre><code>def set_power_status(self, is_on: bool) -&gt; bool:\n    \"\"\"\n    \u540c\u6b65\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f53\u7684\u901a\u7535\u72b6\u6001\u3002\u6ce8\u610f\u5f53\u8be5\u63a5\u53e3\u8bbe\u7f6e\u540e\uff0c\u65e0\u8bba\u7269\u4f53\u662f\u5426\u63a5\u901a\u7535\u6e90\uff0c\u90fd\u4f1a\u83b7\u5f97 \u901a\u7535/\u65ad\u7535 \u7684\u72b6\u6001\u3002\n\n    Args:\n        is_on (bool): True \u8868\u793a\u901a\u7535\uff0cFalse \u8868\u793a\u65ad\u7535\u3002\n\n    Returns:\n        bool: \u662f\u5426\u8bbe\u7f6e\u6210\u529f\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_scene/","title":"\ud83c\udff7\ufe0f \u573a\u666f\u7a7a\u95f4\u80fd\u529b","text":""},{"location":"api/ability_scene/#tongsim.entity.ability.impl.scene","title":"tongsim.entity.ability.impl.scene","text":""},{"location":"api/ability_scene/#tongsim.entity.ability.impl.scene.SceneAbility","title":"SceneAbility","text":"<p>               Bases: <code>Protocol</code></p> <p>\u7a7a\u95f4\u80fd\u529b\u63a5\u53e3\uff0c\u63d0\u4f9b Entity \u7684\u4f4d\u7f6e\u3001\u65cb\u8f6c\u3001\u671d\u5411\u5411\u91cf\u7b49\u80fd\u529b\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\scene.py</code> <pre><code>class SceneAbility(Protocol):\n    \"\"\"\n    \u7a7a\u95f4\u80fd\u529b\u63a5\u53e3\uff0c\u63d0\u4f9b Entity \u7684\u4f4d\u7f6e\u3001\u65cb\u8f6c\u3001\u671d\u5411\u5411\u91cf\u7b49\u80fd\u529b\u3002\n    \"\"\"\n\n    def get_pose(self) -&gt; Pose:\n        \"\"\"\n        \u83b7\u53d6 Entity \u7684\u5f53\u524d\u4f4d\u7f6e\u548c\u65cb\u8f6c\u59ff\u6001\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n        Returns:\n            Pose: \u5b9e\u4f53\u7684\u4f4d\u59ff\uff08\u4f4d\u7f6e + \u65cb\u8f6c\uff09\u3002\n        \"\"\"\n\n    async def async_get_pose(self) -&gt; Pose:\n        \"\"\"\n        \u83b7\u53d6 Entity \u7684\u5f53\u524d\u4f4d\u7f6e\u548c\u65cb\u8f6c\u59ff\u6001\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        Returns:\n            Pose: \u5b9e\u4f53\u7684\u4f4d\u59ff\uff08\u4f4d\u7f6e + \u65cb\u8f6c\uff09\u3002\n        \"\"\"\n\n    def set_pose(self, pose: Pose) -&gt; bool:\n        \"\"\"\n        \u8bbe\u7f6e Entity \u7684\u4f4d\u7f6e\u4e0e\u65cb\u8f6c\u3002\n\n        Args:\n            pose (Pose): \u76ee\u6807\u4f4d\u59ff\u3002\n\n        Returns:\n            bool: \u8bbe\u7f6e\u662f\u5426\u6210\u529f\u3002\n        \"\"\"\n\n    async def async_set_pose(self, pose: Pose) -&gt; bool:\n        \"\"\"\n        \u8bbe\u7f6e Entity \u7684\u4f4d\u7f6e\u4e0e\u65cb\u8f6c\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        Args:\n            pose (Pose): \u76ee\u6807\u4f4d\u59ff\u3002\n\n        Returns:\n            bool: \u8bbe\u7f6e\u662f\u5426\u6210\u529f\u3002\n        \"\"\"\n\n    def get_location(self) -&gt; Vector3:\n        \"\"\"\n        \u83b7\u53d6 Entity \u7684\u5f53\u524d\u4f4d\u7f6e\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n        Returns:\n            Vector3: \u5f53\u524d\u4f4d\u7f6e\u3002\n        \"\"\"\n\n    async def async_get_location(self) -&gt; Vector3:\n        \"\"\"\n        \u83b7\u53d6 Entity \u7684\u5f53\u524d\u4f4d\u7f6e\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        Returns:\n            Vector3: \u5f53\u524d\u4f4d\u7f6e\u3002\n        \"\"\"\n\n    def set_location(self, location: Vector3) -&gt; bool:\n        \"\"\"\n        \u8bbe\u7f6e Entity \u7684\u4f4d\u7f6e\uff0c\u4fdd\u6301\u539f\u6709\u65cb\u8f6c\u4e0d\u53d8\u3002\n\n        Args:\n            location (Vector3): \u65b0\u4f4d\u7f6e\u3002\n\n        Returns:\n            bool: \u8bbe\u7f6e\u662f\u5426\u6210\u529f\u3002\n        \"\"\"\n\n    def get_rotation(self) -&gt; Quaternion:\n        \"\"\"\n        \u83b7\u53d6 Entity \u5f53\u524d\u7684\u65cb\u8f6c\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n        Returns:\n            Quaternion: \u5f53\u524d\u65cb\u8f6c\uff08\u56db\u5143\u6570\uff09\u3002\n        \"\"\"\n\n    def set_rotation(self, rotation: Quaternion) -&gt; bool:\n        \"\"\"\n        \u8bbe\u7f6e Entity \u7684\u65cb\u8f6c\uff0c\u4fdd\u6301\u539f\u6709\u4f4d\u7f6e\u4e0d\u53d8\u3002\n\n        Args:\n            rotation (Quaternion): \u65b0\u7684\u65cb\u8f6c\uff08\u56db\u5143\u6570\uff09\u3002\n\n        Returns:\n            bool: \u8bbe\u7f6e\u662f\u5426\u6210\u529f\u3002\n        \"\"\"\n\n    def get_forward_vector(self) -&gt; Vector3:\n        \"\"\"\n        \u83b7\u53d6 Entity \u7684\u671d\u524d\u65b9\u5411\u5411\u91cf\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n        Returns:\n            Vector3: \u5355\u4f4d\u5411\u91cf\uff0c\u8868\u793a\u524d\u65b9\u65b9\u5411\u3002\n        \"\"\"\n\n    async def async_get_forward_vector(self) -&gt; Vector3:\n        \"\"\"\n        \u83b7\u53d6 Entity \u7684\u671d\u524d\u65b9\u5411\u5411\u91cf\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        Returns:\n            Vector3: \u5355\u4f4d\u5411\u91cf\uff0c\u8868\u793a\u524d\u65b9\u65b9\u5411\u3002\n        \"\"\"\n\n    def get_right_vector(self) -&gt; Vector3:\n        \"\"\"\n        \u83b7\u53d6 Entity \u7684\u53f3\u65b9\u65b9\u5411\u5411\u91cf\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n        Returns:\n            Vector3: \u5355\u4f4d\u5411\u91cf\uff0c\u8868\u793a\u53f3\u65b9\u65b9\u5411\u3002\n        \"\"\"\n\n    async def async_get_right_vector(self) -&gt; Vector3:\n        \"\"\"\n        \u83b7\u53d6 Entity \u7684\u53f3\u65b9\u65b9\u5411\u5411\u91cf\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        Returns:\n            Vector3: \u5355\u4f4d\u5411\u91cf\uff0c\u8868\u793a\u53f3\u65b9\u65b9\u5411\u3002\n        \"\"\"\n\n    def get_object_direction(self) -&gt; Vector3:\n        \"\"\"\n        \u7528\u6765\u83b7\u53d6 \u955c\u5b50\u3001\u67dc\u5b50 \u7b49\u7269\u4f53\u7684\u9762\u671d\u65b9\u5411\u3002\u8d44\u4ea7\u914d\u7f6e \u53f3\u65b9\u65b9\u5411 \u4e3a\u9762\u671d\u6b63\u65b9\u5411\uff0c\u6b64\u63a5\u53e3\u5e95\u5c42\u8fd4\u56de RightVector\n\n        Returns:\n            Vector3: \u5355\u4f4d\u5411\u91cf\n        \"\"\"\n\n    async def async_get_object_direction(self) -&gt; Vector3:\n        \"\"\"\n        \u7528\u6765\u83b7\u53d6 \u955c\u5b50\u3001\u67dc\u5b50 \u7b49\u7269\u4f53\u7684\u9762\u671d\u65b9\u5411\u3002\u8d44\u4ea7\u914d\u7f6e \u53f3\u65b9\u65b9\u5411 \u4e3a\u9762\u671d\u6b63\u65b9\u5411\uff0c\u6b64\u63a5\u53e3\u5e95\u5c42\u8fd4\u56de RightVector\n\n        Returns:\n            Vector3: \u5355\u4f4d\u5411\u91cf\n        \"\"\"\n\n    def get_scale(self) -&gt; Vector3:\n        \"\"\"\n        \u83b7\u53d6 Entity \u7684\u5f53\u524d\u7f29\u653e\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n        Returns:\n            Vector3: \u5f53\u524d\u7f29\u653e\u3002\n        \"\"\"\n\n    async def async_get_scale(self) -&gt; Vector3:\n        \"\"\"\n        \u83b7\u53d6 Entity \u7684\u5f53\u524d\u7f29\u653e\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        Returns:\n            Vector3: \u5f53\u524d\u7f29\u653e\u3002\n        \"\"\"\n\n    def set_scale(self, new_scale: Vector3) -&gt; bool:\n        \"\"\"\n        \u8bbe\u7f6e Entity \u7684\u7f29\u653e\u3002\n\n        Args:\n            new_scale (Vector3): \u65b0\u7684\u7f29\u653e\u503c\u3002\n\n        Returns:\n            bool: \u8bbe\u7f6e\u662f\u5426\u6210\u529f\u3002\n        \"\"\"\n\n    async def async_set_scale(self, new_scale: Vector3) -&gt; bool:\n        \"\"\"\n        \u8bbe\u7f6e Entity \u7684\u7f29\u653e\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        Args:\n            new_scale (Vector3): \u65b0\u7684\u7f29\u653e\u503c\u3002\n\n        Returns:\n            bool: \u8bbe\u7f6e\u662f\u5426\u6210\u529f\u3002\n        \"\"\"\n\n    def get_transform(self) -&gt; Transform:\n        \"\"\"\n        \u83b7\u53d6 Entity \u7684\u5b8c\u6574\u53d8\u6362\u4fe1\u606f\uff08\u4f4d\u7f6e\u3001\u65cb\u8f6c\u3001\u7f29\u653e\uff09\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n        Returns:\n            Transform: \u5b8c\u6574\u7684\u53d8\u6362\u4fe1\u606f\u3002\n        \"\"\"\n\n    async def async_get_transform(self) -&gt; Transform:\n        \"\"\"\n        \u83b7\u53d6 Entity \u7684\u5b8c\u6574\u53d8\u6362\u4fe1\u606f\uff08\u4f4d\u7f6e\u3001\u65cb\u8f6c\u3001\u7f29\u653e\uff09\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        Returns:\n            Transform: \u5b8c\u6574\u7684\u53d8\u6362\u4fe1\u606f\u3002\n        \"\"\"\n</code></pre>"},{"location":"api/ability_scene/#tongsim.entity.ability.impl.scene.SceneAbility.get_pose","title":"get_pose","text":"<pre><code>get_pose() -&gt; Pose\n</code></pre> <p>\u83b7\u53d6 Entity \u7684\u5f53\u524d\u4f4d\u7f6e\u548c\u65cb\u8f6c\u59ff\u6001\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>Pose</code> <code>Pose</code> <p>\u5b9e\u4f53\u7684\u4f4d\u59ff\uff08\u4f4d\u7f6e + \u65cb\u8f6c\uff09\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\scene.py</code> <pre><code>def get_pose(self) -&gt; Pose:\n    \"\"\"\n    \u83b7\u53d6 Entity \u7684\u5f53\u524d\u4f4d\u7f6e\u548c\u65cb\u8f6c\u59ff\u6001\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n    Returns:\n        Pose: \u5b9e\u4f53\u7684\u4f4d\u59ff\uff08\u4f4d\u7f6e + \u65cb\u8f6c\uff09\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_scene/#tongsim.entity.ability.impl.scene.SceneAbility.async_get_pose","title":"async_get_pose  <code>async</code>","text":"<pre><code>async_get_pose() -&gt; Pose\n</code></pre> <p>\u83b7\u53d6 Entity \u7684\u5f53\u524d\u4f4d\u7f6e\u548c\u65cb\u8f6c\u59ff\u6001\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>Pose</code> <code>Pose</code> <p>\u5b9e\u4f53\u7684\u4f4d\u59ff\uff08\u4f4d\u7f6e + \u65cb\u8f6c\uff09\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\scene.py</code> <pre><code>async def async_get_pose(self) -&gt; Pose:\n    \"\"\"\n    \u83b7\u53d6 Entity \u7684\u5f53\u524d\u4f4d\u7f6e\u548c\u65cb\u8f6c\u59ff\u6001\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    Returns:\n        Pose: \u5b9e\u4f53\u7684\u4f4d\u59ff\uff08\u4f4d\u7f6e + \u65cb\u8f6c\uff09\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_scene/#tongsim.entity.ability.impl.scene.SceneAbility.set_pose","title":"set_pose","text":"<pre><code>set_pose(pose: Pose) -&gt; bool\n</code></pre> <p>\u8bbe\u7f6e Entity \u7684\u4f4d\u7f6e\u4e0e\u65cb\u8f6c\u3002</p> <p>Parameters:</p> Name Type Description Default <code>pose</code> <code>Pose</code> <p>\u76ee\u6807\u4f4d\u59ff\u3002</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u8bbe\u7f6e\u662f\u5426\u6210\u529f\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\scene.py</code> <pre><code>def set_pose(self, pose: Pose) -&gt; bool:\n    \"\"\"\n    \u8bbe\u7f6e Entity \u7684\u4f4d\u7f6e\u4e0e\u65cb\u8f6c\u3002\n\n    Args:\n        pose (Pose): \u76ee\u6807\u4f4d\u59ff\u3002\n\n    Returns:\n        bool: \u8bbe\u7f6e\u662f\u5426\u6210\u529f\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_scene/#tongsim.entity.ability.impl.scene.SceneAbility.async_set_pose","title":"async_set_pose  <code>async</code>","text":"<pre><code>async_set_pose(pose: Pose) -&gt; bool\n</code></pre> <p>\u8bbe\u7f6e Entity \u7684\u4f4d\u7f6e\u4e0e\u65cb\u8f6c\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Parameters:</p> Name Type Description Default <code>pose</code> <code>Pose</code> <p>\u76ee\u6807\u4f4d\u59ff\u3002</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u8bbe\u7f6e\u662f\u5426\u6210\u529f\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\scene.py</code> <pre><code>async def async_set_pose(self, pose: Pose) -&gt; bool:\n    \"\"\"\n    \u8bbe\u7f6e Entity \u7684\u4f4d\u7f6e\u4e0e\u65cb\u8f6c\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    Args:\n        pose (Pose): \u76ee\u6807\u4f4d\u59ff\u3002\n\n    Returns:\n        bool: \u8bbe\u7f6e\u662f\u5426\u6210\u529f\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_scene/#tongsim.entity.ability.impl.scene.SceneAbility.get_location","title":"get_location","text":"<pre><code>get_location() -&gt; Vector3\n</code></pre> <p>\u83b7\u53d6 Entity \u7684\u5f53\u524d\u4f4d\u7f6e\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>Vector3</code> <code>Vector3</code> <p>\u5f53\u524d\u4f4d\u7f6e\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\scene.py</code> <pre><code>def get_location(self) -&gt; Vector3:\n    \"\"\"\n    \u83b7\u53d6 Entity \u7684\u5f53\u524d\u4f4d\u7f6e\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n    Returns:\n        Vector3: \u5f53\u524d\u4f4d\u7f6e\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_scene/#tongsim.entity.ability.impl.scene.SceneAbility.async_get_location","title":"async_get_location  <code>async</code>","text":"<pre><code>async_get_location() -&gt; Vector3\n</code></pre> <p>\u83b7\u53d6 Entity \u7684\u5f53\u524d\u4f4d\u7f6e\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>Vector3</code> <code>Vector3</code> <p>\u5f53\u524d\u4f4d\u7f6e\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\scene.py</code> <pre><code>async def async_get_location(self) -&gt; Vector3:\n    \"\"\"\n    \u83b7\u53d6 Entity \u7684\u5f53\u524d\u4f4d\u7f6e\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    Returns:\n        Vector3: \u5f53\u524d\u4f4d\u7f6e\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_scene/#tongsim.entity.ability.impl.scene.SceneAbility.set_location","title":"set_location","text":"<pre><code>set_location(location: Vector3) -&gt; bool\n</code></pre> <p>\u8bbe\u7f6e Entity \u7684\u4f4d\u7f6e\uff0c\u4fdd\u6301\u539f\u6709\u65cb\u8f6c\u4e0d\u53d8\u3002</p> <p>Parameters:</p> Name Type Description Default <code>location</code> <code>Vector3</code> <p>\u65b0\u4f4d\u7f6e\u3002</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u8bbe\u7f6e\u662f\u5426\u6210\u529f\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\scene.py</code> <pre><code>def set_location(self, location: Vector3) -&gt; bool:\n    \"\"\"\n    \u8bbe\u7f6e Entity \u7684\u4f4d\u7f6e\uff0c\u4fdd\u6301\u539f\u6709\u65cb\u8f6c\u4e0d\u53d8\u3002\n\n    Args:\n        location (Vector3): \u65b0\u4f4d\u7f6e\u3002\n\n    Returns:\n        bool: \u8bbe\u7f6e\u662f\u5426\u6210\u529f\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_scene/#tongsim.entity.ability.impl.scene.SceneAbility.get_rotation","title":"get_rotation","text":"<pre><code>get_rotation() -&gt; Quaternion\n</code></pre> <p>\u83b7\u53d6 Entity \u5f53\u524d\u7684\u65cb\u8f6c\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>Quaternion</code> <code>Quaternion</code> <p>\u5f53\u524d\u65cb\u8f6c\uff08\u56db\u5143\u6570\uff09\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\scene.py</code> <pre><code>def get_rotation(self) -&gt; Quaternion:\n    \"\"\"\n    \u83b7\u53d6 Entity \u5f53\u524d\u7684\u65cb\u8f6c\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n    Returns:\n        Quaternion: \u5f53\u524d\u65cb\u8f6c\uff08\u56db\u5143\u6570\uff09\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_scene/#tongsim.entity.ability.impl.scene.SceneAbility.set_rotation","title":"set_rotation","text":"<pre><code>set_rotation(rotation: Quaternion) -&gt; bool\n</code></pre> <p>\u8bbe\u7f6e Entity \u7684\u65cb\u8f6c\uff0c\u4fdd\u6301\u539f\u6709\u4f4d\u7f6e\u4e0d\u53d8\u3002</p> <p>Parameters:</p> Name Type Description Default <code>rotation</code> <code>Quaternion</code> <p>\u65b0\u7684\u65cb\u8f6c\uff08\u56db\u5143\u6570\uff09\u3002</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u8bbe\u7f6e\u662f\u5426\u6210\u529f\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\scene.py</code> <pre><code>def set_rotation(self, rotation: Quaternion) -&gt; bool:\n    \"\"\"\n    \u8bbe\u7f6e Entity \u7684\u65cb\u8f6c\uff0c\u4fdd\u6301\u539f\u6709\u4f4d\u7f6e\u4e0d\u53d8\u3002\n\n    Args:\n        rotation (Quaternion): \u65b0\u7684\u65cb\u8f6c\uff08\u56db\u5143\u6570\uff09\u3002\n\n    Returns:\n        bool: \u8bbe\u7f6e\u662f\u5426\u6210\u529f\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_scene/#tongsim.entity.ability.impl.scene.SceneAbility.get_forward_vector","title":"get_forward_vector","text":"<pre><code>get_forward_vector() -&gt; Vector3\n</code></pre> <p>\u83b7\u53d6 Entity \u7684\u671d\u524d\u65b9\u5411\u5411\u91cf\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>Vector3</code> <code>Vector3</code> <p>\u5355\u4f4d\u5411\u91cf\uff0c\u8868\u793a\u524d\u65b9\u65b9\u5411\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\scene.py</code> <pre><code>def get_forward_vector(self) -&gt; Vector3:\n    \"\"\"\n    \u83b7\u53d6 Entity \u7684\u671d\u524d\u65b9\u5411\u5411\u91cf\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n    Returns:\n        Vector3: \u5355\u4f4d\u5411\u91cf\uff0c\u8868\u793a\u524d\u65b9\u65b9\u5411\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_scene/#tongsim.entity.ability.impl.scene.SceneAbility.async_get_forward_vector","title":"async_get_forward_vector  <code>async</code>","text":"<pre><code>async_get_forward_vector() -&gt; Vector3\n</code></pre> <p>\u83b7\u53d6 Entity \u7684\u671d\u524d\u65b9\u5411\u5411\u91cf\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>Vector3</code> <code>Vector3</code> <p>\u5355\u4f4d\u5411\u91cf\uff0c\u8868\u793a\u524d\u65b9\u65b9\u5411\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\scene.py</code> <pre><code>async def async_get_forward_vector(self) -&gt; Vector3:\n    \"\"\"\n    \u83b7\u53d6 Entity \u7684\u671d\u524d\u65b9\u5411\u5411\u91cf\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    Returns:\n        Vector3: \u5355\u4f4d\u5411\u91cf\uff0c\u8868\u793a\u524d\u65b9\u65b9\u5411\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_scene/#tongsim.entity.ability.impl.scene.SceneAbility.get_right_vector","title":"get_right_vector","text":"<pre><code>get_right_vector() -&gt; Vector3\n</code></pre> <p>\u83b7\u53d6 Entity \u7684\u53f3\u65b9\u65b9\u5411\u5411\u91cf\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>Vector3</code> <code>Vector3</code> <p>\u5355\u4f4d\u5411\u91cf\uff0c\u8868\u793a\u53f3\u65b9\u65b9\u5411\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\scene.py</code> <pre><code>def get_right_vector(self) -&gt; Vector3:\n    \"\"\"\n    \u83b7\u53d6 Entity \u7684\u53f3\u65b9\u65b9\u5411\u5411\u91cf\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n    Returns:\n        Vector3: \u5355\u4f4d\u5411\u91cf\uff0c\u8868\u793a\u53f3\u65b9\u65b9\u5411\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_scene/#tongsim.entity.ability.impl.scene.SceneAbility.async_get_right_vector","title":"async_get_right_vector  <code>async</code>","text":"<pre><code>async_get_right_vector() -&gt; Vector3\n</code></pre> <p>\u83b7\u53d6 Entity \u7684\u53f3\u65b9\u65b9\u5411\u5411\u91cf\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>Vector3</code> <code>Vector3</code> <p>\u5355\u4f4d\u5411\u91cf\uff0c\u8868\u793a\u53f3\u65b9\u65b9\u5411\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\scene.py</code> <pre><code>async def async_get_right_vector(self) -&gt; Vector3:\n    \"\"\"\n    \u83b7\u53d6 Entity \u7684\u53f3\u65b9\u65b9\u5411\u5411\u91cf\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    Returns:\n        Vector3: \u5355\u4f4d\u5411\u91cf\uff0c\u8868\u793a\u53f3\u65b9\u65b9\u5411\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_scene/#tongsim.entity.ability.impl.scene.SceneAbility.get_object_direction","title":"get_object_direction","text":"<pre><code>get_object_direction() -&gt; Vector3\n</code></pre> <p>\u7528\u6765\u83b7\u53d6 \u955c\u5b50\u3001\u67dc\u5b50 \u7b49\u7269\u4f53\u7684\u9762\u671d\u65b9\u5411\u3002\u8d44\u4ea7\u914d\u7f6e \u53f3\u65b9\u65b9\u5411 \u4e3a\u9762\u671d\u6b63\u65b9\u5411\uff0c\u6b64\u63a5\u53e3\u5e95\u5c42\u8fd4\u56de RightVector</p> <p>Returns:</p> Name Type Description <code>Vector3</code> <code>Vector3</code> <p>\u5355\u4f4d\u5411\u91cf</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\scene.py</code> <pre><code>def get_object_direction(self) -&gt; Vector3:\n    \"\"\"\n    \u7528\u6765\u83b7\u53d6 \u955c\u5b50\u3001\u67dc\u5b50 \u7b49\u7269\u4f53\u7684\u9762\u671d\u65b9\u5411\u3002\u8d44\u4ea7\u914d\u7f6e \u53f3\u65b9\u65b9\u5411 \u4e3a\u9762\u671d\u6b63\u65b9\u5411\uff0c\u6b64\u63a5\u53e3\u5e95\u5c42\u8fd4\u56de RightVector\n\n    Returns:\n        Vector3: \u5355\u4f4d\u5411\u91cf\n    \"\"\"\n</code></pre>"},{"location":"api/ability_scene/#tongsim.entity.ability.impl.scene.SceneAbility.async_get_object_direction","title":"async_get_object_direction  <code>async</code>","text":"<pre><code>async_get_object_direction() -&gt; Vector3\n</code></pre> <p>\u7528\u6765\u83b7\u53d6 \u955c\u5b50\u3001\u67dc\u5b50 \u7b49\u7269\u4f53\u7684\u9762\u671d\u65b9\u5411\u3002\u8d44\u4ea7\u914d\u7f6e \u53f3\u65b9\u65b9\u5411 \u4e3a\u9762\u671d\u6b63\u65b9\u5411\uff0c\u6b64\u63a5\u53e3\u5e95\u5c42\u8fd4\u56de RightVector</p> <p>Returns:</p> Name Type Description <code>Vector3</code> <code>Vector3</code> <p>\u5355\u4f4d\u5411\u91cf</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\scene.py</code> <pre><code>async def async_get_object_direction(self) -&gt; Vector3:\n    \"\"\"\n    \u7528\u6765\u83b7\u53d6 \u955c\u5b50\u3001\u67dc\u5b50 \u7b49\u7269\u4f53\u7684\u9762\u671d\u65b9\u5411\u3002\u8d44\u4ea7\u914d\u7f6e \u53f3\u65b9\u65b9\u5411 \u4e3a\u9762\u671d\u6b63\u65b9\u5411\uff0c\u6b64\u63a5\u53e3\u5e95\u5c42\u8fd4\u56de RightVector\n\n    Returns:\n        Vector3: \u5355\u4f4d\u5411\u91cf\n    \"\"\"\n</code></pre>"},{"location":"api/ability_scene/#tongsim.entity.ability.impl.scene.SceneAbility.get_scale","title":"get_scale","text":"<pre><code>get_scale() -&gt; Vector3\n</code></pre> <p>\u83b7\u53d6 Entity \u7684\u5f53\u524d\u7f29\u653e\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>Vector3</code> <code>Vector3</code> <p>\u5f53\u524d\u7f29\u653e\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\scene.py</code> <pre><code>def get_scale(self) -&gt; Vector3:\n    \"\"\"\n    \u83b7\u53d6 Entity \u7684\u5f53\u524d\u7f29\u653e\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n    Returns:\n        Vector3: \u5f53\u524d\u7f29\u653e\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_scene/#tongsim.entity.ability.impl.scene.SceneAbility.async_get_scale","title":"async_get_scale  <code>async</code>","text":"<pre><code>async_get_scale() -&gt; Vector3\n</code></pre> <p>\u83b7\u53d6 Entity \u7684\u5f53\u524d\u7f29\u653e\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>Vector3</code> <code>Vector3</code> <p>\u5f53\u524d\u7f29\u653e\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\scene.py</code> <pre><code>async def async_get_scale(self) -&gt; Vector3:\n    \"\"\"\n    \u83b7\u53d6 Entity \u7684\u5f53\u524d\u7f29\u653e\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    Returns:\n        Vector3: \u5f53\u524d\u7f29\u653e\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_scene/#tongsim.entity.ability.impl.scene.SceneAbility.set_scale","title":"set_scale","text":"<pre><code>set_scale(new_scale: Vector3) -&gt; bool\n</code></pre> <p>\u8bbe\u7f6e Entity \u7684\u7f29\u653e\u3002</p> <p>Parameters:</p> Name Type Description Default <code>new_scale</code> <code>Vector3</code> <p>\u65b0\u7684\u7f29\u653e\u503c\u3002</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u8bbe\u7f6e\u662f\u5426\u6210\u529f\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\scene.py</code> <pre><code>def set_scale(self, new_scale: Vector3) -&gt; bool:\n    \"\"\"\n    \u8bbe\u7f6e Entity \u7684\u7f29\u653e\u3002\n\n    Args:\n        new_scale (Vector3): \u65b0\u7684\u7f29\u653e\u503c\u3002\n\n    Returns:\n        bool: \u8bbe\u7f6e\u662f\u5426\u6210\u529f\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_scene/#tongsim.entity.ability.impl.scene.SceneAbility.async_set_scale","title":"async_set_scale  <code>async</code>","text":"<pre><code>async_set_scale(new_scale: Vector3) -&gt; bool\n</code></pre> <p>\u8bbe\u7f6e Entity \u7684\u7f29\u653e\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Parameters:</p> Name Type Description Default <code>new_scale</code> <code>Vector3</code> <p>\u65b0\u7684\u7f29\u653e\u503c\u3002</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u8bbe\u7f6e\u662f\u5426\u6210\u529f\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\scene.py</code> <pre><code>async def async_set_scale(self, new_scale: Vector3) -&gt; bool:\n    \"\"\"\n    \u8bbe\u7f6e Entity \u7684\u7f29\u653e\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    Args:\n        new_scale (Vector3): \u65b0\u7684\u7f29\u653e\u503c\u3002\n\n    Returns:\n        bool: \u8bbe\u7f6e\u662f\u5426\u6210\u529f\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_scene/#tongsim.entity.ability.impl.scene.SceneAbility.get_transform","title":"get_transform","text":"<pre><code>get_transform() -&gt; Transform\n</code></pre> <p>\u83b7\u53d6 Entity \u7684\u5b8c\u6574\u53d8\u6362\u4fe1\u606f\uff08\u4f4d\u7f6e\u3001\u65cb\u8f6c\u3001\u7f29\u653e\uff09\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>Transform</code> <code>Transform</code> <p>\u5b8c\u6574\u7684\u53d8\u6362\u4fe1\u606f\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\scene.py</code> <pre><code>def get_transform(self) -&gt; Transform:\n    \"\"\"\n    \u83b7\u53d6 Entity \u7684\u5b8c\u6574\u53d8\u6362\u4fe1\u606f\uff08\u4f4d\u7f6e\u3001\u65cb\u8f6c\u3001\u7f29\u653e\uff09\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n    Returns:\n        Transform: \u5b8c\u6574\u7684\u53d8\u6362\u4fe1\u606f\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/ability_scene/#tongsim.entity.ability.impl.scene.SceneAbility.async_get_transform","title":"async_get_transform  <code>async</code>","text":"<pre><code>async_get_transform() -&gt; Transform\n</code></pre> <p>\u83b7\u53d6 Entity \u7684\u5b8c\u6574\u53d8\u6362\u4fe1\u606f\uff08\u4f4d\u7f6e\u3001\u65cb\u8f6c\u3001\u7f29\u653e\uff09\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>Transform</code> <code>Transform</code> <p>\u5b8c\u6574\u7684\u53d8\u6362\u4fe1\u606f\u3002</p> Source code in <code>src\\tongsim\\entity\\ability\\impl\\scene.py</code> <pre><code>async def async_get_transform(self) -&gt; Transform:\n    \"\"\"\n    \u83b7\u53d6 Entity \u7684\u5b8c\u6574\u53d8\u6362\u4fe1\u606f\uff08\u4f4d\u7f6e\u3001\u65cb\u8f6c\u3001\u7f29\u653e\uff09\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    Returns:\n        Transform: \u5b8c\u6574\u7684\u53d8\u6362\u4fe1\u606f\u3002\n    \"\"\"\n</code></pre>"},{"location":"api/action_base/","title":"\ud83e\uddbe Action \u57fa\u7c7b\u65b9\u6cd5","text":""},{"location":"api/action_base/#tongsim.entity.action.base","title":"tongsim.entity.action.base","text":""},{"location":"api/action_base/#tongsim.entity.action.base.ActionBase","title":"ActionBase  <code>dataclass</code>","text":"<p>               Bases: <code>ABC</code></p> <p>\u52a8\u4f5c\u62bd\u8c61\u57fa\u7c7b\u3002</p> <p>\u6bcf\u4e2a Action \u5c06\u7531\u82e5\u5e72\u4e2a Animation \u7ec4\u6210\uff0c<code>submit()</code> \u53ea\u8d1f\u8d23\u63d0\u4ea4\uff0c\u4e0d\u963b\u585e\u7b49\u5f85\u7ed3\u679c\u3002 \u7ed3\u679c\u6536\u96c6\u4e0e\u5f02\u5e38\u5904\u7406\u5c06\u5728 <code>collect_results()</code> \u4e2d\u7edf\u4e00\u5b8c\u6210\u3002</p> <p>\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0 <code>__call__()</code> \u65b9\u6cd5\uff0c\u7528\u4e8e\u63cf\u8ff0 Action \u7684 Animation \u7ec4\u6210\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\base.py</code> <pre><code>@dataclass\nclass ActionBase(ABC):\n    \"\"\"\n    \u52a8\u4f5c\u62bd\u8c61\u57fa\u7c7b\u3002\n\n    \u6bcf\u4e2a Action \u5c06\u7531\u82e5\u5e72\u4e2a Animation \u7ec4\u6210\uff0c`submit()` \u53ea\u8d1f\u8d23\u63d0\u4ea4\uff0c\u4e0d\u963b\u585e\u7b49\u5f85\u7ed3\u679c\u3002\n    \u7ed3\u679c\u6536\u96c6\u4e0e\u5f02\u5e38\u5904\u7406\u5c06\u5728 `collect_results()` \u4e2d\u7edf\u4e00\u5b8c\u6210\u3002\n\n    \u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0 `__call__()` \u65b9\u6cd5\uff0c\u7528\u4e8e\u63cf\u8ff0 Action \u7684 Animation \u7ec4\u6210\u3002\n    \"\"\"\n\n    _anim_ids: list[int] = field(default_factory=list, init=False)\n    _streamer: AnimationStreamer | None = field(default=None, init=False)\n    _context: WorldContext | None = field(default=None, init=False)\n    _action_ability: AgentActionAbility | None = field(default=None, init=False)\n    _track_result = False\n\n    @property\n    def anim_ids(self):\n        return self._anim_ids\n\n    @property\n    def streamer(self):\n        return self._streamer\n\n    @abstractmethod\n    async def execute(self) -&gt; None:\n        \"\"\"\n        \u5f02\u6b65\u6267\u884c\u52a8\u4f5c\uff0c\u5c06 Animation \u63d0\u4ea4\u5230 streamer \u4e2d\uff0c\u4e0d\u963b\u585e\u7b49\u5f85\u7ed3\u679c\u3002\n        \"\"\"\n        raise NotImplementedError(\"Subclasses must implement the `execute` method.\")\n\n    @abstractmethod\n    def validate(self) -&gt; None:\n        \"\"\"\n        \u9a8c\u8bc1 Action \u7684\u8f93\u5165\u53c2\u6570\u3002\n\n        \u5b50\u7c7b\u53ef\u8986\u76d6\u6b64\u65b9\u6cd5\u4ee5\u5b9e\u73b0\u5177\u4f53\u7684\u53c2\u6570\u6821\u9a8c\u903b\u8f91\u3002\n        \"\"\"\n        raise NotImplementedError(\"Subclasses must implement the `validate` method.\")\n\n    def initialize(\n        self,\n        action_ability: AgentActionAbility,\n        streamer: AnimationStreamer,\n        context: WorldContext,\n        track_result: bool,\n    ) -&gt; None:\n        \"\"\"\n        \u8bbe\u7f6e AnimationStreamer\uff0c\u7528\u4e8e\u63d0\u4ea4\u52a8\u753b\u547d\u4ee4\u3002\n        \"\"\"\n        self._streamer = streamer\n        self._context = context\n        self._track_result = track_result\n        self._action_ability = action_ability\n\n    async def submit(self, cmd_spec: CommandSpec) -&gt; None:\n        \"\"\"\n        \u63d0\u4ea4\u5355\u4e2a Animation \u547d\u4ee4\uff0c\u5e76\u8bb0\u5f55\u5176 command_id\u3002\n        \"\"\"\n        if not self._streamer:\n            raise RuntimeError(\"Streamer not set for action.\")\n\n        try:\n            command_id = await self._streamer.submit(cmd_spec, self._track_result)\n            self._anim_ids.append(command_id)\n            _logger.debug(\n                f\"Action {self.__class__.__name__}: Submitted animation command {command_id}\"\n            )\n\n        except Exception as e:\n            tag = getattr(cmd_spec, \"tag\", \"&lt;unknown&gt;\")\n            _logger.error(f\"Error in submitting command {tag}, error_msg: {e}\")\n\n    async def wait_any_started(self) -&gt; AnimResultInfo:\n        \"\"\"\n        \u7b49\u5f85\u672c Action \u4e2d\u4efb\u610f\u4e00\u4e2a Animation \u7684 BEGIN \u9636\u6bb5\u5230\u8fbe\u3002\n\n        Returns:\n            AnimResultInfo: \u6700\u5148\u5f00\u59cb\u7684\u52a8\u753b\u4fe1\u606f\u3002\n        \"\"\"\n        if not self._streamer:\n            raise RuntimeError(\"Streamer not set for action.\")\n\n        return await self._streamer.wait_any_begin(self._anim_ids)\n\n    async def collect_results(\n        self, cancel_on_error: bool = False\n    ) -&gt; list[AnimResultInfo]:\n        \"\"\"\n        \u6536\u96c6\u5f53\u524d Action \u4e2d\u6240\u6709 Animation \u7684\u7ed3\u679c\u3002\n\n        Args:\n            cancel_on_error (bool): \u82e5\u4e3a True\uff0c\u5f53\u4efb\u4e00 Animation \u53d1\u751f\u9519\u8bef\u65f6\u7acb\u5373\u53d6\u6d88\u5269\u4f59\u52a8\u753b\u3002\n\n        Returns:\n            List[AnimResultInfo]: \u6bcf\u4e2a Animation \u7684\u6267\u884c\u7ed3\u679c\u3002\n        \"\"\"\n        if not self._streamer:\n            raise RuntimeError(\"Streamer not set for action.\")\n\n        # TODO:  cancel_on_error\n\n        results: list[AnimResultInfo] = await self._streamer.wait_all_end(\n            self._anim_ids\n        )\n        self._anim_ids.clear()\n        return results\n\n    async def _cancel_pending(self) -&gt; None:\n        \"\"\"\n        \u53d6\u6d88\u5f53\u524d Action \u5185\u6240\u6709\u672a\u5b8c\u6210\u7684 Animation\u3002\n        \"\"\"\n        if not self._streamer:\n            raise RuntimeError(\"Streamer not set for action.\")\n        # TODO:\n        raise NotImplementedError(\"Cancellation logic is not implemented.\")\n\n    async def run(self) -&gt; None:\n        \"\"\"\n        \u7edf\u4e00\u6267\u884c\u5165\u53e3\u3002\n\n        - \u9996\u5148\u8fdb\u884c\u53c2\u6570\u9a8c\u8bc1\u3002\n        - \u7136\u540e\u6267\u884c Animation \u63d0\u4ea4\u3002\n        \"\"\"\n        try:\n            self.validate()\n            await self.execute()\n        except Exception as e:\n            _logger.error(f\"Action {self.__class__.__name__} execution failed: {e}\")\n            raise\n</code></pre>"},{"location":"api/action_base/#tongsim.entity.action.base.ActionBase.execute","title":"execute  <code>abstractmethod</code> <code>async</code>","text":"<pre><code>execute() -&gt; None\n</code></pre> <p>\u5f02\u6b65\u6267\u884c\u52a8\u4f5c\uff0c\u5c06 Animation \u63d0\u4ea4\u5230 streamer \u4e2d\uff0c\u4e0d\u963b\u585e\u7b49\u5f85\u7ed3\u679c\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\base.py</code> <pre><code>@abstractmethod\nasync def execute(self) -&gt; None:\n    \"\"\"\n    \u5f02\u6b65\u6267\u884c\u52a8\u4f5c\uff0c\u5c06 Animation \u63d0\u4ea4\u5230 streamer \u4e2d\uff0c\u4e0d\u963b\u585e\u7b49\u5f85\u7ed3\u679c\u3002\n    \"\"\"\n    raise NotImplementedError(\"Subclasses must implement the `execute` method.\")\n</code></pre>"},{"location":"api/action_base/#tongsim.entity.action.base.ActionBase.validate","title":"validate  <code>abstractmethod</code>","text":"<pre><code>validate() -&gt; None\n</code></pre> <p>\u9a8c\u8bc1 Action \u7684\u8f93\u5165\u53c2\u6570\u3002</p> <p>\u5b50\u7c7b\u53ef\u8986\u76d6\u6b64\u65b9\u6cd5\u4ee5\u5b9e\u73b0\u5177\u4f53\u7684\u53c2\u6570\u6821\u9a8c\u903b\u8f91\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\base.py</code> <pre><code>@abstractmethod\ndef validate(self) -&gt; None:\n    \"\"\"\n    \u9a8c\u8bc1 Action \u7684\u8f93\u5165\u53c2\u6570\u3002\n\n    \u5b50\u7c7b\u53ef\u8986\u76d6\u6b64\u65b9\u6cd5\u4ee5\u5b9e\u73b0\u5177\u4f53\u7684\u53c2\u6570\u6821\u9a8c\u903b\u8f91\u3002\n    \"\"\"\n    raise NotImplementedError(\"Subclasses must implement the `validate` method.\")\n</code></pre>"},{"location":"api/action_base/#tongsim.entity.action.base.ActionBase.initialize","title":"initialize","text":"<pre><code>initialize(\n    action_ability: AgentActionAbility,\n    streamer: AnimationStreamer,\n    context: WorldContext,\n    track_result: bool,\n) -&gt; None\n</code></pre> <p>\u8bbe\u7f6e AnimationStreamer\uff0c\u7528\u4e8e\u63d0\u4ea4\u52a8\u753b\u547d\u4ee4\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\base.py</code> <pre><code>def initialize(\n    self,\n    action_ability: AgentActionAbility,\n    streamer: AnimationStreamer,\n    context: WorldContext,\n    track_result: bool,\n) -&gt; None:\n    \"\"\"\n    \u8bbe\u7f6e AnimationStreamer\uff0c\u7528\u4e8e\u63d0\u4ea4\u52a8\u753b\u547d\u4ee4\u3002\n    \"\"\"\n    self._streamer = streamer\n    self._context = context\n    self._track_result = track_result\n    self._action_ability = action_ability\n</code></pre>"},{"location":"api/action_base/#tongsim.entity.action.base.ActionBase.submit","title":"submit  <code>async</code>","text":"<pre><code>submit(cmd_spec: CommandSpec) -&gt; None\n</code></pre> <p>\u63d0\u4ea4\u5355\u4e2a Animation \u547d\u4ee4\uff0c\u5e76\u8bb0\u5f55\u5176 command_id\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\base.py</code> <pre><code>async def submit(self, cmd_spec: CommandSpec) -&gt; None:\n    \"\"\"\n    \u63d0\u4ea4\u5355\u4e2a Animation \u547d\u4ee4\uff0c\u5e76\u8bb0\u5f55\u5176 command_id\u3002\n    \"\"\"\n    if not self._streamer:\n        raise RuntimeError(\"Streamer not set for action.\")\n\n    try:\n        command_id = await self._streamer.submit(cmd_spec, self._track_result)\n        self._anim_ids.append(command_id)\n        _logger.debug(\n            f\"Action {self.__class__.__name__}: Submitted animation command {command_id}\"\n        )\n\n    except Exception as e:\n        tag = getattr(cmd_spec, \"tag\", \"&lt;unknown&gt;\")\n        _logger.error(f\"Error in submitting command {tag}, error_msg: {e}\")\n</code></pre>"},{"location":"api/action_base/#tongsim.entity.action.base.ActionBase.wait_any_started","title":"wait_any_started  <code>async</code>","text":"<pre><code>wait_any_started() -&gt; AnimResultInfo\n</code></pre> <p>\u7b49\u5f85\u672c Action \u4e2d\u4efb\u610f\u4e00\u4e2a Animation \u7684 BEGIN \u9636\u6bb5\u5230\u8fbe\u3002</p> <p>Returns:</p> Name Type Description <code>AnimResultInfo</code> <code>AnimResultInfo</code> <p>\u6700\u5148\u5f00\u59cb\u7684\u52a8\u753b\u4fe1\u606f\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\base.py</code> <pre><code>async def wait_any_started(self) -&gt; AnimResultInfo:\n    \"\"\"\n    \u7b49\u5f85\u672c Action \u4e2d\u4efb\u610f\u4e00\u4e2a Animation \u7684 BEGIN \u9636\u6bb5\u5230\u8fbe\u3002\n\n    Returns:\n        AnimResultInfo: \u6700\u5148\u5f00\u59cb\u7684\u52a8\u753b\u4fe1\u606f\u3002\n    \"\"\"\n    if not self._streamer:\n        raise RuntimeError(\"Streamer not set for action.\")\n\n    return await self._streamer.wait_any_begin(self._anim_ids)\n</code></pre>"},{"location":"api/action_base/#tongsim.entity.action.base.ActionBase.collect_results","title":"collect_results  <code>async</code>","text":"<pre><code>collect_results(\n    cancel_on_error: bool = False,\n) -&gt; list[AnimResultInfo]\n</code></pre> <p>\u6536\u96c6\u5f53\u524d Action \u4e2d\u6240\u6709 Animation \u7684\u7ed3\u679c\u3002</p> <p>Parameters:</p> Name Type Description Default <code>cancel_on_error</code> <code>bool</code> <p>\u82e5\u4e3a True\uff0c\u5f53\u4efb\u4e00 Animation \u53d1\u751f\u9519\u8bef\u65f6\u7acb\u5373\u53d6\u6d88\u5269\u4f59\u52a8\u753b\u3002</p> <code>False</code> <p>Returns:</p> Type Description <code>list[AnimResultInfo]</code> <p>List[AnimResultInfo]: \u6bcf\u4e2a Animation \u7684\u6267\u884c\u7ed3\u679c\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\base.py</code> <pre><code>async def collect_results(\n    self, cancel_on_error: bool = False\n) -&gt; list[AnimResultInfo]:\n    \"\"\"\n    \u6536\u96c6\u5f53\u524d Action \u4e2d\u6240\u6709 Animation \u7684\u7ed3\u679c\u3002\n\n    Args:\n        cancel_on_error (bool): \u82e5\u4e3a True\uff0c\u5f53\u4efb\u4e00 Animation \u53d1\u751f\u9519\u8bef\u65f6\u7acb\u5373\u53d6\u6d88\u5269\u4f59\u52a8\u753b\u3002\n\n    Returns:\n        List[AnimResultInfo]: \u6bcf\u4e2a Animation \u7684\u6267\u884c\u7ed3\u679c\u3002\n    \"\"\"\n    if not self._streamer:\n        raise RuntimeError(\"Streamer not set for action.\")\n\n    # TODO:  cancel_on_error\n\n    results: list[AnimResultInfo] = await self._streamer.wait_all_end(\n        self._anim_ids\n    )\n    self._anim_ids.clear()\n    return results\n</code></pre>"},{"location":"api/action_base/#tongsim.entity.action.base.ActionBase.run","title":"run  <code>async</code>","text":"<pre><code>run() -&gt; None\n</code></pre> <p>\u7edf\u4e00\u6267\u884c\u5165\u53e3\u3002</p> <ul> <li>\u9996\u5148\u8fdb\u884c\u53c2\u6570\u9a8c\u8bc1\u3002</li> <li>\u7136\u540e\u6267\u884c Animation \u63d0\u4ea4\u3002</li> </ul> Source code in <code>src\\tongsim\\entity\\action\\base.py</code> <pre><code>async def run(self) -&gt; None:\n    \"\"\"\n    \u7edf\u4e00\u6267\u884c\u5165\u53e3\u3002\n\n    - \u9996\u5148\u8fdb\u884c\u53c2\u6570\u9a8c\u8bc1\u3002\n    - \u7136\u540e\u6267\u884c Animation \u63d0\u4ea4\u3002\n    \"\"\"\n    try:\n        self.validate()\n        await self.execute()\n    except Exception as e:\n        _logger.error(f\"Action {self.__class__.__name__} execution failed: {e}\")\n        raise\n</code></pre>"},{"location":"api/action_impl/","title":"\ud83e\uddbe \u89d2\u8272\u52a8\u753b\u96c6\u5408","text":""},{"location":"api/action_impl/#tongsim.entity.action","title":"tongsim.entity.action","text":""},{"location":"api/action_impl/#tongsim.entity.action.LookAtLocation","title":"LookAtLocation  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u6ce8\u89c6\u6307\u5b9a\u4f4d\u7f6e\u6216\u53d6\u6d88\u6ce8\u91ca\u6307\u5b9a\u4f4d\u7f6e</p> <p>Attributes:</p> Name Type Description <code>loc</code> <code>Vector3</code> <p>\u6ce8\u89c6\u7684\u76ee\u6807\u4f4d\u7f6e\u3002</p> <code>is_cancel</code> <code>float</code> <p>\u6ce8\u89c6\u6216\u53d6\u6d88\u6ce8\u89c6\uff0c\u9ed8\u8ba4\u4e3aFalse\u3002</p> <code>execute_immediately</code> <code>bool</code> <p>\u662f\u5426\u7acb\u5373\u6267\u884c\uff0c\u9ed8\u8ba4\u4e3aFalse</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\aim.py</code> <pre><code>@dataclass(slots=True)\nclass LookAtLocation(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u6ce8\u89c6\u6307\u5b9a\u4f4d\u7f6e\u6216\u53d6\u6d88\u6ce8\u91ca\u6307\u5b9a\u4f4d\u7f6e\n\n    Attributes:\n        loc (Vector3): \u6ce8\u89c6\u7684\u76ee\u6807\u4f4d\u7f6e\u3002\n        is_cancel (float): \u6ce8\u89c6\u6216\u53d6\u6d88\u6ce8\u89c6\uff0c\u9ed8\u8ba4\u4e3aFalse\u3002\n        execute_immediately (bool): \u662f\u5426\u7acb\u5373\u6267\u884c\uff0c\u9ed8\u8ba4\u4e3aFalse\n    \"\"\"\n\n    loc: Vector3\n    is_cancel: bool = False\n    execute_immediately: bool = False\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.loc, Vector3):\n            raise TypeError(f\"loc must be a Vector3, got {type(self.loc)}\")\n\n        if not isinstance(self.is_cancel, bool):\n            raise ValueError(f\"is_cancel must be a bool, got {type(self.is_cancel)}\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(\n            AnimCmd.look_at_location(\n                loc=self.loc,\n                is_cancel=self.is_cancel,\n                execute_immediately=self.execute_immediately,\n            )\n        )\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.LookAtLocationWithDuration","title":"LookAtLocationWithDuration  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u6ce8\u89c6\u6307\u5b9a\u4f4d\u7f6e\uff0c\u5e76\u4fdd\u6301\u6307\u5b9a\u65f6\u957f\u540e\u53d6\u6d88\u6ce8\u89c6\u3002</p> <p>Attributes:</p> Name Type Description <code>loc</code> <code>Vector3</code> <p>\u6ce8\u89c6\u7684\u76ee\u6807\u4f4d\u7f6e\u3002</p> <code>time_duration</code> <code>float</code> <p>\u6ce8\u89c6\u4fdd\u6301\u7684\u65f6\u957f\uff08\u79d2\uff09\u3002\u82e5\u4e3a 0 \u5219\u7acb\u5373\u53d6\u6d88\u6ce8\u89c6\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\aim.py</code> <pre><code>@dataclass(slots=True)\nclass LookAtLocationWithDuration(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u6ce8\u89c6\u6307\u5b9a\u4f4d\u7f6e\uff0c\u5e76\u4fdd\u6301\u6307\u5b9a\u65f6\u957f\u540e\u53d6\u6d88\u6ce8\u89c6\u3002\n\n    Attributes:\n        loc (Vector3): \u6ce8\u89c6\u7684\u76ee\u6807\u4f4d\u7f6e\u3002\n        time_duration (float): \u6ce8\u89c6\u4fdd\u6301\u7684\u65f6\u957f\uff08\u79d2\uff09\u3002\u82e5\u4e3a 0 \u5219\u7acb\u5373\u53d6\u6d88\u6ce8\u89c6\u3002\n    \"\"\"\n\n    loc: Vector3\n    time_duration: float\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.loc, Vector3):\n            raise TypeError(f\"loc must be a Vector3, got {type(self.loc)}\")\n\n        if not isinstance(self.time_duration, int | float) or self.time_duration &lt; 0:\n            raise ValueError(\"time_duration must be a non-negative number.\")\n\n    async def execute(self) -&gt; None:\n        # \u5f00\u59cb\u6ce8\u89c6\n        await self.submit(\n            AnimCmd.look_at_location(\n                loc=self.loc,\n                is_cancel=False,\n            )\n        )\n\n        # \u4fdd\u6301\u6307\u5b9a\u65f6\u957f\n        if self.time_duration &gt; 0:\n            await self.submit(AnimCmd.wait_for(time_duration=self.time_duration))\n\n        # \u53d6\u6d88\u6ce8\u89c6\n        await self.submit(\n            AnimCmd.look_at_location(\n                loc=self.loc,\n                is_cancel=True,\n            )\n        )\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.LookAtObject","title":"LookAtObject  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u6ce8\u89c6\u6307\u5b9a\u5b9e\u4f53\u6216\u53d6\u6d88\u6ce8\u89c6\u3002</p> <p>Attributes:</p> Name Type Description <code>object_id</code> <code>str</code> <p>\u76ee\u6807\u5b9e\u4f53\u7684 ID\u3002</p> <code>is_cancel</code> <code>bool</code> <p>\u662f\u5426\u53d6\u6d88\u6ce8\u89c6\u3002\u9ed8\u8ba4\u4e3a False \u8868\u793a\u6267\u884c\u6ce8\u89c6\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\aim.py</code> <pre><code>@dataclass(slots=True)\nclass LookAtObject(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u6ce8\u89c6\u6307\u5b9a\u5b9e\u4f53\u6216\u53d6\u6d88\u6ce8\u89c6\u3002\n\n    Attributes:\n        object_id (str): \u76ee\u6807\u5b9e\u4f53\u7684 ID\u3002\n        is_cancel (bool): \u662f\u5426\u53d6\u6d88\u6ce8\u89c6\u3002\u9ed8\u8ba4\u4e3a False \u8868\u793a\u6267\u884c\u6ce8\u89c6\u3002\n    \"\"\"\n\n    object_id: str\n    is_cancel: bool = False\n    execute_immediately: bool = False\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.object_id, str) or not self.object_id:\n            raise ValueError(\"object_id must be a non-empty string.\")\n        if not isinstance(self.is_cancel, bool):\n            raise ValueError(\"is_cancel must be a bool.\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(\n            AnimCmd.look_at_object(\n                object_id=self.object_id,\n                is_cancel=self.is_cancel,\n                execute_immediately=self.execute_immediately,\n            )\n        )\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.LookAtObjectWithDuration","title":"LookAtObjectWithDuration  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u6ce8\u89c6\u6307\u5b9a\u5b9e\u4f53\u5e76\u4fdd\u6301\u6307\u5b9a\u65f6\u957f\u540e\u53d6\u6d88\u3002</p> <p>Attributes:</p> Name Type Description <code>object_id</code> <code>str</code> <p>\u76ee\u6807\u5b9e\u4f53\u7684 ID\u3002</p> <code>time_duration</code> <code>float</code> <p>\u6ce8\u89c6\u4fdd\u6301\u7684\u65f6\u957f\uff08\u79d2\uff09\u3002\u82e5\u4e3a 0 \u5219\u7acb\u5373\u53d6\u6d88\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\aim.py</code> <pre><code>@dataclass(slots=True)\nclass LookAtObjectWithDuration(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u6ce8\u89c6\u6307\u5b9a\u5b9e\u4f53\u5e76\u4fdd\u6301\u6307\u5b9a\u65f6\u957f\u540e\u53d6\u6d88\u3002\n\n    Attributes:\n        object_id (str): \u76ee\u6807\u5b9e\u4f53\u7684 ID\u3002\n        time_duration (float): \u6ce8\u89c6\u4fdd\u6301\u7684\u65f6\u957f\uff08\u79d2\uff09\u3002\u82e5\u4e3a 0 \u5219\u7acb\u5373\u53d6\u6d88\u3002\n    \"\"\"\n\n    object_id: str\n    time_duration: float\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.object_id, str) or not self.object_id:\n            raise ValueError(\"object_id must be a non-empty string.\")\n        if not isinstance(self.time_duration, int | float) or self.time_duration &lt; 0:\n            raise ValueError(\"time_duration must be a non-negative number.\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(\n            AnimCmd.look_at_object(\n                object_id=self.object_id,\n                is_cancel=False,\n            )\n        )\n        if self.time_duration &gt; 0:\n            await self.submit(AnimCmd.wait_for(time_duration=self.time_duration))\n        await self.submit(\n            AnimCmd.look_at_object(\n                object_id=self.object_id,\n                is_cancel=True,\n            )\n        )\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.PointAtLocation","title":"PointAtLocation  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u6307\u5411\u6307\u5b9a\u4f4d\u7f6e\u6216\u53d6\u6d88\u6307\u5411\u6307\u5b9a\u4f4d\u7f6e\u3002</p> <p>Attributes:</p> Name Type Description <code>loc</code> <code>Vector3</code> <p>\u6307\u5411\u7684\u76ee\u6807\u4f4d\u7f6e\u3002</p> <code>is_cancel</code> <code>float</code> <p>\u6307\u5411\u6307\u5b9a\u4f4d\u7f6e\u6216\u53d6\u6d88\u6307\u5411\u6307\u5b9a\u4f4d\u7f6e\uff0cTrue\u8868\u793a\u53d6\u6d88\uff0cFalse\u8868\u793a\u6267\u884c\u3002\u9ed8\u8ba4\u4e3aFalse\u3002</p> <code>which_hand</code> <code>AnimCmdHandType</code> <p>\u4f7f\u7528\u7684\u624b\u90e8\uff0c<code>AnimCmdHandType.LEFT</code>\u3001<code>AnimCmdHandType.RIGHT</code>\u3001<code>AnimCmdHandType.BOTH</code>\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\aim.py</code> <pre><code>@dataclass(slots=True)\nclass PointAtLocation(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u6307\u5411\u6307\u5b9a\u4f4d\u7f6e\u6216\u53d6\u6d88\u6307\u5411\u6307\u5b9a\u4f4d\u7f6e\u3002\n\n    Attributes:\n        loc (Vector3): \u6307\u5411\u7684\u76ee\u6807\u4f4d\u7f6e\u3002\n        is_cancel (float): \u6307\u5411\u6307\u5b9a\u4f4d\u7f6e\u6216\u53d6\u6d88\u6307\u5411\u6307\u5b9a\u4f4d\u7f6e\uff0cTrue\u8868\u793a\u53d6\u6d88\uff0cFalse\u8868\u793a\u6267\u884c\u3002\u9ed8\u8ba4\u4e3aFalse\u3002\n        which_hand (AnimCmdHandType): \u4f7f\u7528\u7684\u624b\u90e8\uff0c`AnimCmdHandType.LEFT`\u3001`AnimCmdHandType.RIGHT`\u3001`AnimCmdHandType.BOTH`\u3002\n    \"\"\"\n\n    loc: Vector3\n    is_cancel: bool = False\n    which_hand: AnimCmdHandType = AnimCmdHandType.RIGHT\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.loc, Vector3):\n            raise TypeError(f\"loc must be a Vector3, got {type(self.loc)}\")\n\n        if not isinstance(self.is_cancel, bool):\n            raise ValueError(f\"is_cancel must be a bool, got {type(self.is_cancel)}\")\n\n        if not isinstance(self.which_hand, AnimCmdHandType):\n            raise ValueError(f\"Invalid hand type: {self.which_hand}\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(\n            AnimCmd.point_at_location(\n                loc=self.loc,\n                is_cancel=self.is_cancel,\n                is_left_hand=self.which_hand == AnimCmdHandType.LEFT,\n            )\n        )\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.PointAtLocationWithDuration","title":"PointAtLocationWithDuration  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u6307\u5411\u6307\u5b9a\u4f4d\u7f6e\uff0c\u5e76\u4fdd\u6301\u6307\u5b9a\u65f6\u957f\u540e\u53d6\u6d88\u3002</p> <p>Attributes:</p> Name Type Description <code>loc</code> <code>Vector3</code> <p>\u6307\u5411\u7684\u76ee\u6807\u4f4d\u7f6e\u3002</p> <code>time_duration</code> <code>float</code> <p>\u6307\u5411\u4fdd\u6301\u7684\u65f6\u957f\uff08\u79d2\uff09\u3002\u82e5\u4e3a 0 \u5219\u7acb\u5373\u53d6\u6d88\u6307\u5411\u3002</p> <code>which_hand</code> <code>AnimCmdHandType</code> <p>\u4f7f\u7528\u7684\u624b\u90e8\uff0c<code>AnimCmdHandType.LEFT</code>\u3001<code>AnimCmdHandType.RIGHT</code>\u3001<code>AnimCmdHandType.BOTH</code>\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\aim.py</code> <pre><code>@dataclass(slots=True)\nclass PointAtLocationWithDuration(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u6307\u5411\u6307\u5b9a\u4f4d\u7f6e\uff0c\u5e76\u4fdd\u6301\u6307\u5b9a\u65f6\u957f\u540e\u53d6\u6d88\u3002\n\n    Attributes:\n        loc (Vector3): \u6307\u5411\u7684\u76ee\u6807\u4f4d\u7f6e\u3002\n        time_duration (float): \u6307\u5411\u4fdd\u6301\u7684\u65f6\u957f\uff08\u79d2\uff09\u3002\u82e5\u4e3a 0 \u5219\u7acb\u5373\u53d6\u6d88\u6307\u5411\u3002\n        which_hand (AnimCmdHandType): \u4f7f\u7528\u7684\u624b\u90e8\uff0c`AnimCmdHandType.LEFT`\u3001`AnimCmdHandType.RIGHT`\u3001`AnimCmdHandType.BOTH`\u3002\n    \"\"\"\n\n    loc: Vector3\n    time_duration: float\n    which_hand: AnimCmdHandType = AnimCmdHandType.RIGHT\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.loc, Vector3):\n            raise TypeError(f\"loc must be a Vector3, got {type(self.loc)}\")\n\n        if not isinstance(self.time_duration, int | float) or self.time_duration &lt; 0:\n            raise ValueError(\"time_duration must be a non-negative number.\")\n\n        if not isinstance(self.which_hand, AnimCmdHandType):\n            raise ValueError(f\"Invalid hand type: {self.which_hand}\")\n\n    async def execute(self) -&gt; None:\n        # \u5f00\u59cb\u6307\u5411\n        await self.submit(\n            AnimCmd.point_at_location(\n                loc=self.loc,\n                is_cancel=False,\n                is_left_hand=self.which_hand == AnimCmdHandType.LEFT,\n            )\n        )\n\n        # \u4fdd\u6301\u6307\u5b9a\u65f6\u957f\n        if self.time_duration &gt; 0:\n            await self.submit(AnimCmd.wait_for(time_duration=self.time_duration))\n\n        # \u53d6\u6d88\u6307\u5411\n        await self.submit(\n            AnimCmd.point_at_location(\n                loc=self.loc,\n                is_cancel=True,\n                is_left_hand=self.which_hand == AnimCmdHandType.LEFT,\n            )\n        )\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.PointAtObject","title":"PointAtObject  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u6307\u5411\u6307\u5b9a\u5b9e\u4f53\u6216\u53d6\u6d88\u6307\u5411\u3002</p> <p>Attributes:</p> Name Type Description <code>object_id</code> <code>str</code> <p>\u76ee\u6807\u5b9e\u4f53\u7684 ID\u3002</p> <code>is_cancel</code> <code>bool</code> <p>\u662f\u5426\u53d6\u6d88\u6307\u5411\u3002\u9ed8\u8ba4\u4e3a False \u8868\u793a\u6267\u884c\u6307\u5411\u3002</p> <code>which_hand</code> <code>AnimCmdHandType</code> <p>\u4f7f\u7528\u7684\u624b\u90e8\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\aim.py</code> <pre><code>@dataclass(slots=True)\nclass PointAtObject(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u6307\u5411\u6307\u5b9a\u5b9e\u4f53\u6216\u53d6\u6d88\u6307\u5411\u3002\n\n    Attributes:\n        object_id (str): \u76ee\u6807\u5b9e\u4f53\u7684 ID\u3002\n        is_cancel (bool): \u662f\u5426\u53d6\u6d88\u6307\u5411\u3002\u9ed8\u8ba4\u4e3a False \u8868\u793a\u6267\u884c\u6307\u5411\u3002\n        which_hand (AnimCmdHandType): \u4f7f\u7528\u7684\u624b\u90e8\u3002\n    \"\"\"\n\n    object_id: str\n    is_cancel: bool = False\n    which_hand: AnimCmdHandType = AnimCmdHandType.RIGHT\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.object_id, str) or not self.object_id:\n            raise ValueError(\"object_id must be a non-empty string.\")\n        if not isinstance(self.is_cancel, bool):\n            raise ValueError(\"is_cancel must be a bool.\")\n        if not isinstance(self.which_hand, AnimCmdHandType):\n            raise ValueError(f\"Invalid hand type: {self.which_hand}\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(\n            AnimCmd.point_at_object(\n                object_id=self.object_id,\n                is_cancel=self.is_cancel,\n                is_left_hand=self.which_hand == AnimCmdHandType.LEFT,\n            )\n        )\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.PointAtObjectWithDuration","title":"PointAtObjectWithDuration  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u6307\u5411\u6307\u5b9a\u5b9e\u4f53\u5e76\u4fdd\u6301\u6307\u5b9a\u65f6\u957f\u540e\u53d6\u6d88\u3002</p> <p>Attributes:</p> Name Type Description <code>object_id</code> <code>str</code> <p>\u76ee\u6807\u5b9e\u4f53\u7684 ID\u3002</p> <code>time_duration</code> <code>float</code> <p>\u6307\u5411\u4fdd\u6301\u7684\u65f6\u957f\uff08\u79d2\uff09\u3002\u82e5\u4e3a 0 \u5219\u7acb\u5373\u53d6\u6d88\u3002</p> <code>which_hand</code> <code>AnimCmdHandType</code> <p>\u4f7f\u7528\u7684\u624b\u90e8\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\aim.py</code> <pre><code>@dataclass(slots=True)\nclass PointAtObjectWithDuration(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u6307\u5411\u6307\u5b9a\u5b9e\u4f53\u5e76\u4fdd\u6301\u6307\u5b9a\u65f6\u957f\u540e\u53d6\u6d88\u3002\n\n    Attributes:\n        object_id (str): \u76ee\u6807\u5b9e\u4f53\u7684 ID\u3002\n        time_duration (float): \u6307\u5411\u4fdd\u6301\u7684\u65f6\u957f\uff08\u79d2\uff09\u3002\u82e5\u4e3a 0 \u5219\u7acb\u5373\u53d6\u6d88\u3002\n        which_hand (AnimCmdHandType): \u4f7f\u7528\u7684\u624b\u90e8\u3002\n    \"\"\"\n\n    object_id: str\n    time_duration: float\n    which_hand: AnimCmdHandType = AnimCmdHandType.RIGHT\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.object_id, str) or not self.object_id:\n            raise ValueError(\"object_id must be a non-empty string.\")\n        if not isinstance(self.time_duration, int | float) or self.time_duration &lt; 0:\n            raise ValueError(\"time_duration must be a non-negative number.\")\n        if not isinstance(self.which_hand, AnimCmdHandType):\n            raise ValueError(f\"Invalid hand type: {self.which_hand}\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(\n            AnimCmd.point_at_object(\n                object_id=self.object_id,\n                is_cancel=False,\n                is_left_hand=self.which_hand == AnimCmdHandType.LEFT,\n            )\n        )\n        if self.time_duration &gt; 0:\n            await self.submit(AnimCmd.wait_for(time_duration=self.time_duration))\n        await self.submit(\n            AnimCmd.point_at_object(\n                object_id=self.object_id,\n                is_cancel=True,\n                is_left_hand=self.which_hand == AnimCmdHandType.LEFT,\n            )\n        )\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.EatOrDrink","title":"EatOrDrink  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u5403\u559d\u52a8\u4f5c\u3002</p> <p>Attributes:</p> Name Type Description <code>which_hand</code> <code>AnimCmdHandType</code> <p>\u6307\u5b9a\u4e3e\u624b\u7684\u624b\u90e8\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\gesture.py</code> <pre><code>@dataclass(slots=True)\nclass EatOrDrink(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u5403\u559d\u52a8\u4f5c\u3002\n\n    Attributes:\n        which_hand (AnimCmdHandType): \u6307\u5b9a\u4e3e\u624b\u7684\u624b\u90e8\u3002\n    \"\"\"\n\n    which_hand: AnimCmdHandType\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.which_hand, AnimCmdHandType):\n            raise ValueError(f\"Invalid hand type: {self.which_hand}\")\n        pass\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.eat_or_drink(self.which_hand))\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.IdleGesture","title":"IdleGesture  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u6062\u590d\u4e3a\u9ed8\u8ba4\u52a8\u4f5c\uff08Idle\uff09\u3002</p> <p>\u8be5\u52a8\u4f5c\u7528\u4e8e\u91cd\u7f6e\u5f53\u524d\u52a8\u753b\u72b6\u6001\uff0c\u5c06\u89d2\u8272\u6062\u590d\u5230\u9ed8\u8ba4\u59ff\u6001\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\gesture.py</code> <pre><code>@dataclass(slots=True)\nclass IdleGesture(ActionBase):\n    \"\"\"\n    \u6062\u590d\u4e3a\u9ed8\u8ba4\u52a8\u4f5c\uff08Idle\uff09\u3002\n\n    \u8be5\u52a8\u4f5c\u7528\u4e8e\u91cd\u7f6e\u5f53\u524d\u52a8\u753b\u72b6\u6001\uff0c\u5c06\u89d2\u8272\u6062\u590d\u5230\u9ed8\u8ba4\u59ff\u6001\u3002\n    \"\"\"\n\n    def validate(self) -&gt; None:\n        pass\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.idle_gesture())\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.NodHead","title":"NodHead  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u70b9\u5934\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\gesture.py</code> <pre><code>@dataclass(slots=True)\nclass NodHead(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u70b9\u5934\u3002\n    \"\"\"\n\n    def validate(self) -&gt; None:\n        pass\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.nod_head())\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.NodHeadWithDuration","title":"NodHeadWithDuration  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u70b9\u5934\u5e76\u4fdd\u6301\u6307\u5b9a\u65f6\u957f\u540e\u6062\u590d\u4e3a Idle\u3002</p> <p>Attributes:</p> Name Type Description <code>duration</code> <code>float</code> <p>\u6301\u7eed\u65f6\u95f4\uff08\u79d2\uff09\u30020 \u8868\u793a\u7acb\u5373\u6062\u590d\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\gesture.py</code> <pre><code>@dataclass(slots=True)\nclass NodHeadWithDuration(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u70b9\u5934\u5e76\u4fdd\u6301\u6307\u5b9a\u65f6\u957f\u540e\u6062\u590d\u4e3a Idle\u3002\n\n    Attributes:\n        duration (float): \u6301\u7eed\u65f6\u95f4\uff08\u79d2\uff09\u30020 \u8868\u793a\u7acb\u5373\u6062\u590d\u3002\n    \"\"\"\n\n    duration: float = 0.0\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.duration, int | float) or self.duration &lt; 0:\n            raise ValueError(\"Duration must be a non-negative number.\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.nod_head())\n\n        if self.duration &gt; 0:\n            await self.submit(AnimCmd.wait_for(time_duration=self.duration))\n\n        await self.submit(AnimCmd.idle_gesture())\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.RaiseHand","title":"RaiseHand  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u4e3e\u624b\u3002</p> <p>Attributes:</p> Name Type Description <code>which_hand</code> <code>AnimCmdHandType</code> <p>\u6307\u5b9a\u4e3e\u624b\u7684\u624b\u90e8\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\gesture.py</code> <pre><code>@dataclass(slots=True)\nclass RaiseHand(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u4e3e\u624b\u3002\n\n    Attributes:\n        which_hand (AnimCmdHandType): \u6307\u5b9a\u4e3e\u624b\u7684\u624b\u90e8\u3002\n    \"\"\"\n\n    which_hand: AnimCmdHandType\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.which_hand, AnimCmdHandType):\n            raise ValueError(f\"Invalid hand type: {self.which_hand}\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.raise_hand(which_hand=self.which_hand))\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.RaiseHandWithDuration","title":"RaiseHandWithDuration  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u4e3e\u624b\u5e76\u4fdd\u6301\u6307\u5b9a\u65f6\u957f\u540e\u6062\u590d\u4e3a Idle\u3002</p> <p>Attributes:</p> Name Type Description <code>which_hand</code> <code>AnimCmdHandType</code> <p>\u6307\u5b9a\u4e3e\u624b\u7684\u624b\u90e8\u3002</p> <code>duration</code> <code>float</code> <p>\u6301\u7eed\u65f6\u95f4\uff08\u79d2\uff09\u30020 \u8868\u793a\u7acb\u5373\u6062\u590d\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\gesture.py</code> <pre><code>@dataclass(slots=True)\nclass RaiseHandWithDuration(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u4e3e\u624b\u5e76\u4fdd\u6301\u6307\u5b9a\u65f6\u957f\u540e\u6062\u590d\u4e3a Idle\u3002\n\n    Attributes:\n        which_hand (AnimCmdHandType): \u6307\u5b9a\u4e3e\u624b\u7684\u624b\u90e8\u3002\n        duration (float): \u6301\u7eed\u65f6\u95f4\uff08\u79d2\uff09\u30020 \u8868\u793a\u7acb\u5373\u6062\u590d\u3002\n    \"\"\"\n\n    which_hand: AnimCmdHandType\n    duration: float = 0.0\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.which_hand, AnimCmdHandType):\n            raise ValueError(f\"Invalid hand type: {self.which_hand}\")\n        if not isinstance(self.duration, int | float) or self.duration &lt; 0:\n            raise ValueError(\"Duration must be a non-negative number.\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.raise_hand(which_hand=self.which_hand))\n\n        if self.duration &gt; 0:\n            await self.submit(AnimCmd.wait_for(time_duration=self.duration))\n\n        await self.submit(AnimCmd.idle_gesture())\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.RompPlay","title":"RompPlay  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u628a\u73a9\u5f53\u524d\u624b\u4e0a\u7684\u7269\u4f53\uff08\u9700\u8981\u624b\u4e0a\u6709\u7269\u4f53\uff09\uff0c\u82e5\u4e0d\u901a\u8fc7 IdleGesture \u53d6\u6d88\uff0c\u4f1a\u4e00\u76f4\u6301\u7eed\u628a\u73a9\u7684\u52a8\u4f5c\u3002</p> <p>Attributes:</p> Name Type Description <code>which_hand</code> <code>AnimCmdHandType</code> <p>\u6307\u5b9a\u7528\u54ea\u77e5\u624b\u3002 \u4e0d\u53ef\u4f7f\u7528 BOTH \u540c\u65f6\u53cc\u624b\u3002</p> <code>decrease_boredom</code> <code>float</code> <p>\u505a\u5b8c\u8fd9\u4e2a\u52a8\u4f5c\u53ef\u4ee5\u51cf\u5c11 agent \u591a\u5c11\u7684\u65e0\u804a\u503c</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\gesture.py</code> <pre><code>@dataclass(slots=True)\nclass RompPlay(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u628a\u73a9\u5f53\u524d\u624b\u4e0a\u7684\u7269\u4f53\uff08\u9700\u8981\u624b\u4e0a\u6709\u7269\u4f53\uff09\uff0c\u82e5\u4e0d\u901a\u8fc7 IdleGesture \u53d6\u6d88\uff0c\u4f1a\u4e00\u76f4\u6301\u7eed\u628a\u73a9\u7684\u52a8\u4f5c\u3002\n\n    Attributes:\n        which_hand (AnimCmdHandType): \u6307\u5b9a\u7528\u54ea\u77e5\u624b\u3002 \u4e0d\u53ef\u4f7f\u7528 BOTH \u540c\u65f6\u53cc\u624b\u3002\n        decrease_boredom (float): \u505a\u5b8c\u8fd9\u4e2a\u52a8\u4f5c\u53ef\u4ee5\u51cf\u5c11 agent \u591a\u5c11\u7684\u65e0\u804a\u503c\n    \"\"\"\n\n    which_hand: AnimCmdHandType\n    decrease_boredom: float = 0.0\n\n    def validate(self) -&gt; None:\n        # hand type\n        if not isinstance(self.which_hand, AnimCmdHandType):\n            raise TypeError(\n                f\"which_hand must be AnimCmdHandType, got {type(self.which_hand)}\"\n            )\n        if self.which_hand == AnimCmdHandType.BOTH:\n            raise ValueError(\"RompPlay does not support BOTH hands.\")\n\n        # decrease_boredom\n        if not isinstance(self.decrease_boredom, int | float):\n            raise TypeError(\n                f\"decrease_boredom must be int or float, got {type(self.decrease_boredom)}\"\n            )\n\n    async def execute(self) -&gt; None:\n        await self.submit(\n            AnimCmd.romp_play(\n                which_hand=self.which_hand, decrease_boredom=self.decrease_boredom\n            )\n        )\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.RompPlayWithDuration","title":"RompPlayWithDuration  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u628a\u73a9\u5f53\u524d\u624b\u4e0a\u7684\u7269\u4f53\u5e76\u4fdd\u6301\u6307\u5b9a\u65f6\u957f\u540e\u6062\u590d\u4e3a Idle\u3002</p> <p>Attributes:</p> Name Type Description <code>which_hand</code> <code>AnimCmdHandType</code> <p>\u6307\u5b9a\u7528\u54ea\u53ea\u624b\u3002\u4e0d\u53ef\u4f7f\u7528 BOTH \u540c\u65f6\u53cc\u624b\u3002</p> <code>decrease_boredom</code> <code>float</code> <p>\u505a\u5b8c\u8fd9\u4e2a\u52a8\u4f5c\u53ef\u4ee5\u51cf\u5c11 agent \u591a\u5c11\u7684\u65e0\u804a\u503c\u3002</p> <code>duration</code> <code>float</code> <p>\u6301\u7eed\u65f6\u95f4\uff08\u79d2\uff09\u30020 \u8868\u793a\u7acb\u5373\u6062\u590d Idle\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\gesture.py</code> <pre><code>@dataclass(slots=True)\nclass RompPlayWithDuration(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u628a\u73a9\u5f53\u524d\u624b\u4e0a\u7684\u7269\u4f53\u5e76\u4fdd\u6301\u6307\u5b9a\u65f6\u957f\u540e\u6062\u590d\u4e3a Idle\u3002\n\n    Attributes:\n        which_hand (AnimCmdHandType): \u6307\u5b9a\u7528\u54ea\u53ea\u624b\u3002\u4e0d\u53ef\u4f7f\u7528 BOTH \u540c\u65f6\u53cc\u624b\u3002\n        decrease_boredom (float): \u505a\u5b8c\u8fd9\u4e2a\u52a8\u4f5c\u53ef\u4ee5\u51cf\u5c11 agent \u591a\u5c11\u7684\u65e0\u804a\u503c\u3002\n        duration (float): \u6301\u7eed\u65f6\u95f4\uff08\u79d2\uff09\u30020 \u8868\u793a\u7acb\u5373\u6062\u590d Idle\u3002\n    \"\"\"\n\n    which_hand: AnimCmdHandType\n    decrease_boredom: float = 0.0\n    duration: float = 0.0\n\n    def validate(self) -&gt; None:\n        # hand type\n        if not isinstance(self.which_hand, AnimCmdHandType):\n            raise TypeError(\n                f\"which_hand must be AnimCmdHandType, got {type(self.which_hand)}\"\n            )\n        if self.which_hand == AnimCmdHandType.BOTH:\n            raise ValueError(\"RompPlay does not support BOTH hands.\")\n\n        # decrease_boredom\n        if not isinstance(self.decrease_boredom, int | float):\n            raise TypeError(\n                f\"decrease_boredom must be int or float, got {type(self.decrease_boredom)}\"\n            )\n\n        # duration\n        if not isinstance(self.duration, int | float):\n            raise TypeError(f\"duration must be int or float, got {type(self.duration)}\")\n        if self.duration &lt; 0:\n            raise ValueError(\"duration must be non-negative.\")\n\n    async def execute(self) -&gt; None:\n        # \u5f00\u59cb\u628a\u73a9\n        await self.submit(\n            AnimCmd.romp_play(\n                which_hand=self.which_hand, decrease_boredom=self.decrease_boredom\n            )\n        )\n\n        # \u7b49\u5f85\u6307\u5b9a\u65f6\u957f\n        if self.duration &gt; 0:\n            await self.submit(AnimCmd.wait_for(time_duration=self.duration))\n\n        # \u6062\u590d Idle\n        await self.submit(AnimCmd.idle_gesture())\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.ShakeHead","title":"ShakeHead  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u6447\u5934\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\gesture.py</code> <pre><code>@dataclass(slots=True)\nclass ShakeHead(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u6447\u5934\u3002\n    \"\"\"\n\n    def validate(self) -&gt; None:\n        pass\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.shake_head())\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.ShakeHeadWithDuration","title":"ShakeHeadWithDuration  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u6447\u5934\u5e76\u4fdd\u6301\u6307\u5b9a\u65f6\u957f\u540e\u6062\u590d\u4e3a Idle\u3002</p> <p>Attributes:</p> Name Type Description <code>duration</code> <code>float</code> <p>\u6301\u7eed\u65f6\u95f4\uff08\u79d2\uff09\u30020 \u8868\u793a\u7acb\u5373\u6062\u590d\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\gesture.py</code> <pre><code>@dataclass(slots=True)\nclass ShakeHeadWithDuration(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u6447\u5934\u5e76\u4fdd\u6301\u6307\u5b9a\u65f6\u957f\u540e\u6062\u590d\u4e3a Idle\u3002\n\n    Attributes:\n        duration (float): \u6301\u7eed\u65f6\u95f4\uff08\u79d2\uff09\u30020 \u8868\u793a\u7acb\u5373\u6062\u590d\u3002\n    \"\"\"\n\n    duration: float = 0.0\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.duration, int | float) or self.duration &lt; 0:\n            raise ValueError(\"Duration must be a non-negative number.\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.shake_head())\n\n        if self.duration &gt; 0:\n            await self.submit(AnimCmd.wait_for(time_duration=self.duration))\n\n        await self.submit(AnimCmd.idle_gesture())\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.WaveHand","title":"WaveHand  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u6325\u624b\u3002</p> <p>Attributes:</p> Name Type Description <code>which_hand</code> <code>AnimCmdHandType</code> <p>\u6307\u5b9a\u6325\u624b\u7684\u624b\u90e8\uff0c\u53ef\u9009\u503c\u4e3a <code>AnimCmdHandType.LEFT</code>\u3001<code>AnimCmdHandType.RIGHT</code>\u3001<code>AnimCmdHandType.BOTH</code>\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\gesture.py</code> <pre><code>@dataclass(slots=True)\nclass WaveHand(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u6325\u624b\u3002\n\n    Attributes:\n        which_hand (AnimCmdHandType): \u6307\u5b9a\u6325\u624b\u7684\u624b\u90e8\uff0c\u53ef\u9009\u503c\u4e3a `AnimCmdHandType.LEFT`\u3001`AnimCmdHandType.RIGHT`\u3001`AnimCmdHandType.BOTH`\u3002\n    \"\"\"\n\n    which_hand: AnimCmdHandType\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.which_hand, AnimCmdHandType):\n            raise ValueError(f\"Invalid hand type: {self.which_hand}\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.wave_hand(which_hand=self.which_hand))\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.WaveHandWithDuration","title":"WaveHandWithDuration  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u6325\u624b\u5e76\u4fdd\u6301\u6307\u5b9a\u65f6\u957f\u540e\u6062\u590d\u4e3a Idle\u3002</p> <p>Attributes:</p> Name Type Description <code>which_hand</code> <code>AnimCmdHandType</code> <p>\u6307\u5b9a\u6325\u624b\u7684\u624b\u90e8\u3002</p> <code>duration</code> <code>float</code> <p>\u6301\u7eed\u65f6\u95f4\uff08\u79d2\uff09\u30020 \u8868\u793a\u7acb\u5373\u6062\u590d\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\gesture.py</code> <pre><code>@dataclass(slots=True)\nclass WaveHandWithDuration(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u6325\u624b\u5e76\u4fdd\u6301\u6307\u5b9a\u65f6\u957f\u540e\u6062\u590d\u4e3a Idle\u3002\n\n    Attributes:\n        which_hand (AnimCmdHandType): \u6307\u5b9a\u6325\u624b\u7684\u624b\u90e8\u3002\n        duration (float): \u6301\u7eed\u65f6\u95f4\uff08\u79d2\uff09\u30020 \u8868\u793a\u7acb\u5373\u6062\u590d\u3002\n    \"\"\"\n\n    which_hand: AnimCmdHandType\n    duration: float = 0.0\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.which_hand, AnimCmdHandType):\n            raise ValueError(f\"Invalid hand type: {self.which_hand}\")\n        if not isinstance(self.duration, int | float) or self.duration &lt; 0:\n            raise ValueError(\"Duration must be a non-negative number.\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.wave_hand(which_hand=self.which_hand))\n\n        if self.duration &gt; 0:\n            await self.submit(AnimCmd.wait_for(time_duration=self.duration))\n\n        await self.submit(AnimCmd.idle_gesture())\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.HandBack","title":"HandBack  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u624b\u90e8\u6536\u56de\u3002</p> <p>Attributes:</p> Name Type Description <code>which_hand</code> <code>AnimCmdHandType</code> <p>\u4f7f\u7528\u7684\u624b\u90e8\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\hand.py</code> <pre><code>@dataclass(slots=True)\nclass HandBack(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u624b\u90e8\u6536\u56de\u3002\n\n    Attributes:\n        which_hand (AnimCmdHandType): \u4f7f\u7528\u7684\u624b\u90e8\u3002\n    \"\"\"\n\n    which_hand: AnimCmdHandType\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.which_hand, AnimCmdHandType):\n            raise ValueError(f\"Invalid hand type: {self.which_hand}\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(\n            AnimCmd.hand_back(\n                which_hand=self.which_hand,\n            )\n        )\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.HandReach","title":"HandReach  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u624b\u90e8\u4f38\u5411\u76ee\u6807\u4f4d\u7f6e\u3002</p> <p>Attributes:</p> Name Type Description <code>which_hand</code> <code>AnimCmdHandType</code> <p>\u4f7f\u7528\u7684\u624b\u90e8\u3002</p> <code>target_location</code> <code>Vector3</code> <p>\u76ee\u6807\u4f4d\u7f6e\u3002</p> <code>is_reach_from_front</code> <code>bool</code> <p>\u662f\u5426\u4ece\u524d\u65b9\u4f38\u624b\uff0c\u9ed8\u8ba4 False\u3002</p> <code>auto_offset</code> <code>bool</code> <p>\u662f\u5426\u81ea\u52a8\u8c03\u6574\u5230\u8868\u9762\uff0c\u9ed8\u8ba4 True\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\hand.py</code> <pre><code>@dataclass(slots=True)\nclass HandReach(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u624b\u90e8\u4f38\u5411\u76ee\u6807\u4f4d\u7f6e\u3002\n\n    Attributes:\n        which_hand (AnimCmdHandType): \u4f7f\u7528\u7684\u624b\u90e8\u3002\n        target_location (Vector3): \u76ee\u6807\u4f4d\u7f6e\u3002\n        is_reach_from_front (bool): \u662f\u5426\u4ece\u524d\u65b9\u4f38\u624b\uff0c\u9ed8\u8ba4 False\u3002\n        auto_offset (bool): \u662f\u5426\u81ea\u52a8\u8c03\u6574\u5230\u8868\u9762\uff0c\u9ed8\u8ba4 True\u3002\n    \"\"\"\n\n    which_hand: AnimCmdHandType\n    target_location: Vector3\n    is_reach_from_front: bool = False\n    auto_offset: bool = True\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.target_location, Vector3):\n            raise TypeError(\"target_location must be a Vector3.\")\n        if not isinstance(self.which_hand, AnimCmdHandType):\n            raise ValueError(f\"Invalid hand type: {self.which_hand}\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(\n            AnimCmd.hand_reach_to_location(\n                which_hand=self.which_hand,\n                location=self.target_location,\n                is_reach_from_front=self.is_reach_from_front,\n                auto_offset=self.auto_offset,\n            )\n        )\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.HandRelease","title":"HandRelease  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u91ca\u653e\u624b\u4e2d\u7684\u7269\u4f53\u3002</p> <p>Attributes:</p> Name Type Description <code>which_hand</code> <code>AnimCmdHandType</code> <p>\u4f7f\u7528\u7684\u624b\u90e8\u3002</p> <code>target_location</code> <code>Vector3</code> <p>\u76ee\u6807\u4f4d\u7f6e\u3002</p> <code>force_locate</code> <code>bool</code> <p>\u662f\u5426\u5f3a\u5236\u653e\u5230\u7279\u5b9a\u4f4d\u7f6e\uff0c\u9ed8\u8ba4 True\u3002</p> <code>force_release</code> <code>bool</code> <p>\u662f\u5426\u5f3a\u5236\u91ca\u653e\uff0c\u9ed8\u8ba4 True</p> <code>auto_rotate</code> <code>bool</code> <p>\u662f\u5426\u81ea\u52a8\u8c03\u6574\u65cb\u8f6c\uff0c\u9ed8\u8ba4 False\u3002</p> <code>disable_physics</code> <code>bool</code> <p>\u662f\u5426\u7981\u7528\u7269\u7406\u6548\u679c\uff0c\u9ed8\u8ba4 False\u3002</p> <code>hold_if_unreachable</code> <code>bool</code> <p>\u82e5\u91ca\u653e\u5931\u8d25\u662f\u5426\u7ee7\u7eed\u6293\u63e1\uff0c\u9ed8\u8ba4 False\u3002</p> <code>container_id</code> <code>str | None</code> <p>\u5bb9\u5668 ID\uff08\u7528\u4e8e\u4f18\u5316\u8868\u73b0\uff09\uff0c\u53ef\u9009\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\hand.py</code> <pre><code>@dataclass(slots=True)\nclass HandRelease(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u91ca\u653e\u624b\u4e2d\u7684\u7269\u4f53\u3002\n\n    Attributes:\n        which_hand (AnimCmdHandType): \u4f7f\u7528\u7684\u624b\u90e8\u3002\n        target_location (Vector3): \u76ee\u6807\u4f4d\u7f6e\u3002\n        force_locate (bool): \u662f\u5426\u5f3a\u5236\u653e\u5230\u7279\u5b9a\u4f4d\u7f6e\uff0c\u9ed8\u8ba4 True\u3002\n        force_release (bool): \u662f\u5426\u5f3a\u5236\u91ca\u653e\uff0c\u9ed8\u8ba4 True\n        auto_rotate (bool): \u662f\u5426\u81ea\u52a8\u8c03\u6574\u65cb\u8f6c\uff0c\u9ed8\u8ba4 False\u3002\n        disable_physics (bool): \u662f\u5426\u7981\u7528\u7269\u7406\u6548\u679c\uff0c\u9ed8\u8ba4 False\u3002\n        hold_if_unreachable (bool): \u82e5\u91ca\u653e\u5931\u8d25\u662f\u5426\u7ee7\u7eed\u6293\u63e1\uff0c\u9ed8\u8ba4 False\u3002\n        container_id (str | None): \u5bb9\u5668 ID\uff08\u7528\u4e8e\u4f18\u5316\u8868\u73b0\uff09\uff0c\u53ef\u9009\u3002\n    \"\"\"\n\n    which_hand: AnimCmdHandType\n    target_location: Vector3\n    force_locate: bool = True\n    force_release: bool = True\n    auto_rotate: bool = False\n    rotation: Quaternion | None = None\n    disable_physics: bool = False\n    hold_if_unreachable: bool = False\n    container_id: str | None = None\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.target_location, Vector3):\n            raise TypeError(\"target_location must be a Vector3.\")\n        if not isinstance(self.which_hand, AnimCmdHandType):\n            raise ValueError(f\"Invalid hand type: {self.which_hand}\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(\n            AnimCmd.hand_release_with_location(\n                which_hand=self.which_hand,\n                target_location=self.target_location,\n                force_locate=self.force_locate,\n                auto_rotate=self.auto_rotate,\n                rotation=self.rotation,\n                force_release=self.force_release,\n                disable_physics=self.disable_physics,\n                hold_if_unreachable=self.hold_if_unreachable,\n                container_unique_name=self.container_id,\n            )\n        )\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.PutDownToLocation","title":"PutDownToLocation  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u653e\u4e0b\u7269\u4f53\u5230\u6307\u5b9a\u4f4d\u7f6e\u3002</p> <p>Attributes:</p> Name Type Description <code>which_hand</code> <code>AnimCmdHandType</code> <p>\u4f7f\u7528\u7684\u624b\u90e8\u3002</p> <code>target_location</code> <code>Vector3</code> <p>\u76ee\u6807\u4f4d\u7f6e\u3002</p> <code>disable_physics</code> <code>bool</code> <p>\u677e\u624b\u540e\u662f\u5426\u7981\u7528\u7269\u7406\u6548\u679c\uff0c\u9ed8\u8ba4 False\u3002</p> <code>hold_if_unreachable</code> <code>bool</code> <p>\u82e5\u7269\u4f53\u65e0\u6cd5\u5230\u8fbe\u76ee\u6807\u4f4d\u7f6e\uff0c\u662f\u5426\u4fdd\u6301\u6293\u63e1\uff0c\u9ed8\u8ba4 False\u3002</p> <code>force_release</code> <code>bool</code> <p>\u662f\u5426\u5f3a\u5236\u91ca\u653e\uff0c\u9ed8\u8ba4 True\u3002</p> <code>auto_rotate</code> <code>bool</code> <p>\u662f\u5426\u81ea\u52a8\u8c03\u6574\u65cb\u8f6c\uff0c\u9ed8\u8ba4 False\u3002</p> <code>rotation</code> <code>Quaternion | None</code> <p>\u8c03\u6574\u540e\u7684\u65cb\u8f6c\u89d2\u5ea6\uff0c\u53ef\u9009\u3002</p> <code>force_locate</code> <code>bool</code> <p>\u662f\u5426\u5f3a\u5236\u653e\u5230\u7279\u5b9a\u4f4d\u7f6e\uff0c\u9ed8\u8ba4 True\u3002</p> <code>container_id</code> <code>str | None</code> <p>\u5bb9\u5668 ID\uff08\u7528\u4e8e\u4f18\u5316\u52a8\u4f5c\u8868\u73b0\uff09\uff0c\u53ef\u9009\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\hand.py</code> <pre><code>@dataclass(slots=True)\nclass PutDownToLocation(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u653e\u4e0b\u7269\u4f53\u5230\u6307\u5b9a\u4f4d\u7f6e\u3002\n\n    Attributes:\n        which_hand (AnimCmdHandType): \u4f7f\u7528\u7684\u624b\u90e8\u3002\n        target_location (Vector3): \u76ee\u6807\u4f4d\u7f6e\u3002\n        disable_physics (bool): \u677e\u624b\u540e\u662f\u5426\u7981\u7528\u7269\u7406\u6548\u679c\uff0c\u9ed8\u8ba4 False\u3002\n        hold_if_unreachable (bool): \u82e5\u7269\u4f53\u65e0\u6cd5\u5230\u8fbe\u76ee\u6807\u4f4d\u7f6e\uff0c\u662f\u5426\u4fdd\u6301\u6293\u63e1\uff0c\u9ed8\u8ba4 False\u3002\n        force_release (bool): \u662f\u5426\u5f3a\u5236\u91ca\u653e\uff0c\u9ed8\u8ba4 True\u3002\n        auto_rotate (bool): \u662f\u5426\u81ea\u52a8\u8c03\u6574\u65cb\u8f6c\uff0c\u9ed8\u8ba4 False\u3002\n        rotation (Quaternion | None): \u8c03\u6574\u540e\u7684\u65cb\u8f6c\u89d2\u5ea6\uff0c\u53ef\u9009\u3002\n        force_locate (bool): \u662f\u5426\u5f3a\u5236\u653e\u5230\u7279\u5b9a\u4f4d\u7f6e\uff0c\u9ed8\u8ba4 True\u3002\n        container_id (str | None): \u5bb9\u5668 ID\uff08\u7528\u4e8e\u4f18\u5316\u52a8\u4f5c\u8868\u73b0\uff09\uff0c\u53ef\u9009\u3002\n    \"\"\"\n\n    which_hand: AnimCmdHandType\n    target_location: Vector3\n    force_release: bool = True\n    disable_physics: bool = False\n    hold_if_unreachable: bool = False\n    auto_rotate: bool = False\n    rotation: Quaternion | None = None\n    force_locate: bool = True\n    container_id: str | None = None\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.target_location, Vector3):\n            raise TypeError(\"target_location must be a Vector3.\")\n        if not isinstance(self.which_hand, AnimCmdHandType):\n            raise ValueError(f\"Invalid hand type: {self.which_hand}\")\n\n    async def execute(self) -&gt; None:\n        # 1. \u4f38\u624b\n        await self.submit(\n            AnimCmd.hand_reach_to_location(\n                which_hand=self.which_hand,\n                location=self.target_location,\n                is_reach_from_front=False,\n                auto_offset=True,\n            )\n        )\n\n        # 2. \u653e\u7f6e\n        await self.submit(\n            AnimCmd.hand_release_with_location(\n                which_hand=self.which_hand,\n                target_location=self.target_location,\n                force_locate=self.force_locate,\n                auto_rotate=self.auto_rotate,\n                rotation=self.rotation,\n                force_release=self.force_release,\n                disable_physics=self.disable_physics,\n                hold_if_unreachable=self.hold_if_unreachable,\n                container_unique_name=self.container_id,\n            )\n        )\n\n        # 3. \u6536\u624b\n        await self.submit(AnimCmd.hand_back(which_hand=self.which_hand))\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.TakeObject","title":"TakeObject  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u62ff\u8d77\u7269\u4f53\u3002</p> <p>Attributes:</p> Name Type Description <code>which_hand</code> <code>AnimCmdHandType</code> <p>\u4f7f\u7528\u7684\u624b\u90e8\u3002</p> <code>object_id</code> <code>str</code> <p>\u76ee\u6807\u7269\u4f53 ID\u3002</p> <code>use_socket</code> <code>bool</code> <p>\u662f\u5426\u4f7f\u7528 socket\uff0c\u9ed8\u8ba4 False\u3002</p> <code>force_grab</code> <code>bool</code> <p>\u662f\u5426\u5f3a\u5236\u6293\u53d6\uff0c\u9ed8\u8ba4 False\u3002</p> <code>is_reach_from_front</code> <code>bool</code> <p>\u662f\u5426\u4ece\u524d\u65b9\u4f38\u624b\uff0c\u9ed8\u8ba4 False\u3002</p> <code>auto_offset</code> <code>bool</code> <p>\u662f\u5426\u81ea\u52a8\u8c03\u6574\u5230\u7269\u4f53\u8868\u9762\uff0c\u9ed8\u8ba4 False\u3002</p> <code>container_id</code> <code>str | None</code> <p>\u5bb9\u5668 ID\uff08\u7528\u4e8e\u4f18\u5316\u52a8\u4f5c\u8868\u73b0\uff09\uff0c\u53ef\u9009\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\hand.py</code> <pre><code>@dataclass(slots=True)\nclass TakeObject(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u62ff\u8d77\u7269\u4f53\u3002\n\n    Attributes:\n        which_hand (AnimCmdHandType): \u4f7f\u7528\u7684\u624b\u90e8\u3002\n        object_id (str): \u76ee\u6807\u7269\u4f53 ID\u3002\n        use_socket (bool): \u662f\u5426\u4f7f\u7528 socket\uff0c\u9ed8\u8ba4 False\u3002\n        force_grab (bool): \u662f\u5426\u5f3a\u5236\u6293\u53d6\uff0c\u9ed8\u8ba4 False\u3002\n        is_reach_from_front (bool): \u662f\u5426\u4ece\u524d\u65b9\u4f38\u624b\uff0c\u9ed8\u8ba4 False\u3002\n        auto_offset (bool): \u662f\u5426\u81ea\u52a8\u8c03\u6574\u5230\u7269\u4f53\u8868\u9762\uff0c\u9ed8\u8ba4 False\u3002\n        container_id (str | None): \u5bb9\u5668 ID\uff08\u7528\u4e8e\u4f18\u5316\u52a8\u4f5c\u8868\u73b0\uff09\uff0c\u53ef\u9009\u3002\n    \"\"\"\n\n    which_hand: AnimCmdHandType\n    object_id: str\n    use_socket: bool = False\n    force_grab: bool = False\n    is_reach_from_front: bool = False\n    auto_offset: bool = False\n    container_id: str | None = None\n\n    def validate(self) -&gt; None:\n        if not self.object_id:\n            raise ValueError(\"object_id must be specified.\")\n        if not isinstance(self.which_hand, AnimCmdHandType):\n            raise ValueError(f\"Invalid hand type: {self.which_hand}\")\n\n    async def execute(self) -&gt; None:\n        # 1. \u4f38\u624b\n        await self.submit(\n            AnimCmd.hand_reach_to_object(\n                which_hand=self.which_hand,\n                object_id=self.object_id,\n                is_reach_from_front=self.is_reach_from_front,\n                auto_offset=self.auto_offset,\n                use_socket=self.use_socket,\n            )\n        )\n\n        # 2. \u6293\u53d6\n        await self.submit(\n            AnimCmd.hand_grab_object(\n                which_hand=self.which_hand,\n                object_id=self.object_id,\n                container_unique_name=self.container_id,\n                force_grab=self.force_grab,\n                use_socket=self.use_socket,\n            )\n        )\n\n        # 3. \u6536\u624b\n        await self.submit(AnimCmd.hand_back(which_hand=self.which_hand))\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.InputAnimation","title":"InputAnimation  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u8f93\u5165\u52a8\u4f5c\uff08Input Animation\uff09\u3002</p> <p>\u8be5\u52a8\u4f5c\u7528\u4e8e\u63a7\u5236\u89d2\u8272\u7684\u8f93\u5165\u884c\u4e3a\uff0c\u6bd4\u5982\u79fb\u52a8\u65b9\u5411\u3001\u662f\u5426\u51b2\u523a\u3001\u89d2\u901f\u5ea6\u3001\u8df3\u8dc3\u4e0e\u4e0b\u8e72\u7b49\u3002 \u6240\u6709\u53c2\u6570\u5747\u4e3a\u53ef\u9009\uff0c\u82e5\u4e0d\u8bbe\u7f6e\uff0c\u5219\u4e0d\u5f71\u54cd\u5bf9\u5e94\u7684\u8f93\u5165\u72b6\u6001\u3002</p> <p>Attributes:</p> Name Type Description <code>move_vec</code> <code>Vector2 | None</code> <p>\u662f\u5426\u6709\u79fb\u52a8\u5411\u91cf\u7684\u8f93\u5165\uff0cx\u8868\u793a\u5de6\u53f3\u79fb\u52a8\uff0c y\u8868\u793a\u524d\u540e\u79fb\u52a8\uff0c\u8303\u56f4[-1, 1]\uff0cNone \u8868\u793a\u672a\u8bbe\u7f6e\u3002</p> <code>angular_speed</code> <code>float | None</code> <p>\u89d2\u901f\u5ea6\uff0c\u8868\u793a\u65cb\u8f6c\u901f\u7387\uff0c\u5355\u4f4d\u4e3a\u5ea6/\u79d2\uff0cNone \u8868\u793a\u4e0d\u8bbe\u7f6e\u3002</p> <code>sprint</code> <code>bool | None</code> <p>\u662f\u5426\u51b2\u523a\uff0cTrue \u8868\u793a\u51b2\u523a\uff0cFalse \u8868\u793a\u6b63\u5e38\u79fb\u52a8\uff0cNone \u8868\u793a\u672a\u8bbe\u7f6e\u3002</p> <code>jump</code> <code>bool | None</code> <p>\u662f\u5426\u8df3\u8dc3\uff0cTrue \u8868\u793a\u8df3\u8dc3\uff0cFalse \u8868\u793a\u4e0d\u8df3\uff0cNone \u8868\u793a\u672a\u8bbe\u7f6e\u3002</p> <code>crouch</code> <code>bool | None</code> <p>\u662f\u5426\u4e0b\u8e72\uff0cTrue \u8868\u793a\u4e0b\u8e72\uff0cFalse \u8868\u793a\u7ad9\u7acb\uff0cNone \u8868\u793a\u672a\u8bbe\u7f6e\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\input.py</code> <pre><code>@dataclass(slots=True)\nclass InputAnimation(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u8f93\u5165\u52a8\u4f5c\uff08Input Animation\uff09\u3002\n\n    \u8be5\u52a8\u4f5c\u7528\u4e8e\u63a7\u5236\u89d2\u8272\u7684\u8f93\u5165\u884c\u4e3a\uff0c\u6bd4\u5982\u79fb\u52a8\u65b9\u5411\u3001\u662f\u5426\u51b2\u523a\u3001\u89d2\u901f\u5ea6\u3001\u8df3\u8dc3\u4e0e\u4e0b\u8e72\u7b49\u3002\n    \u6240\u6709\u53c2\u6570\u5747\u4e3a\u53ef\u9009\uff0c\u82e5\u4e0d\u8bbe\u7f6e\uff0c\u5219\u4e0d\u5f71\u54cd\u5bf9\u5e94\u7684\u8f93\u5165\u72b6\u6001\u3002\n\n    Attributes:\n        move_vec (Vector2 | None): \u662f\u5426\u6709\u79fb\u52a8\u5411\u91cf\u7684\u8f93\u5165\uff0cx\u8868\u793a\u5de6\u53f3\u79fb\u52a8\uff0c y\u8868\u793a\u524d\u540e\u79fb\u52a8\uff0c\u8303\u56f4[-1, 1]\uff0cNone \u8868\u793a\u672a\u8bbe\u7f6e\u3002\n        angular_speed (float | None): \u89d2\u901f\u5ea6\uff0c\u8868\u793a\u65cb\u8f6c\u901f\u7387\uff0c\u5355\u4f4d\u4e3a\u5ea6/\u79d2\uff0cNone \u8868\u793a\u4e0d\u8bbe\u7f6e\u3002\n        sprint (bool | None): \u662f\u5426\u51b2\u523a\uff0cTrue \u8868\u793a\u51b2\u523a\uff0cFalse \u8868\u793a\u6b63\u5e38\u79fb\u52a8\uff0cNone \u8868\u793a\u672a\u8bbe\u7f6e\u3002\n        jump (bool | None): \u662f\u5426\u8df3\u8dc3\uff0cTrue \u8868\u793a\u8df3\u8dc3\uff0cFalse \u8868\u793a\u4e0d\u8df3\uff0cNone \u8868\u793a\u672a\u8bbe\u7f6e\u3002\n        crouch (bool | None): \u662f\u5426\u4e0b\u8e72\uff0cTrue \u8868\u793a\u4e0b\u8e72\uff0cFalse \u8868\u793a\u7ad9\u7acb\uff0cNone \u8868\u793a\u672a\u8bbe\u7f6e\u3002\n    \"\"\"\n\n    move_vec: Vector2 | None = None\n    angular_speed: float | None = None\n    sprint: bool | None = None\n    jump: bool | None = None\n    crouch: bool | None = None\n\n    def validate(self) -&gt; None:\n        if self.move_vec is not None and not isinstance(self.move_vec, Vector2):\n            raise ValueError(\"move_vec must be a Vector2 or None.\")\n\n        if self.sprint is not None and not isinstance(self.sprint, bool):\n            raise ValueError(\"sprint must be a boolean or None.\")\n\n        if self.jump is not None and not isinstance(self.jump, bool):\n            raise ValueError(\"jump must be a boolean or None.\")\n\n        if self.crouch is not None and not isinstance(self.crouch, bool):\n            raise ValueError(\"crouch must be a boolean or None.\")\n\n        if self.angular_speed is not None:\n            if not isinstance(self.angular_speed, int | float):\n                raise ValueError(\"angular_speed must be a float or None.\")\n            if not -360.0 &lt;= self.angular_speed &lt;= 360.0:\n                raise ValueError(\"angular_speed must be in [-360.0, 360.0]\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(\n            AnimCmd.input_action(\n                move_vec=self.move_vec,\n                sprint=self.sprint,\n                angular_speed=self.angular_speed,\n                jump=self.jump,\n                crouch=self.crouch,\n            )\n        )\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.SwitchInputAnimation","title":"SwitchInputAnimation  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u542f\u52a8\u6216\u8005\u5173\u95ed\u8f93\u5165\u63a7\u5236\u5668\u3002</p> <p>Attributes:</p> Name Type Description <code>is_enable</code> <code>bool</code> <p>\u662f\u5426\u542f\u52a8\u63a7\u5236\u5668\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\input.py</code> <pre><code>@dataclass(slots=True)\nclass SwitchInputAnimation(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u542f\u52a8\u6216\u8005\u5173\u95ed\u8f93\u5165\u63a7\u5236\u5668\u3002\n\n    Attributes:\n        is_enable (bool): \u662f\u5426\u542f\u52a8\u63a7\u5236\u5668\u3002\n    \"\"\"\n\n    is_enable: bool = False\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.is_enable, bool):\n            raise TypeError(\"is_close_input must be a bool.\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(\n            AnimCmd.switch_input_animation(is_close_input=not self.is_enable)\n        )\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.Interact","title":"Interact  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u4ea4\u4e92\u5bf9\u8c61\u72b6\u6001\u3002</p> <p>\u7528\u4e8e\u63a7\u5236\u5bf9\u8c61\u72b6\u6001\uff08\u5982\u5f00/\u5173\uff09\uff0c\u53ef\u5e94\u7528\u4e8e\u706f\u3001\u6309\u94ae\u3001\u673a\u5668\u5f00\u5173\u7b49\u3002</p> <p>Attributes:</p> Name Type Description <code>object_id</code> <code>str</code> <p>\u76ee\u6807\u5bf9\u8c61\u7684\u552f\u4e00 ID\u3002</p> <code>new_object_state</code> <code>bool</code> <p>\u5e0c\u671b\u8bbe\u7f6e\u7684\u72b6\u6001\uff0cTrue \u8868\u793a\u5f00\u542f/\u6fc0\u6d3b\uff0cFalse \u8868\u793a\u5173\u95ed/\u505c\u7528\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\interact.py</code> <pre><code>@dataclass(slots=True)\nclass Interact(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u4ea4\u4e92\u5bf9\u8c61\u72b6\u6001\u3002\n\n    \u7528\u4e8e\u63a7\u5236\u5bf9\u8c61\u72b6\u6001\uff08\u5982\u5f00/\u5173\uff09\uff0c\u53ef\u5e94\u7528\u4e8e\u706f\u3001\u6309\u94ae\u3001\u673a\u5668\u5f00\u5173\u7b49\u3002\n\n    Attributes:\n        object_id (str): \u76ee\u6807\u5bf9\u8c61\u7684\u552f\u4e00 ID\u3002\n        new_object_state (bool): \u5e0c\u671b\u8bbe\u7f6e\u7684\u72b6\u6001\uff0cTrue \u8868\u793a\u5f00\u542f/\u6fc0\u6d3b\uff0cFalse \u8868\u793a\u5173\u95ed/\u505c\u7528\u3002\n    \"\"\"\n\n    object_id: str\n    new_object_state: bool\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.object_id, str):\n            raise TypeError(f\"object_id must be str, got {type(self.object_id)}\")\n        if not isinstance(self.new_object_state, bool):\n            raise TypeError(\n                f\"new_object_state must be bool, got {type(self.new_object_state)}\"\n            )\n\n    async def execute(self) -&gt; None:\n        await self.submit(\n            AnimCmd.touch_object_state(\n                target_id=self.object_id, new_state=self.new_object_state\n            )\n        )\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.MoveToComponent","title":"MoveToComponent  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u79fb\u52a8\u81f3\u6307\u5b9a\u76ee\u6807\u7ec4\u4ef6\uff0c\u79fb\u52a8\u901f\u5ea6\u8f83\u5927\u65f6\u4f1a\u5207\u6362\u4e3a\u8dd1\u6b65\u52a8\u4f5c\uff0c\u79fb\u52a8\u901f\u5ea6\u8f83\u5c0f\u65f6\u7ef4\u6301\u8d70\u8def\u52a8\u4f5c\u3002</p> <p>Attributes:</p> Name Type Description <code>component_id</code> <code>str</code> <p>\u76ee\u6807\u7684 ComponentID\u3002</p> <code>speed</code> <code>float</code> <p>\u79fb\u52a8\u901f\u5ea6\uff0c\u5355\u4f4d\u4e3a cm/s\uff0c\u82e5\u4e3a 0 \u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u901f\u5ea6\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\locomotion.py</code> <pre><code>@dataclass(slots=True)\nclass MoveToComponent(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u79fb\u52a8\u81f3\u6307\u5b9a\u76ee\u6807\u7ec4\u4ef6\uff0c\u79fb\u52a8\u901f\u5ea6\u8f83\u5927\u65f6\u4f1a\u5207\u6362\u4e3a\u8dd1\u6b65\u52a8\u4f5c\uff0c\u79fb\u52a8\u901f\u5ea6\u8f83\u5c0f\u65f6\u7ef4\u6301\u8d70\u8def\u52a8\u4f5c\u3002\n\n    Attributes:\n        component_id (str): \u76ee\u6807\u7684 ComponentID\u3002\n        speed (float): \u79fb\u52a8\u901f\u5ea6\uff0c\u5355\u4f4d\u4e3a cm/s\uff0c\u82e5\u4e3a 0 \u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u901f\u5ea6\u3002\n    \"\"\"\n\n    component_id: str\n    speed: float = 0.0\n\n    def validate(self) -&gt; None:\n        if not self.component_id:\n            raise ValueError(\"component_id must be specified.\")\n        if not isinstance(self.speed, int | float) or self.speed &lt; 0:\n            raise ValueError(\"speed must be a non-negative number\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(\n            AnimCmd.move_to_component(\n                component_id=self.component_id, move_speed=self.speed, can_run=False\n            )\n        )\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.MoveToLocation","title":"MoveToLocation  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u79fb\u52a8\u81f3\u6307\u5b9a\u76ee\u6807\u4f4d\u7f6e\uff0c\u79fb\u52a8\u901f\u5ea6\u8f83\u5927\u65f6\u4f1a\u5207\u6362\u4e3a\u8dd1\u6b65\u52a8\u4f5c\uff0c\u79fb\u52a8\u901f\u5ea6\u8f83\u5c0f\u65f6\u7ef4\u6301\u8d70\u8def\u52a8\u4f5c\u3002</p> <p>Attributes:</p> Name Type Description <code>loc</code> <code>Vector3</code> <p>\u76ee\u6807\u4e16\u754c\u5750\u6807\u4f4d\u7f6e\u3002</p> <code>speed</code> <code>float</code> <p>\u79fb\u52a8\u901f\u5ea6\uff0c\u5355\u4f4d\u4e3a cm/s\uff0c\u82e5\u4e3a 0 \u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u901f\u5ea6\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\locomotion.py</code> <pre><code>@dataclass(slots=True)\nclass MoveToLocation(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u79fb\u52a8\u81f3\u6307\u5b9a\u76ee\u6807\u4f4d\u7f6e\uff0c\u79fb\u52a8\u901f\u5ea6\u8f83\u5927\u65f6\u4f1a\u5207\u6362\u4e3a\u8dd1\u6b65\u52a8\u4f5c\uff0c\u79fb\u52a8\u901f\u5ea6\u8f83\u5c0f\u65f6\u7ef4\u6301\u8d70\u8def\u52a8\u4f5c\u3002\n\n    Attributes:\n        loc (Vector3): \u76ee\u6807\u4e16\u754c\u5750\u6807\u4f4d\u7f6e\u3002\n        speed (float): \u79fb\u52a8\u901f\u5ea6\uff0c\u5355\u4f4d\u4e3a cm/s\uff0c\u82e5\u4e3a 0 \u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u901f\u5ea6\u3002\n    \"\"\"\n\n    loc: Vector3\n    speed: float = 0.0\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.loc, Vector3):\n            raise TypeError(f\"loc must be a Vector3, got {type(self.loc)}\")\n        if not isinstance(self.speed, int | float) or self.speed &lt; 0:\n            raise ValueError(f\"speed must be a non-negative number, got {self.speed}\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(\n            AnimCmd.move_to_location(loc=self.loc, move_speed=self.speed, can_run=False)\n        )\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.MoveToObject","title":"MoveToObject  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u79fb\u52a8\u81f3\u6307\u5b9a\u76ee\u6807\uff0c\u79fb\u52a8\u901f\u5ea6\u8f83\u5927\u65f6\u4f1a\u5207\u6362\u4e3a\u8dd1\u6b65\u52a8\u4f5c\uff0c\u79fb\u52a8\u901f\u5ea6\u8f83\u5c0f\u65f6\u7ef4\u6301\u8d70\u8def\u52a8\u4f5c\u3002</p> <p>Attributes:</p> Name Type Description <code>object_id</code> <code>str</code> <p>\u76ee\u6807\u7684 EntityID\u3002</p> <code>speed</code> <code>float</code> <p>\u79fb\u52a8\u901f\u5ea6\uff0c\u5355\u4f4d\u4e3a cm/s\uff0c\u82e5\u4e3a 0 \u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u901f\u5ea6\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\locomotion.py</code> <pre><code>@dataclass(slots=True)\nclass MoveToObject(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u79fb\u52a8\u81f3\u6307\u5b9a\u76ee\u6807\uff0c\u79fb\u52a8\u901f\u5ea6\u8f83\u5927\u65f6\u4f1a\u5207\u6362\u4e3a\u8dd1\u6b65\u52a8\u4f5c\uff0c\u79fb\u52a8\u901f\u5ea6\u8f83\u5c0f\u65f6\u7ef4\u6301\u8d70\u8def\u52a8\u4f5c\u3002\n\n    Attributes:\n        object_id (str): \u76ee\u6807\u7684 EntityID\u3002\n        speed (float): \u79fb\u52a8\u901f\u5ea6\uff0c\u5355\u4f4d\u4e3a cm/s\uff0c\u82e5\u4e3a 0 \u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u901f\u5ea6\u3002\n    \"\"\"\n\n    object_id: str\n    speed: float = 0.0\n\n    def validate(self) -&gt; None:\n        if not self.object_id:\n            raise ValueError(\"object_id must be specified.\")\n        if not isinstance(self.speed, int | float) or self.speed &lt; 0:\n            raise ValueError(\"speed must be a non-negative number\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(\n            AnimCmd.move_to_object(\n                object_id=self.object_id, move_speed=self.speed, can_run=False\n            )\n        )\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.TurnInDegree","title":"TurnInDegree  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u539f\u5730\u8f6c\u7279\u5b9a\u89d2\u5ea6\u3002</p> <p>Attributes:</p> Name Type Description <code>degree</code> <code>float</code> <p>\u9700\u8981\u539f\u5730\u8f6c\u7684\u89d2\u5ea6\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\locomotion.py</code> <pre><code>@dataclass(slots=True)\nclass TurnInDegree(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u539f\u5730\u8f6c\u7279\u5b9a\u89d2\u5ea6\u3002\n\n    Attributes:\n        degree (float): \u9700\u8981\u539f\u5730\u8f6c\u7684\u89d2\u5ea6\u3002\n    \"\"\"\n\n    degree: float\n\n    def validate(self) -&gt; None:\n        pass\n\n    async def execute(self) -&gt; None:\n        await self.submit(\n            AnimCmd.turn_around_degree(\n                degree=self.degree,\n            )\n        )\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.TurnToComponent","title":"TurnToComponent  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u8f6c\u5411\u81f3\u6307\u5b9a\u76ee\u6807\u7ec4\u4ef6\u3002</p> <p>Attributes:</p> Name Type Description <code>component_id</code> <code>str</code> <p>\u76ee\u6807\u7684 ComponentID\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\locomotion.py</code> <pre><code>@dataclass(slots=True)\nclass TurnToComponent(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u8f6c\u5411\u81f3\u6307\u5b9a\u76ee\u6807\u7ec4\u4ef6\u3002\n\n    Attributes:\n        component_id (str): \u76ee\u6807\u7684 ComponentID\u3002\n    \"\"\"\n\n    component_id: str\n\n    def validate(self) -&gt; None:\n        if not self.component_id:\n            raise ValueError(\"component_id must be specified.\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(\n            AnimCmd.turn_around_to_component(\n                component_id=self.component_id,\n            )\n        )\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.TurnToLocation","title":"TurnToLocation  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u8f6c\u5411\u76ee\u6807\u81f3\u6307\u5b9a\u76ee\u6807\u4f4d\u7f6e\u3002</p> <p>Attributes:</p> Name Type Description <code>loc</code> <code>Vector3</code> <p>\u76ee\u6807\u4e16\u754c\u5750\u6807\u4f4d\u7f6e\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\locomotion.py</code> <pre><code>@dataclass(slots=True)\nclass TurnToLocation(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u8f6c\u5411\u76ee\u6807\u81f3\u6307\u5b9a\u76ee\u6807\u4f4d\u7f6e\u3002\n\n    Attributes:\n        loc (Vector3): \u76ee\u6807\u4e16\u754c\u5750\u6807\u4f4d\u7f6e\u3002\n    \"\"\"\n\n    loc: Vector3\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.loc, Vector3):\n            raise TypeError(f\"loc must be a Vector3, got {type(self.loc)}\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.turn_around_to_location(loc=self.loc))\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.TurnToObject","title":"TurnToObject  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u8f6c\u5411\u76ee\u6807\u81f3\u6307\u5b9a\u76ee\u6807\u3002</p> <p>Attributes:</p> Name Type Description <code>object_id</code> <code>str</code> <p>\u76ee\u6807\u7684 EntityID\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\locomotion.py</code> <pre><code>@dataclass(slots=True)\nclass TurnToObject(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u8f6c\u5411\u76ee\u6807\u81f3\u6307\u5b9a\u76ee\u6807\u3002\n\n    Attributes:\n        object_id (str): \u76ee\u6807\u7684 EntityID\u3002\n    \"\"\"\n\n    object_id: str\n\n    def validate(self) -&gt; None:\n        if not self.object_id:\n            raise ValueError(\"object_id must be specified.\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.turn_around_to_object(object_id=self.object_id))\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.CancelAllActions","title":"CancelAllActions  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c\uff1a\u5f3a\u5236\u53d6\u6d88\u6240\u6709\u52a8\u4f5c\uff0c\u5305\u62ec\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u52a8\u4f5c\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\standard.py</code> <pre><code>@dataclass(slots=True)\nclass CancelAllActions(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c\uff1a\u5f3a\u5236\u53d6\u6d88\u6240\u6709\u52a8\u4f5c\uff0c\u5305\u62ec\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u52a8\u4f5c\u3002\n    \"\"\"\n\n    def validate(self) -&gt; None:\n        pass\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.cancel_all_action())\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.ClimbDown","title":"ClimbDown  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u722c\u4e0b</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\standard.py</code> <pre><code>@dataclass(slots=True)\nclass ClimbDown(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u722c\u4e0b\n    \"\"\"\n\n    def validate(self) -&gt; None:\n        pass\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.climb_down())\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.ClimbObject","title":"ClimbObject  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u722c\u4e0a\u6307\u5b9a\u7269\u4f53\u3002</p> <p>Attributes:</p> Name Type Description <code>object_name</code> <code>str</code> <p>\u76ee\u6807\u7269\u4f53\u540d\u79f0</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\standard.py</code> <pre><code>@dataclass(slots=True)\nclass ClimbObject(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u722c\u4e0a\u6307\u5b9a\u7269\u4f53\u3002\n\n    Attributes:\n        object_name (str): \u76ee\u6807\u7269\u4f53\u540d\u79f0\n    \"\"\"\n\n    object_name: str\n\n    def validate(self) -&gt; None:\n        if not self.object_name:\n            raise ValueError(\"object_name must be provided.\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.climb_object(object_name=self.object_name))\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.CloseDoor","title":"CloseDoor  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u5173\u95e8\u6216\u62bd\u5c49\u3002TongSim\u4e2d, \u95e8\u7ec4\u4ef6 \u6cdb\u6307 \u57fa\u4e8e\u7269\u7406\u7ea6\u675f\u7ed1\u5b9a\u7684\u7ec4\u4ef6\uff0c\u6bd4\u5982\u65cb\u8f6c\u95e8\uff0c\u63a8\u62c9\u95e8\uff0c\u62bd\u5c49\u7b49\u7b49\u3002</p> <p>Attributes:</p> Name Type Description <code>component_id</code> <code>str</code> <p>\u95e8\u7ec4\u4ef6 ID\u3002</p> <code>which_hand</code> <code>AnimCmdHandType</code> <p>\u4f7f\u7528\u54ea\u53ea\u624b</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\standard.py</code> <pre><code>@dataclass(slots=True)\nclass CloseDoor(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u5173\u95e8\u6216\u62bd\u5c49\u3002TongSim\u4e2d, \u95e8\u7ec4\u4ef6 \u6cdb\u6307 \u57fa\u4e8e\u7269\u7406\u7ea6\u675f\u7ed1\u5b9a\u7684\u7ec4\u4ef6\uff0c\u6bd4\u5982\u65cb\u8f6c\u95e8\uff0c\u63a8\u62c9\u95e8\uff0c\u62bd\u5c49\u7b49\u7b49\u3002\n\n    Attributes:\n        component_id (str): \u95e8\u7ec4\u4ef6 ID\u3002\n        which_hand (AnimCmdHandType): \u4f7f\u7528\u54ea\u53ea\u624b\n    \"\"\"\n\n    component_id: str\n    which_hand: AnimCmdHandType\n\n    def validate(self) -&gt; None:\n        if not self.component_id:\n            raise ValueError(\"component_id must be provided.\")\n        if not isinstance(self.which_hand, AnimCmdHandType):\n            raise ValueError(f\"Invalid hand type: {self.which_hand}\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(\n            AnimCmd.move_to_component(component_id=self.component_id, use_socket=True)\n        )\n        await self.submit(\n            AnimCmd.turn_around_to_component(\n                component_id=self.component_id, use_socket=True\n            )\n        )\n        await self.submit(\n            AnimCmd.hand_reach_to_component(\n                which_hand=self.which_hand,\n                component_id=self.component_id,\n                use_socket=True,\n            )\n        )\n        await self.submit(\n            AnimCmd.close_door(\n                component_id=self.component_id, which_hand=self.which_hand\n            )\n        )\n        await self.submit(AnimCmd.hand_back(which_hand=self.which_hand))\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.MopFloor","title":"MopFloor  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c\uff1a\u4f7f\u7528\u62d6\u628a\u6e05\u6d01\u5730\u9762\u3002</p> <p>\u6ce8\u610f\uff1a\u8be5\u52a8\u4f5c\u8981\u6c42 agent \u53f3\u624b\u6301\u6709\u62d6\u628a\u3002</p> <p>Attributes:</p> Name Type Description <code>dirt_id</code> <code>str</code> <p>\u9700\u8981\u6e05\u6d01\u7684\u6c61\u6e0d ID\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\standard.py</code> <pre><code>@dataclass(slots=True)\nclass MopFloor(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c\uff1a\u4f7f\u7528\u62d6\u628a\u6e05\u6d01\u5730\u9762\u3002\n\n    \u6ce8\u610f\uff1a\u8be5\u52a8\u4f5c\u8981\u6c42 agent \u53f3\u624b\u6301\u6709\u62d6\u628a\u3002\n\n    Attributes:\n        dirt_id (str): \u9700\u8981\u6e05\u6d01\u7684\u6c61\u6e0d ID\u3002\n    \"\"\"\n\n    dirt_id: str\n\n    def validate(self) -&gt; None:\n        if not self.dirt_id:\n            raise ValueError(\"dirt_id must be provided.\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.mop_floor(dirt_id=self.dirt_id))\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.OpenDoor","title":"OpenDoor  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u5f00\u95e8\u6216\u62bd\u5c49\u3002TongSim\u4e2d, \u95e8\u7ec4\u4ef6 \u6cdb\u6307 \u57fa\u4e8e\u7269\u7406\u7ea6\u675f\u7ed1\u5b9a\u7684\u7ec4\u4ef6\uff0c\u6bd4\u5982\u65cb\u8f6c\u95e8\uff0c\u63a8\u62c9\u95e8\uff0c\u62bd\u5c49\u7b49\u7b49\u3002</p> <p>Attributes:</p> Name Type Description <code>component_id</code> <code>str</code> <p>\u95e8\u7ec4\u4ef6 ID\u3002</p> <code>which_hand</code> <code>AnimCmdHandType</code> <p>\u4f7f\u7528\u54ea\u53ea\u624b</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\standard.py</code> <pre><code>@dataclass(slots=True)\nclass OpenDoor(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u5f00\u95e8\u6216\u62bd\u5c49\u3002TongSim\u4e2d, \u95e8\u7ec4\u4ef6 \u6cdb\u6307 \u57fa\u4e8e\u7269\u7406\u7ea6\u675f\u7ed1\u5b9a\u7684\u7ec4\u4ef6\uff0c\u6bd4\u5982\u65cb\u8f6c\u95e8\uff0c\u63a8\u62c9\u95e8\uff0c\u62bd\u5c49\u7b49\u7b49\u3002\n\n    Attributes:\n        component_id (str): \u95e8\u7ec4\u4ef6 ID\u3002\n        which_hand (AnimCmdHandType): \u4f7f\u7528\u54ea\u53ea\u624b\n    \"\"\"\n\n    component_id: str\n    which_hand: AnimCmdHandType\n\n    def validate(self) -&gt; None:\n        if not self.component_id:\n            raise ValueError(\"component_id must be provided.\")\n        if not isinstance(self.which_hand, AnimCmdHandType):\n            raise ValueError(f\"Invalid hand type: {self.which_hand}\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(\n            AnimCmd.move_to_component(component_id=self.component_id, use_socket=True)\n        )\n        await self.submit(\n            AnimCmd.turn_around_to_component(\n                component_id=self.component_id, use_socket=True\n            )\n        )\n        await self.submit(\n            AnimCmd.hand_reach_to_component(\n                which_hand=self.which_hand,\n                component_id=self.component_id,\n                use_socket=True,\n            )\n        )\n        await self.submit(\n            AnimCmd.open_door(\n                component_id=self.component_id, which_hand=self.which_hand\n            )\n        )\n        await self.submit(AnimCmd.hand_back(which_hand=self.which_hand))\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.PlayAnimation","title":"PlayAnimation  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u64ad\u653e\u6307\u5b9a\u7684\u52a8\u753b\u5e8f\u5217\u3002</p> <p>Attributes:</p> Name Type Description <code>animation_name</code> <code>str</code> <p>\u52a8\u753b\u5e8f\u5217\u7684\u540d\u79f0\u3002</p> <code>animation_slot</code> <code>str</code> <p>\u52a8\u753b\u69fd\u4f4d\u3002\u5f53\u524d\u652f\u6301\uff1a [PlayAnimSequence(default), UpperBody, LowerBody,Facial]</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\standard.py</code> <pre><code>@dataclass(slots=True)\nclass PlayAnimation(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u64ad\u653e\u6307\u5b9a\u7684\u52a8\u753b\u5e8f\u5217\u3002\n\n    Attributes:\n        animation_name (str): \u52a8\u753b\u5e8f\u5217\u7684\u540d\u79f0\u3002\n        animation_slot (str): \u52a8\u753b\u69fd\u4f4d\u3002\u5f53\u524d\u652f\u6301\uff1a [PlayAnimSequence(default), UpperBody, LowerBody,Facial]\n    \"\"\"\n\n    animation_name: str\n    animation_slot: str = \"PlayAnimSequence\"\n\n    def validate(self) -&gt; None:\n        if not self.animation_name:\n            raise ValueError(\"animation_name must be provided.\")\n        if not self.animation_slot:\n            raise ValueError(\"animation_slot must be provided.\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(\n            AnimCmd.play_animation(\n                animation_to_play=self.animation_name,\n                animation_slot=self.animation_slot,\n            )\n        )\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.PourWater","title":"PourWater  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u5012\u6c34\u3002</p> <p>Attributes:</p> Name Type Description <code>target_id</code> <code>str</code> <p>\u5012\u6c34\u76ee\u6807\u5bf9\u8c61ID\uff08\u676f\u5b50\uff09</p> <code>location</code> <code>Vector3</code> <p>\u5012\u6c34\u7684\u76ee\u6807\u4f4d\u7f6e\uff08\u6bd4\u5982\u676f\u5b50\u4f38\u5230\u54ea\uff09</p> <code>which_hand</code> <code>AnimCmdHandType</code> <p>\u4f7f\u7528\u54ea\u53ea\u624b</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\standard.py</code> <pre><code>@dataclass(slots=True)\nclass PourWater(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u5012\u6c34\u3002\n\n    Attributes:\n        target_id (str): \u5012\u6c34\u76ee\u6807\u5bf9\u8c61ID\uff08\u676f\u5b50\uff09\n        location (Vector3): \u5012\u6c34\u7684\u76ee\u6807\u4f4d\u7f6e\uff08\u6bd4\u5982\u676f\u5b50\u4f38\u5230\u54ea\uff09\n        which_hand (AnimCmdHandType): \u4f7f\u7528\u54ea\u53ea\u624b\n    \"\"\"\n\n    target_id: str\n    location: Vector3\n    which_hand: AnimCmdHandType\n\n    def validate(self) -&gt; None:\n        if not self.target_id:\n            raise ValueError(\"target_id must be provided.\")\n        if not isinstance(self.location, Vector3):\n            raise TypeError(\"location must be a Vector3.\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(\n            AnimCmd.pour_water(\n                target_id=self.target_id,\n                location=self.location,\n                which_hand=self.which_hand,\n            )\n        )\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.ReadBook","title":"ReadBook  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u9605\u8bfb\u4e66\u7c4d\uff0c \u9700\u8981\u624b\u4e0a\u6709\u4e66</p> <p>Attributes:</p> Name Type Description <code>duration</code> <code>int</code> <p>\u9605\u8bfb\u65f6\u95f4\uff08\u79d2\uff09\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\standard.py</code> <pre><code>@dataclass(slots=True)\nclass ReadBook(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u9605\u8bfb\u4e66\u7c4d\uff0c \u9700\u8981\u624b\u4e0a\u6709\u4e66\n\n    Attributes:\n        duration (int): \u9605\u8bfb\u65f6\u95f4\uff08\u79d2\uff09\u3002\n    \"\"\"\n\n    duration: int\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.duration, int) or self.duration &lt;= 0:\n            raise ValueError(\"duration must be a positive integer.\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.read_book(duration=self.duration))\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.SitDownToLocation","title":"SitDownToLocation  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u5750\u4e0b\u5230\u6307\u5b9a\u4f4d\u7f6e\u3002</p> <p>Attributes:</p> Name Type Description <code>location</code> <code>Vector3</code> <p>\u5750\u4e0b\u7684\u4f4d\u7f6e</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\standard.py</code> <pre><code>@dataclass(slots=True)\nclass SitDownToLocation(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u5750\u4e0b\u5230\u6307\u5b9a\u4f4d\u7f6e\u3002\n\n    Attributes:\n        location (Vector3): \u5750\u4e0b\u7684\u4f4d\u7f6e\n    \"\"\"\n\n    location: Vector3\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.location, Vector3):\n            raise TypeError(\"location must be a Vector3.\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.sit_down_to_location(location=self.location))\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.SitDownToObject","title":"SitDownToObject  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u5750\u4e0b\u5230\u6307\u5b9a\u7269\u4f53\u3002</p> <p>Attributes:</p> Name Type Description <code>object_id</code> <code>str</code> <p>\u76ee\u6807\u7269\u4f53 ID</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\standard.py</code> <pre><code>@dataclass(slots=True)\nclass SitDownToObject(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u5750\u4e0b\u5230\u6307\u5b9a\u7269\u4f53\u3002\n\n    Attributes:\n        object_id (str): \u76ee\u6807\u7269\u4f53 ID\n    \"\"\"\n\n    object_id: str\n\n    def validate(self) -&gt; None:\n        if not self.object_id:\n            raise ValueError(\"object_id must be provided.\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.sit_down_to_object(object_id=self.object_id))\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.SleepDown","title":"SleepDown  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u8eba\u4e0b\u7761\u89c9</p> <p>Attributes:</p> Name Type Description <code>object_id</code> <code>str</code> <p>\u7761\u89c9\u76ee\u6807\uff08\u5e8a \u6216\u8005 \u6c99\u53d1\uff09</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\standard.py</code> <pre><code>@dataclass(slots=True)\nclass SleepDown(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u8eba\u4e0b\u7761\u89c9\n\n    Attributes:\n        object_id (str): \u7761\u89c9\u76ee\u6807\uff08\u5e8a \u6216\u8005 \u6c99\u53d1\uff09\n    \"\"\"\n\n    object_id: str\n\n    def validate(self) -&gt; None:\n        if not self.object_id:\n            raise ValueError(\"object_id must be provided.\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.sleep_down(subject=self.object_id))\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.SleepUp","title":"SleepUp  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u8d77\u8eab\uff08\u4ece\u7761\u7720\u72b6\u6001\uff09\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\standard.py</code> <pre><code>@dataclass(slots=True)\nclass SleepUp(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u8d77\u8eab\uff08\u4ece\u7761\u7720\u72b6\u6001\uff09\u3002\n    \"\"\"\n\n    def validate(self) -&gt; None:\n        pass\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.sleep_up())\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.SliceFood","title":"SliceFood  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u5207\u5272\u98df\u7269\u3002</p> <p>Attributes:</p> Name Type Description <code>food_id</code> <code>str</code> <p>\u88ab\u5207\u5272\u7684\u98df\u7269 ID</p> <code>location</code> <code>Vector3</code> <p>\u5207\u5272\u4f4d\u7f6e</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\standard.py</code> <pre><code>@dataclass(slots=True)\nclass SliceFood(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u5207\u5272\u98df\u7269\u3002\n\n    Attributes:\n        food_id (str): \u88ab\u5207\u5272\u7684\u98df\u7269 ID\n        location (Vector3): \u5207\u5272\u4f4d\u7f6e\n    \"\"\"\n\n    food_id: str\n    location: Vector3\n\n    def validate(self) -&gt; None:\n        if not self.food_id:\n            raise ValueError(\"food_id must be provided.\")\n        if not isinstance(self.location, Vector3):\n            raise TypeError(\"location must be a Vector3.\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(\n            AnimCmd.slice_food(food_id=self.food_id, location=self.location)\n        )\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.StandUp","title":"StandUp  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u8d77\u7acb\u3002</p> <p>\u7528\u4e8e\u4ece\u5750\u4e0b\u6216\u8eba\u4e0b\u72b6\u6001\u56de\u5230\u7ad9\u7acb\u72b6\u6001\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\standard.py</code> <pre><code>@dataclass(slots=True)\nclass StandUp(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u8d77\u7acb\u3002\n\n    \u7528\u4e8e\u4ece\u5750\u4e0b\u6216\u8eba\u4e0b\u72b6\u6001\u56de\u5230\u7ad9\u7acb\u72b6\u6001\u3002\n    \"\"\"\n\n    def validate(self) -&gt; None:\n        pass\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.stand_up())\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.Wait","title":"Wait  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u7b49\u5f85\u6307\u5b9a\u65f6\u95f4\u3002\u7528\u4e8e\u52a8\u4f5c\u4e4b\u95f4\u7684\u95f4\u9694\u6216\u5ef6\u8fdf\u5904\u7406\u3002</p> <p>Attributes:</p> Name Type Description <code>time_duration</code> <code>float</code> <p>\u7b49\u5f85\u65f6\u95f4\uff08\u5355\u4f4d: \u79d2\uff09\uff0c\u5fc5\u987b\u4e3a\u975e\u8d1f\u6570\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\standard.py</code> <pre><code>@dataclass(slots=True)\nclass Wait(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u7b49\u5f85\u6307\u5b9a\u65f6\u95f4\u3002\u7528\u4e8e\u52a8\u4f5c\u4e4b\u95f4\u7684\u95f4\u9694\u6216\u5ef6\u8fdf\u5904\u7406\u3002\n\n    Attributes:\n        time_duration (float): \u7b49\u5f85\u65f6\u95f4\uff08\u5355\u4f4d: \u79d2\uff09\uff0c\u5fc5\u987b\u4e3a\u975e\u8d1f\u6570\u3002\n    \"\"\"\n\n    time_duration: float = 0.0\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.time_duration, int | float) or self.time_duration &lt; 0:\n            raise ValueError(\"time_duration must be a non-negative number.\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.wait_for(time_duration=self.time_duration))\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.WashFace","title":"WashFace  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u6d17\u8138\u3002</p> <p>Attributes:</p> Name Type Description <code>faucet_object_id</code> <code>str</code> <p>\u6c34\u9f99\u5934\u5bf9\u8c61\u540d\u79f0</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\standard.py</code> <pre><code>@dataclass(slots=True)\nclass WashFace(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u6d17\u8138\u3002\n\n    Attributes:\n        faucet_object_id (str): \u6c34\u9f99\u5934\u5bf9\u8c61\u540d\u79f0\n    \"\"\"\n\n    faucet_object_id: str\n\n    def validate(self) -&gt; None:\n        if not self.faucet_object_id:\n            raise ValueError(\"faucet_object_id must be provided.\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.wash_face(faucet_object_name=self.faucet_object_id))\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.WashHands","title":"WashHands  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u6d17\u624b\u3002</p> <p>Attributes:</p> Name Type Description <code>faucet_object_id</code> <code>str</code> <p>\u6c34\u9f99\u5934\u5bf9\u8c61\u540d\u79f0</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\standard.py</code> <pre><code>@dataclass(slots=True)\nclass WashHands(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u6d17\u624b\u3002\n\n    Attributes:\n        faucet_object_id (str): \u6c34\u9f99\u5934\u5bf9\u8c61\u540d\u79f0\n    \"\"\"\n\n    faucet_object_id: str\n\n    def validate(self) -&gt; None:\n        if not self.faucet_object_id:\n            raise ValueError(\"faucet_object_id must be provided.\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(AnimCmd.wash_hands(faucet_object_name=self.faucet_object_id))\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.WashObjectInHand","title":"WashObjectInHand  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c: \u6d17\u624b\u4e2d\u7684\u7269\u4f53\u3002</p> <p>Attributes:</p> Name Type Description <code>faucet_object_id</code> <code>str</code> <p>\u6c34\u9f99\u5934\u5bf9\u8c61\u540d\u79f0</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\standard.py</code> <pre><code>@dataclass(slots=True)\nclass WashObjectInHand(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c: \u6d17\u624b\u4e2d\u7684\u7269\u4f53\u3002\n\n    Attributes:\n        faucet_object_id (str): \u6c34\u9f99\u5934\u5bf9\u8c61\u540d\u79f0\n    \"\"\"\n\n    faucet_object_id: str\n\n    def validate(self) -&gt; None:\n        if not self.faucet_object_id:\n            raise ValueError(\"faucet_object_id must be provided.\")\n\n    async def execute(self) -&gt; None:\n        await self.submit(\n            AnimCmd.wash_object_in_hand(faucet_object_name=self.faucet_object_id)\n        )\n</code></pre>"},{"location":"api/action_impl/#tongsim.entity.action.WipeQuad","title":"WipeQuad  <code>dataclass</code>","text":"<p>               Bases: <code>ActionBase</code></p> <p>\u52a8\u4f5c\uff1a\u64e6\u62ed\u4e00\u4e2a\u77e9\u5f62\u533a\u57df\u3002</p> <p>\u6ce8\u610f\uff1a\u8be5\u52a8\u4f5c\u60f3\u8981\u6210\u529f\u64e6\u9664\uff0c\u8981\u6c42 agent \u624b\u4e0a\u6709\u62b9\u5e03\u7b49\u7269\u4f53\u3002</p> <p>Attributes:</p> Name Type Description <code>which_hand</code> <code>AnimCmdHandType</code> <p>\u4f7f\u7528\u7684\u624b\uff08\u5de6\u624b\u6216\u53f3\u624b\uff09\u3002</p> <code>dirt_location</code> <code>Vector3</code> <p>\u77e9\u5f62\u533a\u57df\u7684\u4e2d\u5fc3\u4f4d\u7f6e\u3002</p> <code>quad_extent</code> <code>float</code> <p>\u534a\u8fb9\u957f(\u5355\u4f4d: cm), \u51b3\u5b9a\u77e9\u5f62\u7684\u5927\u5c0f\u3002</p> Source code in <code>src\\tongsim\\entity\\action\\impl\\standard.py</code> <pre><code>@dataclass(slots=True)\nclass WipeQuad(ActionBase):\n    \"\"\"\n    \u52a8\u4f5c\uff1a\u64e6\u62ed\u4e00\u4e2a\u77e9\u5f62\u533a\u57df\u3002\n\n    \u6ce8\u610f\uff1a\u8be5\u52a8\u4f5c\u60f3\u8981\u6210\u529f\u64e6\u9664\uff0c\u8981\u6c42 agent \u624b\u4e0a\u6709\u62b9\u5e03\u7b49\u7269\u4f53\u3002\n\n    Attributes:\n        which_hand (AnimCmdHandType): \u4f7f\u7528\u7684\u624b\uff08\u5de6\u624b\u6216\u53f3\u624b\uff09\u3002\n        dirt_location (Vector3): \u77e9\u5f62\u533a\u57df\u7684\u4e2d\u5fc3\u4f4d\u7f6e\u3002\n        quad_extent (float): \u534a\u8fb9\u957f(\u5355\u4f4d: cm), \u51b3\u5b9a\u77e9\u5f62\u7684\u5927\u5c0f\u3002\n    \"\"\"\n\n    which_hand: AnimCmdHandType\n    dirt_location: Vector3\n    quad_extent: float = 5.0\n\n    def validate(self) -&gt; None:\n        if not isinstance(self.dirt_location, Vector3):\n            raise ValueError(\"dirt_location must be a Vector3.\")\n        if not isinstance(self.quad_extent, int | float) or self.quad_extent &lt;= 0:\n            raise ValueError(\"quad_extent must be a positive number.\")\n        if not isinstance(self.which_hand, AnimCmdHandType):\n            raise ValueError(\"which_hand must be a valid AnimCmdHandType.\")\n\n    async def execute(self) -&gt; None:\n        x, y, z = self.dirt_location.x, self.dirt_location.y, self.dirt_location.z\n        e = self.quad_extent\n\n        wipe_point1 = Vector3(x - e, y + e, z)\n        wipe_point2 = Vector3(x + e, y + e, z)\n        wipe_point3 = Vector3(x - e, y - e, z)\n        wipe_point4 = Vector3(x + e, y - e, z)\n\n        await self.submit(\n            AnimCmd.wipe_quadrilateral(\n                which_hand=self.which_hand,\n                conner1=wipe_point1,\n                conner2=wipe_point2,\n                conner3=wipe_point3,\n                conner4=wipe_point4,\n            )\n        )\n</code></pre>"},{"location":"api/core_world_context/","title":"\ud83e\udde0 WorldContext","text":""},{"location":"api/core_world_context/#tongsim.core.async_loop","title":"tongsim.core.async_loop","text":"<p>core.async_loop</p> <p>\u672c\u6a21\u5757\u5b9a\u4e49\u4e86 AsyncLoop \u7c7b\uff0c\u6bcf\u4e2a AsyncLoop \u5bf9\u8c61\u5c01\u88c5\u4e00\u4e2a\u72ec\u7acb\u7ebf\u7a0b\u4e2d\u7684 asyncio \u4e8b\u4ef6\u5faa\u73af, \u7528\u4e8e\u5c06\u5f02\u6b65\u4efb\u52a1\u5c01\u88c5\u5728\u5355\u4e2a\u7ebf\u7a0b\u5185\u8fd0\u884c\u3002</p> <p>\u6838\u5fc3: 1\u3001\u5c06\u4e00\u4e2a\u865a\u62df\u73af\u5883\u8f93\u5165\uff08\u57fa\u4e8eConnection\uff09 \u76f8\u5173\u7684\u6240\u6709\u534f\u7a0b\u6d3e\u53d1\u5230\u540c\u4e00\u4e2a\u7ebf\u7a0b\uff08AsyncLoop \u7ef4\u62a4\uff09\u4e0a\u6765\u964d\u4f4e\u5e76\u53d1\u5b89\u5168\u7684\u95ee\u9898     \uff08\u6ce8\u610f: \u5728\u4e00\u4e2aLoop\u5185\u7684\u534f\u7a0b \u4ecd\u7136\u53ef\u80fd\u5b58\u5728\u5e76\u53d1\u5b89\u5168\u95ee\u9898\uff09 2\u3001\u6027\u80fd\u51fa\u73b0\u74f6\u9888\u65f6\uff0c\u8003\u8651\u628a\u8ba1\u7b97\u5bc6\u96c6\u6027\u7684\u5904\u7406\u903b\u8f91 offload \u5230\u4e13\u7528\u7684\u8ba1\u7b97\u7ebf\u7a0b\u6c60\u6765\u89e3\u51b3\u3002</p>"},{"location":"api/core_world_context/#tongsim.core.async_loop.AsyncLoop","title":"AsyncLoop","text":"<p>AsyncLoop \u7ba1\u7406\u4e00\u4e2a\u72ec\u7acb\u7ebf\u7a0b\u4e2d\u7684 asyncio \u4e8b\u4ef6\u5faa\u73af\u548c\u6c38\u4e45 TaskGroup\u3002</p> <p>\u7279\u6027: - \u72ec\u7acb\u540e\u53f0\u7ebf\u7a0b\uff0c\u5e38\u9a7b EventLoop - \u57fa\u4e8e asyncio.TaskGroup \u7ba1\u7406\u6240\u6709\u4e1a\u52a1\u4efb\u52a1</p> Source code in <code>src\\tongsim\\core\\async_loop.py</code> <pre><code>class AsyncLoop:\n    \"\"\"\n    AsyncLoop \u7ba1\u7406\u4e00\u4e2a\u72ec\u7acb\u7ebf\u7a0b\u4e2d\u7684 asyncio \u4e8b\u4ef6\u5faa\u73af\u548c\u6c38\u4e45 TaskGroup\u3002\n\n    \u7279\u6027:\n    - \u72ec\u7acb\u540e\u53f0\u7ebf\u7a0b\uff0c\u5e38\u9a7b EventLoop\n    - \u57fa\u4e8e asyncio.TaskGroup \u7ba1\u7406\u6240\u6709\u4e1a\u52a1\u4efb\u52a1\n    \"\"\"\n\n    def __init__(self, name: str = \"AsyncLoop\") -&gt; None:\n        \"\"\"\n        \u521d\u59cb\u5316 AsyncLoop\u3002\n\n        Args:\n            name: \u7ebf\u7a0b\u548c\u65e5\u5fd7\u6807\u8bc6\u540d\uff0c\u4fbf\u4e8e\u8c03\u8bd5\u591a\u4e2a Loop \u5b9e\u4f8b\u3002\n        \"\"\"\n        self._name = name\n        self._loop: asyncio.AbstractEventLoop | None = None\n        self._thread: threading.Thread | None = None\n        self._group_ready = threading.Event()\n        self._main_task: asyncio.Task[Any] | None = None\n        self._task_group: asyncio.TaskGroup | None = None\n        self._business_tasks: set[asyncio.Task[Any]] = (\n            set()\n        )  # \u8bb0\u5f55\u4e1a\u52a1 spawn \u51fa\u6765\u7684 task\n\n    @property\n    def thread(self) -&gt; threading.Thread:\n        return self._thread\n\n    @property\n    def loop(self) -&gt; asyncio.AbstractEventLoop:\n        return self._loop\n\n    @property\n    def name(self) -&gt; str:\n        return self._name\n\n    def start(self, timeout: float = 1.0) -&gt; None:\n        \"\"\"\n        \u542f\u52a8 AsyncLoop \u540e\u53f0\u7ebf\u7a0b\u548c\u4e8b\u4ef6\u5faa\u73af\u3002\n\n        Args:\n            timeout: \u7b49\u5f85 loop \u548c task group \u542f\u52a8\u7684\u6700\u957f\u79d2\u6570\u3002\n        Raises:\n            RuntimeError: \u5982\u679c loop \u672a\u80fd\u5728\u6307\u5b9a\u65f6\u95f4\u5185\u542f\u52a8\u3002\n        \"\"\"\n        if self.is_running():\n            raise RuntimeError(f\"[AsyncLoop {self._name}] already running.\")\n\n        self._thread = threading.Thread(target=self._run, name=self._name, daemon=True)\n        self._thread.start()\n\n        if not self._group_ready.wait(timeout):\n            raise RuntimeError(f\"[AsyncLoop {self._name}] timeout starting event loop.\")\n\n        _logger.debug(f\"[AsyncLoop {self._name}] started.\")\n\n    def _run(self) -&gt; None:\n        \"\"\"\u540e\u53f0\u7ebf\u7a0b\u5165\u53e3: \u521d\u59cb\u5316\u4e8b\u4ef6\u5faa\u73af\u548c\u4e3b\u4efb\u52a1\u3002\"\"\"\n        self._loop = asyncio.new_event_loop()\n        asyncio.set_event_loop(self._loop)  # \u5c06\u4e8b\u4ef6\u5faa\u73af\u7ed1\u5b9a\u5230\u5f53\u524d\u7ebf\u7a0b\n        self._main_task = self._loop.create_task(self._main(), name=\"__main_task__\")\n        try:\n            self._loop.run_forever()\n        finally:\n            self._loop.close()\n            _logger.debug(f\"[AsyncLoop {self._name}] loop closed.\")\n\n    async def _main(self) -&gt; None:\n        \"\"\"\n        \u4e3b\u534f\u7a0b\uff0c\u5728 TaskGroup \u4e0a\u4e0b\u6587\u4e2d\u6302\u8d77\uff0c\u76f4\u81f3\u88ab\u53d6\u6d88\u3002\n        \"\"\"\n        try:\n            async with asyncio.TaskGroup() as tg:\n                self._task_group = tg\n                self._group_ready.set()\n                await asyncio.Future()  # \u6c38\u4e45\u6302\u8d77\uff0c\u9760 cancel \u63a8\u51fa\n        except asyncio.CancelledError:\n            _logger.debug(\n                f\"[AsyncLoop {self._name}] main task cancelled; shutting down TaskGroup.\"\n            )\n        finally:\n            assert self._loop is not None\n            self._loop.call_soon_threadsafe(self._loop.stop)\n\n    def spawn(self, coro: Awaitable[Any], name: str = \"\") -&gt; Future[Any]:\n        \"\"\"\n        \u5728 TaskGroup \u4e2d\u63d0\u4ea4\u4e00\u4e2a\u65b0\u7684\u5f02\u6b65\u4efb\u52a1\u3002\n\n        Args:\n            coro: \u5f85\u6267\u884c\u7684 coroutine\u3002\n            name: \u53ef\u9009\uff0c\u4efb\u52a1\u540d\u79f0\uff0c\u7528\u4e8e\u65e5\u5fd7\u8ffd\u8e2a\u3002\n\n        Returns:\n            Future\uff0c\u53ef\u901a\u8fc7 .result(timeout) \u83b7\u53d6 coroutine \u8fd4\u56de\u503c\u6216\u5f02\u5e38\u3002\n        \"\"\"\n        if not (self._loop and self._task_group):\n            raise RuntimeError(f\"[AsyncLoop {self._name}] not started.\")\n\n        outer: Future[Any] = Future()\n\n        def _schedule() -&gt; None:\n            task: asyncio.Task[Any] = self._task_group.create_task(coro, name=name)\n            self._business_tasks.add(task)\n\n            def _on_done(t: asyncio.Task[Any]) -&gt; None:\n                self._business_tasks.discard(t)\n                if t.cancelled():\n                    outer.cancel()\n                else:\n                    exc = t.exception()\n                    if exc:\n                        _logger.exception(\n                            f\"[AsyncLoop {self._name}] Task {name!r} raised: {exc}\"\n                        )\n                        outer.set_exception(exc)\n                        # \u4e1a\u52a1\u5f02\u5e38\u76f4\u63a5\u53d6\u6d88\u6574\u4e2a\u4e3b TaskGroup\n                        assert self._main_task is not None\n                        self._main_task.cancel()\n                    else:\n                        outer.set_result(t.result())\n\n            task.add_done_callback(_on_done)\n\n        self._loop.call_soon_threadsafe(_schedule)\n        return outer\n\n    def cancel_tasks(self, timeout: float) -&gt; None:\n        \"\"\"\n        \u53d6\u6d88\u6240\u6709\u4e1a\u52a1\u534f\u7a0b\u4efb\u52a1\uff08spawn \u51fa\u6765\u7684 task\uff0c\u4e0d\u5305\u62ec\u4e3b\u534f\u7a0b\uff09\u3002\n\n        Args:\n            timeout: \u6700\u957f\u7b49\u5f85\u53d6\u6d88\u5b8c\u6210\u7684\u79d2\u6570\u3002\n        \"\"\"\n        if not self.is_running():\n            return\n\n        future = asyncio.run_coroutine_threadsafe(self._cancel_tasks_seq(), self._loop)\n        try:\n            future.result(timeout)\n        except FutureTimeoutError:\n            _logger.warning(f\"[AsyncLoop {self._name}] cancel_tasks timeout.\")\n\n    async def _cancel_tasks_seq(self) -&gt; None:\n        \"\"\"\n        \u5728 loop \u7ebf\u7a0b\u4e2d\u53d6\u6d88\u6240\u6709\u5df2 spawn \u7684\u4e1a\u52a1\u4efb\u52a1\u3002\n        \"\"\"\n        _logger.debug(\n            f\"[AsyncLoop {self._name}] cancelling {len(self._business_tasks)} business task(s).\"\n        )\n        if not self._business_tasks:\n            return\n\n        tasks = list(self._business_tasks)\n        for task in tasks:\n            task.cancel()\n\n        await asyncio.gather(*tasks, return_exceptions=True)\n        self._business_tasks.clear()\n\n    def stop(self, timeout: float = 5.0) -&gt; None:\n        \"\"\"\n        \u5b8c\u5168\u505c\u6b62 AsyncLoop:\n        \u53d6\u6d88\u6240\u6709\u4e1a\u52a1\u4efb\u52a1 -&gt; \u53d6\u6d88\u4e3b task -&gt; \u505c\u6b62 loop -&gt; join \u7ebf\u7a0b\u3002\n\n        Args:\n            timeout: \u7b49\u5f85\u6574\u4e2a\u5173\u95ed\u8fc7\u7a0b\u7684\u6700\u957f\u79d2\u6570\u3002\n        \"\"\"\n        if not self.is_running():\n            return\n\n        # \u53d6\u6d88\u4e3b\u534f\u7a0b\uff0cTaskGroup \u4f1a\u81ea\u52a8\u53d6\u6d88\u6240\u6709\u5b50\u4efb\u52a1\n        assert self._main_task is not None and self._loop is not None\n        self._loop.call_soon_threadsafe(self._main_task.cancel)\n\n        self._thread.join(timeout)\n        if self._thread.is_alive():\n            _logger.warning(f\"AsyncLoop '{self._name}' did not exit cleanly.\")\n        self._thread = None\n\n    def is_running(self) -&gt; bool:\n        \"\"\"\n        \u5224\u65ad AsyncLoop \u662f\u5426\u4ecd\u5728\u8fd0\u884c\u3002\n\n        Returns:\n            True if loop thread alive, else False.\n        \"\"\"\n        return bool(self._thread and self._thread.is_alive())\n\n    def log_task_list(self) -&gt; None:\n        \"\"\"\n        \u6253\u5370\u5f53\u524d loop \u5185\u6240\u6709\u672a\u5b8c\u6210\u7684\u4efb\u52a1\u4fe1\u606f\uff0c\u4fbf\u4e8e\u8c03\u8bd5\u3002\n        \"\"\"\n        if not (self._loop and self._task_group):\n            return\n        task_list = asyncio.all_tasks(self._loop)\n        _logger.warning(f\"[AsyncLoop {self._name}] {len(task_list)} active task(s):\")\n        for task in task_list:\n            state = (\n                \"cancelled\"\n                if task.cancelled()\n                else \"done\" if task.done() else \"pending\"\n            )\n            detail = \"\"\n            if task.done() and (exc := task.exception()):\n                detail = f\"  exception: {type(exc).__name__}: {exc}\"\n            coro = task.get_coro()\n            _logger.warning(\n                f\"  - {task.get_name()} [{state}]{detail} | coro={coro.__name__ if hasattr(coro, '__name__') else coro}\"\n            )\n\n    def __del__(self) -&gt; None:\n        \"\"\"\u6790\u6784\u65f6\u81ea\u52a8\u91ca\u653e\u8d44\u6e90\u3002\"\"\"\n        _logger.debug(f\"[AsyncLoop {self._name}] __del__ called, attempting cleanup.\")\n        with contextlib.suppress(Exception):\n            self.stop()\n</code></pre>"},{"location":"api/core_world_context/#tongsim.core.async_loop.AsyncLoop.start","title":"start","text":"<pre><code>start(timeout: float = 1.0) -&gt; None\n</code></pre> <p>\u542f\u52a8 AsyncLoop \u540e\u53f0\u7ebf\u7a0b\u548c\u4e8b\u4ef6\u5faa\u73af\u3002</p> <p>Parameters:</p> Name Type Description Default <code>timeout</code> <code>float</code> <p>\u7b49\u5f85 loop \u548c task group \u542f\u52a8\u7684\u6700\u957f\u79d2\u6570\u3002</p> <code>1.0</code> <p>Raises:     RuntimeError: \u5982\u679c loop \u672a\u80fd\u5728\u6307\u5b9a\u65f6\u95f4\u5185\u542f\u52a8\u3002</p> Source code in <code>src\\tongsim\\core\\async_loop.py</code> <pre><code>def start(self, timeout: float = 1.0) -&gt; None:\n    \"\"\"\n    \u542f\u52a8 AsyncLoop \u540e\u53f0\u7ebf\u7a0b\u548c\u4e8b\u4ef6\u5faa\u73af\u3002\n\n    Args:\n        timeout: \u7b49\u5f85 loop \u548c task group \u542f\u52a8\u7684\u6700\u957f\u79d2\u6570\u3002\n    Raises:\n        RuntimeError: \u5982\u679c loop \u672a\u80fd\u5728\u6307\u5b9a\u65f6\u95f4\u5185\u542f\u52a8\u3002\n    \"\"\"\n    if self.is_running():\n        raise RuntimeError(f\"[AsyncLoop {self._name}] already running.\")\n\n    self._thread = threading.Thread(target=self._run, name=self._name, daemon=True)\n    self._thread.start()\n\n    if not self._group_ready.wait(timeout):\n        raise RuntimeError(f\"[AsyncLoop {self._name}] timeout starting event loop.\")\n\n    _logger.debug(f\"[AsyncLoop {self._name}] started.\")\n</code></pre>"},{"location":"api/core_world_context/#tongsim.core.async_loop.AsyncLoop.spawn","title":"spawn","text":"<pre><code>spawn(coro: Awaitable[Any], name: str = '') -&gt; Future[Any]\n</code></pre> <p>\u5728 TaskGroup \u4e2d\u63d0\u4ea4\u4e00\u4e2a\u65b0\u7684\u5f02\u6b65\u4efb\u52a1\u3002</p> <p>Parameters:</p> Name Type Description Default <code>coro</code> <code>Awaitable[Any]</code> <p>\u5f85\u6267\u884c\u7684 coroutine\u3002</p> required <code>name</code> <code>str</code> <p>\u53ef\u9009\uff0c\u4efb\u52a1\u540d\u79f0\uff0c\u7528\u4e8e\u65e5\u5fd7\u8ffd\u8e2a\u3002</p> <code>''</code> <p>Returns:</p> Type Description <code>Future[Any]</code> <p>Future\uff0c\u53ef\u901a\u8fc7 .result(timeout) \u83b7\u53d6 coroutine \u8fd4\u56de\u503c\u6216\u5f02\u5e38\u3002</p> Source code in <code>src\\tongsim\\core\\async_loop.py</code> <pre><code>def spawn(self, coro: Awaitable[Any], name: str = \"\") -&gt; Future[Any]:\n    \"\"\"\n    \u5728 TaskGroup \u4e2d\u63d0\u4ea4\u4e00\u4e2a\u65b0\u7684\u5f02\u6b65\u4efb\u52a1\u3002\n\n    Args:\n        coro: \u5f85\u6267\u884c\u7684 coroutine\u3002\n        name: \u53ef\u9009\uff0c\u4efb\u52a1\u540d\u79f0\uff0c\u7528\u4e8e\u65e5\u5fd7\u8ffd\u8e2a\u3002\n\n    Returns:\n        Future\uff0c\u53ef\u901a\u8fc7 .result(timeout) \u83b7\u53d6 coroutine \u8fd4\u56de\u503c\u6216\u5f02\u5e38\u3002\n    \"\"\"\n    if not (self._loop and self._task_group):\n        raise RuntimeError(f\"[AsyncLoop {self._name}] not started.\")\n\n    outer: Future[Any] = Future()\n\n    def _schedule() -&gt; None:\n        task: asyncio.Task[Any] = self._task_group.create_task(coro, name=name)\n        self._business_tasks.add(task)\n\n        def _on_done(t: asyncio.Task[Any]) -&gt; None:\n            self._business_tasks.discard(t)\n            if t.cancelled():\n                outer.cancel()\n            else:\n                exc = t.exception()\n                if exc:\n                    _logger.exception(\n                        f\"[AsyncLoop {self._name}] Task {name!r} raised: {exc}\"\n                    )\n                    outer.set_exception(exc)\n                    # \u4e1a\u52a1\u5f02\u5e38\u76f4\u63a5\u53d6\u6d88\u6574\u4e2a\u4e3b TaskGroup\n                    assert self._main_task is not None\n                    self._main_task.cancel()\n                else:\n                    outer.set_result(t.result())\n\n        task.add_done_callback(_on_done)\n\n    self._loop.call_soon_threadsafe(_schedule)\n    return outer\n</code></pre>"},{"location":"api/core_world_context/#tongsim.core.async_loop.AsyncLoop.cancel_tasks","title":"cancel_tasks","text":"<pre><code>cancel_tasks(timeout: float) -&gt; None\n</code></pre> <p>\u53d6\u6d88\u6240\u6709\u4e1a\u52a1\u534f\u7a0b\u4efb\u52a1\uff08spawn \u51fa\u6765\u7684 task\uff0c\u4e0d\u5305\u62ec\u4e3b\u534f\u7a0b\uff09\u3002</p> <p>Parameters:</p> Name Type Description Default <code>timeout</code> <code>float</code> <p>\u6700\u957f\u7b49\u5f85\u53d6\u6d88\u5b8c\u6210\u7684\u79d2\u6570\u3002</p> required Source code in <code>src\\tongsim\\core\\async_loop.py</code> <pre><code>def cancel_tasks(self, timeout: float) -&gt; None:\n    \"\"\"\n    \u53d6\u6d88\u6240\u6709\u4e1a\u52a1\u534f\u7a0b\u4efb\u52a1\uff08spawn \u51fa\u6765\u7684 task\uff0c\u4e0d\u5305\u62ec\u4e3b\u534f\u7a0b\uff09\u3002\n\n    Args:\n        timeout: \u6700\u957f\u7b49\u5f85\u53d6\u6d88\u5b8c\u6210\u7684\u79d2\u6570\u3002\n    \"\"\"\n    if not self.is_running():\n        return\n\n    future = asyncio.run_coroutine_threadsafe(self._cancel_tasks_seq(), self._loop)\n    try:\n        future.result(timeout)\n    except FutureTimeoutError:\n        _logger.warning(f\"[AsyncLoop {self._name}] cancel_tasks timeout.\")\n</code></pre>"},{"location":"api/core_world_context/#tongsim.core.async_loop.AsyncLoop.stop","title":"stop","text":"<pre><code>stop(timeout: float = 5.0) -&gt; None\n</code></pre> <p>\u5b8c\u5168\u505c\u6b62 AsyncLoop: \u53d6\u6d88\u6240\u6709\u4e1a\u52a1\u4efb\u52a1 -&gt; \u53d6\u6d88\u4e3b task -&gt; \u505c\u6b62 loop -&gt; join \u7ebf\u7a0b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>timeout</code> <code>float</code> <p>\u7b49\u5f85\u6574\u4e2a\u5173\u95ed\u8fc7\u7a0b\u7684\u6700\u957f\u79d2\u6570\u3002</p> <code>5.0</code> Source code in <code>src\\tongsim\\core\\async_loop.py</code> <pre><code>def stop(self, timeout: float = 5.0) -&gt; None:\n    \"\"\"\n    \u5b8c\u5168\u505c\u6b62 AsyncLoop:\n    \u53d6\u6d88\u6240\u6709\u4e1a\u52a1\u4efb\u52a1 -&gt; \u53d6\u6d88\u4e3b task -&gt; \u505c\u6b62 loop -&gt; join \u7ebf\u7a0b\u3002\n\n    Args:\n        timeout: \u7b49\u5f85\u6574\u4e2a\u5173\u95ed\u8fc7\u7a0b\u7684\u6700\u957f\u79d2\u6570\u3002\n    \"\"\"\n    if not self.is_running():\n        return\n\n    # \u53d6\u6d88\u4e3b\u534f\u7a0b\uff0cTaskGroup \u4f1a\u81ea\u52a8\u53d6\u6d88\u6240\u6709\u5b50\u4efb\u52a1\n    assert self._main_task is not None and self._loop is not None\n    self._loop.call_soon_threadsafe(self._main_task.cancel)\n\n    self._thread.join(timeout)\n    if self._thread.is_alive():\n        _logger.warning(f\"AsyncLoop '{self._name}' did not exit cleanly.\")\n    self._thread = None\n</code></pre>"},{"location":"api/core_world_context/#tongsim.core.async_loop.AsyncLoop.is_running","title":"is_running","text":"<pre><code>is_running() -&gt; bool\n</code></pre> <p>\u5224\u65ad AsyncLoop \u662f\u5426\u4ecd\u5728\u8fd0\u884c\u3002</p> <p>Returns:</p> Type Description <code>bool</code> <p>True if loop thread alive, else False.</p> Source code in <code>src\\tongsim\\core\\async_loop.py</code> <pre><code>def is_running(self) -&gt; bool:\n    \"\"\"\n    \u5224\u65ad AsyncLoop \u662f\u5426\u4ecd\u5728\u8fd0\u884c\u3002\n\n    Returns:\n        True if loop thread alive, else False.\n    \"\"\"\n    return bool(self._thread and self._thread.is_alive())\n</code></pre>"},{"location":"api/core_world_context/#tongsim.core.async_loop.AsyncLoop.log_task_list","title":"log_task_list","text":"<pre><code>log_task_list() -&gt; None\n</code></pre> <p>\u6253\u5370\u5f53\u524d loop \u5185\u6240\u6709\u672a\u5b8c\u6210\u7684\u4efb\u52a1\u4fe1\u606f\uff0c\u4fbf\u4e8e\u8c03\u8bd5\u3002</p> Source code in <code>src\\tongsim\\core\\async_loop.py</code> <pre><code>def log_task_list(self) -&gt; None:\n    \"\"\"\n    \u6253\u5370\u5f53\u524d loop \u5185\u6240\u6709\u672a\u5b8c\u6210\u7684\u4efb\u52a1\u4fe1\u606f\uff0c\u4fbf\u4e8e\u8c03\u8bd5\u3002\n    \"\"\"\n    if not (self._loop and self._task_group):\n        return\n    task_list = asyncio.all_tasks(self._loop)\n    _logger.warning(f\"[AsyncLoop {self._name}] {len(task_list)} active task(s):\")\n    for task in task_list:\n        state = (\n            \"cancelled\"\n            if task.cancelled()\n            else \"done\" if task.done() else \"pending\"\n        )\n        detail = \"\"\n        if task.done() and (exc := task.exception()):\n            detail = f\"  exception: {type(exc).__name__}: {exc}\"\n        coro = task.get_coro()\n        _logger.warning(\n            f\"  - {task.get_name()} [{state}]{detail} | coro={coro.__name__ if hasattr(coro, '__name__') else coro}\"\n        )\n</code></pre>"},{"location":"api/core_world_context/#tongsim.core.world_context","title":"tongsim.core.world_context","text":"<p>core.world_context</p> <p>\u5b9a\u4e49 WorldContext: \u7ba1\u7406\u4e0e\u5355\u4e2a TongSim \u5b9e\u4f8b\u7ed1\u5b9a\u7684\u5e95\u5c42\u8d44\u6e90\uff0c \u5305\u62ec\u5f02\u6b65\u4e8b\u4ef6\u5faa\u73af\u3001gRPC \u901a\u4fe1\u7b49\u3002</p>"},{"location":"api/core_world_context/#tongsim.core.world_context.WorldContext","title":"WorldContext","text":"<p>WorldContext \u96c6\u4e2d\u7ba1\u7406 TongSim \u8fd0\u884c\u65f6\u4e0a\u4e0b\u6587\u8d44\u6e90</p> <p>\u7edf\u4e00\u7ba1\u7406: - \u5f02\u6b65\u4e8b\u4ef6\u4e3b\u5faa\u73af\uff08AsyncLoop\uff09 - gRPC \u8fde\u63a5\uff08GrpcConnection\u3001LegacyGrpcStreamClient\uff09</p> \u6ce8\u610f <ul> <li>\u6790\u6784\u65f6\u81ea\u52a8\u5173\u95ed\u6240\u6709\u8d44\u6e90\u3002</li> </ul> Source code in <code>src\\tongsim\\core\\world_context.py</code> <pre><code>class WorldContext:\n    \"\"\"\n    WorldContext \u96c6\u4e2d\u7ba1\u7406 TongSim \u8fd0\u884c\u65f6\u4e0a\u4e0b\u6587\u8d44\u6e90\n\n    \u7edf\u4e00\u7ba1\u7406:\n    - \u5f02\u6b65\u4e8b\u4ef6\u4e3b\u5faa\u73af\uff08AsyncLoop\uff09\n    - gRPC \u8fde\u63a5\uff08GrpcConnection\u3001LegacyGrpcStreamClient\uff09\n\n    \u6ce8\u610f:\n        - \u6790\u6784\u65f6\u81ea\u52a8\u5173\u95ed\u6240\u6709\u8d44\u6e90\u3002\n    \"\"\"\n\n    def __init__(self, grpc_endpoint: str, legacy_grpc_endpoint: str):\n        self._uuid: Final[uuid.UUID] = uuid.uuid4()\n        self._loop: Final[AsyncLoop] = AsyncLoop(name=f\"world-main-loop-{self._uuid}\")\n        self._loop.start()\n\n        self._conn: Final[GrpcConnection]\n        self._conn_legacy: Final[GrpcLegacyConnection]\n        self._legacy_stream_client: Final[LegacyStreamClient]\n\n        # gRPC \u4f1a\u68c0\u67e5 task \u7684 loop \u4e00\u81f4\u6027, \u6b64\u5904\u4fdd\u8bc1 gRPC stub \u7684\u521d\u59cb\u5316\u90fd\u5728 AsyncLoop \u4e0b:\n        self.sync_run(self._async_init_grpc(grpc_endpoint, legacy_grpc_endpoint))\n\n        _logger.debug(f\"[WorldContext {self._uuid}] started.\")\n        self._is_shutdown: bool = False\n\n    # TODO: classmethod\n    async def _async_init_grpc(self, grpc_endpoint: str, legacy_grpc_endpoint: str):\n        self._conn = GrpcConnection(grpc_endpoint)\n        self._conn_legacy = GrpcLegacyConnection(legacy_grpc_endpoint)\n        self._legacy_stream_client = LegacyStreamClient(self._conn_legacy, self._loop)\n        await self._legacy_stream_client.start()\n\n    @property\n    def uuid(self) -&gt; str:\n        \"\"\"\u5f53\u524d World \u5b9e\u4f8b\u7684\u552f\u4e00\u6807\u8bc6\u7b26\u7684\u524d\u516b\u4f4d\u5b57\u7b26\"\"\"\n        return str(self._uuid)[:8]\n\n    @property\n    def loop(self) -&gt; AsyncLoop:\n        \"\"\"\u4e3b\u4e8b\u4ef6\u5faa\u73af\"\"\"\n        return self._loop\n\n    @property\n    def conn(self) -&gt; GrpcConnection:\n        \"\"\"gRPC \u8fde\u63a5\"\"\"\n        return self._conn\n\n    @property\n    def conn_legacy(self) -&gt; GrpcLegacyConnection:\n        \"\"\"\u5f03\u7528\u7684 gRPC \u8fde\u63a5\"\"\"\n        return self._conn_legacy\n\n    @property\n    def legacy_stream_client(self) -&gt; LegacyStreamClient:\n        \"\"\"\u5f03\u7528\u7684 gRPC \u53cc\u5411\u6d41\u5ba2\u6237\u7aef\"\"\"\n        # if self._legacy_stream_client is None:\n        #     with self._legacy_stream_client_lock:\n        #         if self._legacy_stream_client is None:\n        #             self._legacy_stream_client = LegacyStreamClient(\n        #                 self._conn_legacy, self._loop\n        #             )\n        #             self.sync_run(self._legacy_stream_client.start())\n        return self._legacy_stream_client\n\n    def sync_run(self, coro: Awaitable, timeout: float | None = None) -&gt; Any:\n        \"\"\"\n        \u5728\u4e8b\u4ef6\u5faa\u73af\u4e2d\u540c\u6b65\u8fd0\u884c\u5f02\u6b65\u4efb\u52a1\uff0c\u5e76\u963b\u585e\u76f4\u5230\u4efb\u52a1\u5b8c\u6210\u3002\n\n        Args:\n            coro (Awaitable): \u8981\u6267\u884c\u7684\u5f02\u6b65\u534f\u7a0b\u3002\n            timeout (float | None): \u53ef\u9009\u7684\u8d85\u65f6\u65f6\u95f4\uff08\u79d2\uff09\uff0c\u8d85\u8fc7\u6b64\u65f6\u95f4\u5c06\u629b\u51fa TimeoutError\u3002\n\n        Returns:\n            Any: \u534f\u7a0b\u7684\u8fd4\u56de\u7ed3\u679c\u3002\n        \"\"\"\n        if threading.current_thread() is self._loop.thread:\n            raise RuntimeError(\n                f\"Cannot call `sync_run` from the same thread as AsyncLoop [{self._loop.name}] \u2014 this would cause a deadlock.\"\n            )\n\n        return self._loop.spawn(\n            coro, name=f\"[World-Context {self.uuid} sync task]\"\n        ).result(timeout=timeout)\n\n    def async_task(self, coro: Awaitable[Any], name: str) -&gt; Future[Any]:\n        \"\"\"\n        \u542f\u52a8\u4e00\u4e2a\u5f02\u6b65\u4efb\u52a1\n        \"\"\"\n        return self._loop.spawn(coro, name=name)\n\n    def release(self):\n        \"\"\"\n        \u91ca\u653e\u6240\u6709\u8d44\u6e90\uff0c\u5305\u62ec:\n        - \u505c\u6b62\u4efb\u52a1\u7ec4\n        - \u5173\u95ed gRPC\n        - \u505c\u6b62\u4e8b\u4ef6\u5faa\u73af\n        \"\"\"\n        if self._is_shutdown:\n            return\n        self._is_shutdown = True\n\n        _logger.debug(f\"[WorldContext {self._uuid}] releasing...\")\n\n        try:\n            self._loop.cancel_tasks(timeout=1.0)\n            self._loop.spawn(\n                self._conn_legacy.aclose(),\n                name=f\"WorldContext {self.uuid} release legacy gRPC connection.\",\n            ).result(timeout=1.0)\n            self._loop.spawn(\n                self._conn.aclose(),\n                name=f\"WorldContext {self.uuid} release gRPC connection.\",\n            ).result(timeout=1.0)\n        except Exception as e:\n            _logger.warning(\n                f\"[WorldContext {self._uuid}] failed to release cleanly: {e}\"\n            )\n\n        self._loop.stop()\n        _logger.debug(f\"[WorldContext {self._uuid}] release complete.\")\n\n    def __enter__(self):\n        return self\n\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        self.release()\n\n    def __del__(self):\n        _logger.debug(f\"[WorldContext {self._uuid}] gc.\")\n        self.release()\n</code></pre>"},{"location":"api/core_world_context/#tongsim.core.world_context.WorldContext.uuid","title":"uuid  <code>property</code>","text":"<pre><code>uuid: str\n</code></pre> <p>\u5f53\u524d World \u5b9e\u4f8b\u7684\u552f\u4e00\u6807\u8bc6\u7b26\u7684\u524d\u516b\u4f4d\u5b57\u7b26</p>"},{"location":"api/core_world_context/#tongsim.core.world_context.WorldContext.loop","title":"loop  <code>property</code>","text":"<pre><code>loop: AsyncLoop\n</code></pre> <p>\u4e3b\u4e8b\u4ef6\u5faa\u73af</p>"},{"location":"api/core_world_context/#tongsim.core.world_context.WorldContext.conn","title":"conn  <code>property</code>","text":"<pre><code>conn: GrpcConnection\n</code></pre> <p>gRPC \u8fde\u63a5</p>"},{"location":"api/core_world_context/#tongsim.core.world_context.WorldContext.conn_legacy","title":"conn_legacy  <code>property</code>","text":"<pre><code>conn_legacy: GrpcLegacyConnection\n</code></pre> <p>\u5f03\u7528\u7684 gRPC \u8fde\u63a5</p>"},{"location":"api/core_world_context/#tongsim.core.world_context.WorldContext.legacy_stream_client","title":"legacy_stream_client  <code>property</code>","text":"<pre><code>legacy_stream_client: LegacyStreamClient\n</code></pre> <p>\u5f03\u7528\u7684 gRPC \u53cc\u5411\u6d41\u5ba2\u6237\u7aef</p>"},{"location":"api/core_world_context/#tongsim.core.world_context.WorldContext.sync_run","title":"sync_run","text":"<pre><code>sync_run(\n    coro: Awaitable, timeout: float | None = None\n) -&gt; Any\n</code></pre> <p>\u5728\u4e8b\u4ef6\u5faa\u73af\u4e2d\u540c\u6b65\u8fd0\u884c\u5f02\u6b65\u4efb\u52a1\uff0c\u5e76\u963b\u585e\u76f4\u5230\u4efb\u52a1\u5b8c\u6210\u3002</p> <p>Parameters:</p> Name Type Description Default <code>coro</code> <code>Awaitable</code> <p>\u8981\u6267\u884c\u7684\u5f02\u6b65\u534f\u7a0b\u3002</p> required <code>timeout</code> <code>float | None</code> <p>\u53ef\u9009\u7684\u8d85\u65f6\u65f6\u95f4\uff08\u79d2\uff09\uff0c\u8d85\u8fc7\u6b64\u65f6\u95f4\u5c06\u629b\u51fa TimeoutError\u3002</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>\u534f\u7a0b\u7684\u8fd4\u56de\u7ed3\u679c\u3002</p> Source code in <code>src\\tongsim\\core\\world_context.py</code> <pre><code>def sync_run(self, coro: Awaitable, timeout: float | None = None) -&gt; Any:\n    \"\"\"\n    \u5728\u4e8b\u4ef6\u5faa\u73af\u4e2d\u540c\u6b65\u8fd0\u884c\u5f02\u6b65\u4efb\u52a1\uff0c\u5e76\u963b\u585e\u76f4\u5230\u4efb\u52a1\u5b8c\u6210\u3002\n\n    Args:\n        coro (Awaitable): \u8981\u6267\u884c\u7684\u5f02\u6b65\u534f\u7a0b\u3002\n        timeout (float | None): \u53ef\u9009\u7684\u8d85\u65f6\u65f6\u95f4\uff08\u79d2\uff09\uff0c\u8d85\u8fc7\u6b64\u65f6\u95f4\u5c06\u629b\u51fa TimeoutError\u3002\n\n    Returns:\n        Any: \u534f\u7a0b\u7684\u8fd4\u56de\u7ed3\u679c\u3002\n    \"\"\"\n    if threading.current_thread() is self._loop.thread:\n        raise RuntimeError(\n            f\"Cannot call `sync_run` from the same thread as AsyncLoop [{self._loop.name}] \u2014 this would cause a deadlock.\"\n        )\n\n    return self._loop.spawn(\n        coro, name=f\"[World-Context {self.uuid} sync task]\"\n    ).result(timeout=timeout)\n</code></pre>"},{"location":"api/core_world_context/#tongsim.core.world_context.WorldContext.async_task","title":"async_task","text":"<pre><code>async_task(coro: Awaitable[Any], name: str) -&gt; Future[Any]\n</code></pre> <p>\u542f\u52a8\u4e00\u4e2a\u5f02\u6b65\u4efb\u52a1</p> Source code in <code>src\\tongsim\\core\\world_context.py</code> <pre><code>def async_task(self, coro: Awaitable[Any], name: str) -&gt; Future[Any]:\n    \"\"\"\n    \u542f\u52a8\u4e00\u4e2a\u5f02\u6b65\u4efb\u52a1\n    \"\"\"\n    return self._loop.spawn(coro, name=name)\n</code></pre>"},{"location":"api/core_world_context/#tongsim.core.world_context.WorldContext.release","title":"release","text":"<pre><code>release()\n</code></pre> <p>\u91ca\u653e\u6240\u6709\u8d44\u6e90\uff0c\u5305\u62ec: - \u505c\u6b62\u4efb\u52a1\u7ec4 - \u5173\u95ed gRPC - \u505c\u6b62\u4e8b\u4ef6\u5faa\u73af</p> Source code in <code>src\\tongsim\\core\\world_context.py</code> <pre><code>def release(self):\n    \"\"\"\n    \u91ca\u653e\u6240\u6709\u8d44\u6e90\uff0c\u5305\u62ec:\n    - \u505c\u6b62\u4efb\u52a1\u7ec4\n    - \u5173\u95ed gRPC\n    - \u505c\u6b62\u4e8b\u4ef6\u5faa\u73af\n    \"\"\"\n    if self._is_shutdown:\n        return\n    self._is_shutdown = True\n\n    _logger.debug(f\"[WorldContext {self._uuid}] releasing...\")\n\n    try:\n        self._loop.cancel_tasks(timeout=1.0)\n        self._loop.spawn(\n            self._conn_legacy.aclose(),\n            name=f\"WorldContext {self.uuid} release legacy gRPC connection.\",\n        ).result(timeout=1.0)\n        self._loop.spawn(\n            self._conn.aclose(),\n            name=f\"WorldContext {self.uuid} release gRPC connection.\",\n        ).result(timeout=1.0)\n    except Exception as e:\n        _logger.warning(\n            f\"[WorldContext {self._uuid}] failed to release cleanly: {e}\"\n        )\n\n    self._loop.stop()\n    _logger.debug(f\"[WorldContext {self._uuid}] release complete.\")\n</code></pre>"},{"location":"api/entity_base/","title":"\ud83e\udd16 Entity \u57fa\u7c7b\u65b9\u6cd5","text":""},{"location":"api/entity_base/#tongsim.entity.entity","title":"tongsim.entity.entity","text":""},{"location":"api/entity_base/#tongsim.entity.entity.Entity","title":"Entity","text":"<p>Entity \u7c7b\u4ee3\u8868\u4e00\u4e2a TongSim \u4e16\u754c\u4e2d\u7684\u5bf9\u8c61</p> <p>\u7c7b\u7684\u804c\u8d23\u5305\u62ec:</p> <ul> <li>\u7ba1\u7406\u7ec4\u4ef6 ID\uff0c\u6309\u7ec4\u4ef6\u7c7b\u578b\u5206\u7c7b</li> <li>\u63d0\u4f9b\u80fd\u529b\uff08Ability\uff09\u8bbf\u95ee\u4e0e\u8f6c\u6362\u673a\u5236</li> </ul> <p>\u6ce8\u610f: Entity \u4e0d\u76f4\u63a5\u6301\u6709\u7ec4\u4ef6\u6570\u636e\uff0c\u4ec5\u7ef4\u62a4 component_id \u7ed3\u6784\u3002</p> Source code in <code>src\\tongsim\\entity\\entity.py</code> <pre><code>class Entity:\n    \"\"\"\n    Entity \u7c7b\u4ee3\u8868\u4e00\u4e2a TongSim \u4e16\u754c\u4e2d\u7684\u5bf9\u8c61\n\n    \u7c7b\u7684\u804c\u8d23\u5305\u62ec:\n\n    - \u7ba1\u7406\u7ec4\u4ef6 ID\uff0c\u6309\u7ec4\u4ef6\u7c7b\u578b\u5206\u7c7b\n    - \u63d0\u4f9b\u80fd\u529b\uff08Ability\uff09\u8bbf\u95ee\u4e0e\u8f6c\u6362\u673a\u5236\n\n    \u6ce8\u610f: Entity \u4e0d\u76f4\u63a5\u6301\u6709\u7ec4\u4ef6\u6570\u636e\uff0c\u4ec5\u7ef4\u62a4 component_id \u7ed3\u6784\u3002\n    \"\"\"\n\n    __slots__ = (\"_ability_cache\", \"_components\", \"_id\", \"_world_context\")\n\n    def __init__(\n        self,\n        entity_id: str,\n        world_context: WorldContext,\n        components: dict[ComponentType, list[str]],\n    ):\n        self._id: Final[str] = entity_id\n        self._world_context: Final[WorldContext] = world_context\n        self._components: dict[ComponentType, list[str]] = components\n        self._ability_cache: dict[type, object] = {}  # \u7f13\u5b58\u5df2\u521b\u5efa\u7684 Impl \u5b9e\u4f8b\n\n    @property\n    def id(self):\n        return self._id\n\n    @property\n    def context(self):\n        return self._world_context\n\n    @classmethod\n    async def from_grpc(cls, entity_id: str, world_context: WorldContext) -&gt; \"Entity\":\n        \"\"\"\n        \u901a\u8fc7 gRPC \u67e5\u8be2\u6784\u9020 Entity\u3002\n\n        :param conn: GrpcConnection\n        :param entity_id: Entity \u552f\u4e00 ID\n        :return: Entity \u5b9e\u4f8b\n        \"\"\"\n        resp = await UnaryAPI.query_components(world_context.conn, entity_id)\n        if resp is None:\n            raise RuntimeError(f\"Failed to query components for entity '{entity_id}'.\")\n\n        components: dict[ComponentType, list[str]] = defaultdict(list)\n        for component_id, component_type in resp.items():\n            components[component_type].append(component_id)\n\n        _logger.debug(\n            f\"[Consturct entity from gRPC] Entity {entity_id}  ---  component-types: {list(components.keys())}\"\n        )\n        return cls(entity_id, world_context, components)\n\n    # TODO: from PG\n\n    def get_components_id_list(self, component_type: ComponentType) -&gt; list[str]:\n        \"\"\"\n        \u83b7\u53d6\u6307\u5b9a\u7c7b\u578b\u7684\u6240\u6709\u7ec4\u4ef6 ID\u3002\n\n        :param component_type: \u7ec4\u4ef6\u7c7b\u578b\uff08\u5982 \"CamParamComponent\"\uff09\n        :return: \u7ec4\u4ef6 ID \u5217\u8868\uff08\u53ef\u80fd\u4e3a\u7a7a\uff09\n        \"\"\"\n        return self._components.get(component_type, [])\n\n    def get_component_id(self, component_type: ComponentType) -&gt; str:\n        \"\"\"\n        \u83b7\u53d6\u6307\u5b9a\u7c7b\u578b\u7684\u7b2c\u4e00\u4e2a\u7ec4\u4ef6 ID\uff08\u5982\u679c\u5b58\u5728\uff09\u3002\n\n        :param component_type: \u7ec4\u4ef6\u7c7b\u578b\n        :return: \u7ec4\u4ef6 ID\n        :raises: KeyError \u5982\u679c\u7ec4\u4ef6\u4e0d\u5b58\u5728\n        \"\"\"\n        comps = self._components.get(component_type, [])\n        if not comps:\n            raise KeyError(\n                f\"Entity '{self._id}' has no component of type '{component_type}'.\"\n            )\n        return comps[0]\n\n    def has_component_type(self, component_type: ComponentType) -&gt; bool:\n        \"\"\"\n        \u5224\u65ad\u662f\u5426\u62e5\u6709\u6307\u5b9a\u7c7b\u578b\u7684\u7ec4\u4ef6\u3002\n\n        Args:\n            component_type (ComponentType): \u7ec4\u4ef6\u7c7b\u578b\uff08\u5982 \"Camera\"\uff09\n\n        Returns:\n            bool: \u662f\u5426\u62e5\u6709\u8be5\u7c7b\u578b\u7684\u7ec4\u4ef6\u3002\n        \"\"\"\n        return bool(self._components.get(component_type))\n\n    def has_component_id(self, component_id: str) -&gt; bool:\n        \"\"\"\n        \u5224\u65ad\u662f\u5426\u5305\u542b\u6307\u5b9a\u7ec4\u4ef6 ID\u3002\n\n        Args:\n            component_id (str): \u8981\u68c0\u67e5\u7684\u7ec4\u4ef6\u552f\u4e00 ID\n\n        Returns:\n            bool: \u662f\u5426\u5305\u542b\u8be5\u7ec4\u4ef6 ID\u3002\n        \"\"\"\n        return any(component_id in ids for ids in self._components.values())\n\n    def has_ability(self, ability_type: type[T]) -&gt; bool:\n        \"\"\"\n        \u5224\u65ad\u8be5 Entity \u662f\u5426\u652f\u6301\u6307\u5b9a\u7684\u80fd\u529b\u63a5\u53e3\uff08Ability\uff09\u3002\n\n        Args:\n            ability_type (type[T]): \u80fd\u529b\u7c7b\u578b\uff08Protocol\uff09\n\n        Returns:\n            bool: \u662f\u5426\u652f\u6301\u8be5\u80fd\u529b\n        \"\"\"\n        impl_cls = AbilityRegistry.get_impl(ability_type)\n        return impl_cls is not None and impl_cls.is_applicable(self)\n\n    def as_(self, ability_type: type[T]) -&gt; T:\n        \"\"\"\n        \u5c06 Entity \u540c\u6b65\u8f6c\u6362\u4e3a\u5177\u5907\u6307\u5b9a\u80fd\u529b\u7684\u5bf9\u8c61\uff08Ability \u5b9e\u73b0\u7c7b\uff09\u3002\n\n        \u6ce8\u610f:\n            - \u672c\u65b9\u6cd5\u4e3a\u540c\u6b65\u5c01\u88c5\uff0c\u5185\u90e8\u901a\u8fc7 `sync_run` \u8c03\u7528\u5f02\u6b65\u7684 `async_as_`\u3002\n            - \u82e5\u5728\u4e8b\u4ef6\u5faa\u73af\u7ebf\u7a0b\u5185\u8c03\u7528\u6b64\u65b9\u6cd5\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6b7b\u9501\uff0c\u5e94\u4f18\u5148\u4f7f\u7528 `async_as_`\u3002\n\n        Args:\n            ability_type (type[T]): \u80fd\u529b\u63a5\u53e3\u7c7b\u578b\uff08Protocol\uff09\u3002\n\n        Returns:\n            T: \u5b9e\u73b0\u4e86\u8be5\u80fd\u529b\u7684\u80fd\u529b\u5bf9\u8c61\u5b9e\u4f8b\u3002\n\n        Raises:\n            RuntimeError: \u5982\u679c\u80fd\u529b\u672a\u6ce8\u518c\uff0c\u6216\u5f53\u524d Entity \u4e0d\u652f\u6301\u8be5\u80fd\u529b\u3002\n        \"\"\"\n        return self._world_context.sync_run(self.async_as_(ability_type=ability_type))\n\n    async def async_as_(self, ability_type: type[T]) -&gt; T:\n        \"\"\"\n        \u5f02\u6b65\u5730\u5c06 Entity \u8f6c\u6362\u4e3a\u5177\u5907\u6307\u5b9a\u80fd\u529b\u7684\u5bf9\u8c61\uff08Ability \u5b9e\u73b0\u7c7b\uff09\u3002\n\n        \u672c\u65b9\u6cd5\u901a\u8fc7\u80fd\u529b\u6ce8\u518c\u8868\u83b7\u53d6\u5bf9\u5e94\u7684\u5b9e\u73b0\u7c7b\uff0c\u5e76\u8fdb\u884c\u521d\u59cb\u5316\u7ed1\u5b9a\u3002\n        \u82e5\u5df2\u7f13\u5b58\u80fd\u529b\u5b9e\u4f8b\uff0c\u5c06\u76f4\u63a5\u8fd4\u56de\u7f13\u5b58\u3002\n\n        Args:\n            ability_type (type[T]): \u80fd\u529b\u63a5\u53e3\u7c7b\u578b\uff08Protocol\uff09\u3002\n\n        Returns:\n            T: \u5b9e\u73b0\u4e86\u8be5\u80fd\u529b\u7684\u80fd\u529b\u5bf9\u8c61\u5b9e\u4f8b\u3002\n\n        Raises:\n            RuntimeError: \u5982\u679c\u672a\u6ce8\u518c\u8be5\u80fd\u529b\uff0c\u6216\u5f53\u524d Entity \u4e0d\u5177\u5907\u8be5\u80fd\u529b\u8981\u6c42\u3002\n        \"\"\"\n        if ability_type in self._ability_cache:\n            return self._ability_cache[ability_type]\n\n        impl_cls = AbilityRegistry.get_impl_cls(ability_type)\n        if impl_cls is None:\n            raise RuntimeError(f\"Ability {ability_type.__name__} not registered.\")\n\n        if not impl_cls.is_applicable(self):\n            raise RuntimeError(\n                f\"Entity '{self._id}' does not support ability {ability_type.__name__}.\"\n            )\n\n        impl = await impl_cls.create(self)\n        self._ability_cache[ability_type] = impl\n        return impl\n\n    def __repr__(self) -&gt; str:\n        return (\n            f\"Entity(id: {self._id}   component-types: {list(self._components.keys())})\"\n        )\n</code></pre>"},{"location":"api/entity_base/#tongsim.entity.entity.Entity.from_grpc","title":"from_grpc  <code>async</code> <code>classmethod</code>","text":"<pre><code>from_grpc(\n    entity_id: str, world_context: WorldContext\n) -&gt; Entity\n</code></pre> <p>\u901a\u8fc7 gRPC \u67e5\u8be2\u6784\u9020 Entity\u3002</p> <p>:param conn: GrpcConnection :param entity_id: Entity \u552f\u4e00 ID :return: Entity \u5b9e\u4f8b</p> Source code in <code>src\\tongsim\\entity\\entity.py</code> <pre><code>@classmethod\nasync def from_grpc(cls, entity_id: str, world_context: WorldContext) -&gt; \"Entity\":\n    \"\"\"\n    \u901a\u8fc7 gRPC \u67e5\u8be2\u6784\u9020 Entity\u3002\n\n    :param conn: GrpcConnection\n    :param entity_id: Entity \u552f\u4e00 ID\n    :return: Entity \u5b9e\u4f8b\n    \"\"\"\n    resp = await UnaryAPI.query_components(world_context.conn, entity_id)\n    if resp is None:\n        raise RuntimeError(f\"Failed to query components for entity '{entity_id}'.\")\n\n    components: dict[ComponentType, list[str]] = defaultdict(list)\n    for component_id, component_type in resp.items():\n        components[component_type].append(component_id)\n\n    _logger.debug(\n        f\"[Consturct entity from gRPC] Entity {entity_id}  ---  component-types: {list(components.keys())}\"\n    )\n    return cls(entity_id, world_context, components)\n</code></pre>"},{"location":"api/entity_base/#tongsim.entity.entity.Entity.get_components_id_list","title":"get_components_id_list","text":"<pre><code>get_components_id_list(\n    component_type: ComponentType,\n) -&gt; list[str]\n</code></pre> <p>\u83b7\u53d6\u6307\u5b9a\u7c7b\u578b\u7684\u6240\u6709\u7ec4\u4ef6 ID\u3002</p> <p>:param component_type: \u7ec4\u4ef6\u7c7b\u578b\uff08\u5982 \"CamParamComponent\"\uff09 :return: \u7ec4\u4ef6 ID \u5217\u8868\uff08\u53ef\u80fd\u4e3a\u7a7a\uff09</p> Source code in <code>src\\tongsim\\entity\\entity.py</code> <pre><code>def get_components_id_list(self, component_type: ComponentType) -&gt; list[str]:\n    \"\"\"\n    \u83b7\u53d6\u6307\u5b9a\u7c7b\u578b\u7684\u6240\u6709\u7ec4\u4ef6 ID\u3002\n\n    :param component_type: \u7ec4\u4ef6\u7c7b\u578b\uff08\u5982 \"CamParamComponent\"\uff09\n    :return: \u7ec4\u4ef6 ID \u5217\u8868\uff08\u53ef\u80fd\u4e3a\u7a7a\uff09\n    \"\"\"\n    return self._components.get(component_type, [])\n</code></pre>"},{"location":"api/entity_base/#tongsim.entity.entity.Entity.get_component_id","title":"get_component_id","text":"<pre><code>get_component_id(component_type: ComponentType) -&gt; str\n</code></pre> <p>\u83b7\u53d6\u6307\u5b9a\u7c7b\u578b\u7684\u7b2c\u4e00\u4e2a\u7ec4\u4ef6 ID\uff08\u5982\u679c\u5b58\u5728\uff09\u3002</p> <p>:param component_type: \u7ec4\u4ef6\u7c7b\u578b :return: \u7ec4\u4ef6 ID :raises: KeyError \u5982\u679c\u7ec4\u4ef6\u4e0d\u5b58\u5728</p> Source code in <code>src\\tongsim\\entity\\entity.py</code> <pre><code>def get_component_id(self, component_type: ComponentType) -&gt; str:\n    \"\"\"\n    \u83b7\u53d6\u6307\u5b9a\u7c7b\u578b\u7684\u7b2c\u4e00\u4e2a\u7ec4\u4ef6 ID\uff08\u5982\u679c\u5b58\u5728\uff09\u3002\n\n    :param component_type: \u7ec4\u4ef6\u7c7b\u578b\n    :return: \u7ec4\u4ef6 ID\n    :raises: KeyError \u5982\u679c\u7ec4\u4ef6\u4e0d\u5b58\u5728\n    \"\"\"\n    comps = self._components.get(component_type, [])\n    if not comps:\n        raise KeyError(\n            f\"Entity '{self._id}' has no component of type '{component_type}'.\"\n        )\n    return comps[0]\n</code></pre>"},{"location":"api/entity_base/#tongsim.entity.entity.Entity.has_component_type","title":"has_component_type","text":"<pre><code>has_component_type(component_type: ComponentType) -&gt; bool\n</code></pre> <p>\u5224\u65ad\u662f\u5426\u62e5\u6709\u6307\u5b9a\u7c7b\u578b\u7684\u7ec4\u4ef6\u3002</p> <p>Parameters:</p> Name Type Description Default <code>component_type</code> <code>ComponentType</code> <p>\u7ec4\u4ef6\u7c7b\u578b\uff08\u5982 \"Camera\"\uff09</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u662f\u5426\u62e5\u6709\u8be5\u7c7b\u578b\u7684\u7ec4\u4ef6\u3002</p> Source code in <code>src\\tongsim\\entity\\entity.py</code> <pre><code>def has_component_type(self, component_type: ComponentType) -&gt; bool:\n    \"\"\"\n    \u5224\u65ad\u662f\u5426\u62e5\u6709\u6307\u5b9a\u7c7b\u578b\u7684\u7ec4\u4ef6\u3002\n\n    Args:\n        component_type (ComponentType): \u7ec4\u4ef6\u7c7b\u578b\uff08\u5982 \"Camera\"\uff09\n\n    Returns:\n        bool: \u662f\u5426\u62e5\u6709\u8be5\u7c7b\u578b\u7684\u7ec4\u4ef6\u3002\n    \"\"\"\n    return bool(self._components.get(component_type))\n</code></pre>"},{"location":"api/entity_base/#tongsim.entity.entity.Entity.has_component_id","title":"has_component_id","text":"<pre><code>has_component_id(component_id: str) -&gt; bool\n</code></pre> <p>\u5224\u65ad\u662f\u5426\u5305\u542b\u6307\u5b9a\u7ec4\u4ef6 ID\u3002</p> <p>Parameters:</p> Name Type Description Default <code>component_id</code> <code>str</code> <p>\u8981\u68c0\u67e5\u7684\u7ec4\u4ef6\u552f\u4e00 ID</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u662f\u5426\u5305\u542b\u8be5\u7ec4\u4ef6 ID\u3002</p> Source code in <code>src\\tongsim\\entity\\entity.py</code> <pre><code>def has_component_id(self, component_id: str) -&gt; bool:\n    \"\"\"\n    \u5224\u65ad\u662f\u5426\u5305\u542b\u6307\u5b9a\u7ec4\u4ef6 ID\u3002\n\n    Args:\n        component_id (str): \u8981\u68c0\u67e5\u7684\u7ec4\u4ef6\u552f\u4e00 ID\n\n    Returns:\n        bool: \u662f\u5426\u5305\u542b\u8be5\u7ec4\u4ef6 ID\u3002\n    \"\"\"\n    return any(component_id in ids for ids in self._components.values())\n</code></pre>"},{"location":"api/entity_base/#tongsim.entity.entity.Entity.has_ability","title":"has_ability","text":"<pre><code>has_ability(ability_type: type[T]) -&gt; bool\n</code></pre> <p>\u5224\u65ad\u8be5 Entity \u662f\u5426\u652f\u6301\u6307\u5b9a\u7684\u80fd\u529b\u63a5\u53e3\uff08Ability\uff09\u3002</p> <p>Parameters:</p> Name Type Description Default <code>ability_type</code> <code>type[T]</code> <p>\u80fd\u529b\u7c7b\u578b\uff08Protocol\uff09</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u662f\u5426\u652f\u6301\u8be5\u80fd\u529b</p> Source code in <code>src\\tongsim\\entity\\entity.py</code> <pre><code>def has_ability(self, ability_type: type[T]) -&gt; bool:\n    \"\"\"\n    \u5224\u65ad\u8be5 Entity \u662f\u5426\u652f\u6301\u6307\u5b9a\u7684\u80fd\u529b\u63a5\u53e3\uff08Ability\uff09\u3002\n\n    Args:\n        ability_type (type[T]): \u80fd\u529b\u7c7b\u578b\uff08Protocol\uff09\n\n    Returns:\n        bool: \u662f\u5426\u652f\u6301\u8be5\u80fd\u529b\n    \"\"\"\n    impl_cls = AbilityRegistry.get_impl(ability_type)\n    return impl_cls is not None and impl_cls.is_applicable(self)\n</code></pre>"},{"location":"api/entity_base/#tongsim.entity.entity.Entity.as_","title":"as_","text":"<pre><code>as_(ability_type: type[T]) -&gt; T\n</code></pre> <p>\u5c06 Entity \u540c\u6b65\u8f6c\u6362\u4e3a\u5177\u5907\u6307\u5b9a\u80fd\u529b\u7684\u5bf9\u8c61\uff08Ability \u5b9e\u73b0\u7c7b\uff09\u3002</p> \u6ce8\u610f <ul> <li>\u672c\u65b9\u6cd5\u4e3a\u540c\u6b65\u5c01\u88c5\uff0c\u5185\u90e8\u901a\u8fc7 <code>sync_run</code> \u8c03\u7528\u5f02\u6b65\u7684 <code>async_as_</code>\u3002</li> <li>\u82e5\u5728\u4e8b\u4ef6\u5faa\u73af\u7ebf\u7a0b\u5185\u8c03\u7528\u6b64\u65b9\u6cd5\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6b7b\u9501\uff0c\u5e94\u4f18\u5148\u4f7f\u7528 <code>async_as_</code>\u3002</li> </ul> <p>Parameters:</p> Name Type Description Default <code>ability_type</code> <code>type[T]</code> <p>\u80fd\u529b\u63a5\u53e3\u7c7b\u578b\uff08Protocol\uff09\u3002</p> required <p>Returns:</p> Name Type Description <code>T</code> <code>T</code> <p>\u5b9e\u73b0\u4e86\u8be5\u80fd\u529b\u7684\u80fd\u529b\u5bf9\u8c61\u5b9e\u4f8b\u3002</p> <p>Raises:</p> Type Description <code>RuntimeError</code> <p>\u5982\u679c\u80fd\u529b\u672a\u6ce8\u518c\uff0c\u6216\u5f53\u524d Entity \u4e0d\u652f\u6301\u8be5\u80fd\u529b\u3002</p> Source code in <code>src\\tongsim\\entity\\entity.py</code> <pre><code>def as_(self, ability_type: type[T]) -&gt; T:\n    \"\"\"\n    \u5c06 Entity \u540c\u6b65\u8f6c\u6362\u4e3a\u5177\u5907\u6307\u5b9a\u80fd\u529b\u7684\u5bf9\u8c61\uff08Ability \u5b9e\u73b0\u7c7b\uff09\u3002\n\n    \u6ce8\u610f:\n        - \u672c\u65b9\u6cd5\u4e3a\u540c\u6b65\u5c01\u88c5\uff0c\u5185\u90e8\u901a\u8fc7 `sync_run` \u8c03\u7528\u5f02\u6b65\u7684 `async_as_`\u3002\n        - \u82e5\u5728\u4e8b\u4ef6\u5faa\u73af\u7ebf\u7a0b\u5185\u8c03\u7528\u6b64\u65b9\u6cd5\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6b7b\u9501\uff0c\u5e94\u4f18\u5148\u4f7f\u7528 `async_as_`\u3002\n\n    Args:\n        ability_type (type[T]): \u80fd\u529b\u63a5\u53e3\u7c7b\u578b\uff08Protocol\uff09\u3002\n\n    Returns:\n        T: \u5b9e\u73b0\u4e86\u8be5\u80fd\u529b\u7684\u80fd\u529b\u5bf9\u8c61\u5b9e\u4f8b\u3002\n\n    Raises:\n        RuntimeError: \u5982\u679c\u80fd\u529b\u672a\u6ce8\u518c\uff0c\u6216\u5f53\u524d Entity \u4e0d\u652f\u6301\u8be5\u80fd\u529b\u3002\n    \"\"\"\n    return self._world_context.sync_run(self.async_as_(ability_type=ability_type))\n</code></pre>"},{"location":"api/entity_base/#tongsim.entity.entity.Entity.async_as_","title":"async_as_  <code>async</code>","text":"<pre><code>async_as_(ability_type: type[T]) -&gt; T\n</code></pre> <p>\u5f02\u6b65\u5730\u5c06 Entity \u8f6c\u6362\u4e3a\u5177\u5907\u6307\u5b9a\u80fd\u529b\u7684\u5bf9\u8c61\uff08Ability \u5b9e\u73b0\u7c7b\uff09\u3002</p> <p>\u672c\u65b9\u6cd5\u901a\u8fc7\u80fd\u529b\u6ce8\u518c\u8868\u83b7\u53d6\u5bf9\u5e94\u7684\u5b9e\u73b0\u7c7b\uff0c\u5e76\u8fdb\u884c\u521d\u59cb\u5316\u7ed1\u5b9a\u3002 \u82e5\u5df2\u7f13\u5b58\u80fd\u529b\u5b9e\u4f8b\uff0c\u5c06\u76f4\u63a5\u8fd4\u56de\u7f13\u5b58\u3002</p> <p>Parameters:</p> Name Type Description Default <code>ability_type</code> <code>type[T]</code> <p>\u80fd\u529b\u63a5\u53e3\u7c7b\u578b\uff08Protocol\uff09\u3002</p> required <p>Returns:</p> Name Type Description <code>T</code> <code>T</code> <p>\u5b9e\u73b0\u4e86\u8be5\u80fd\u529b\u7684\u80fd\u529b\u5bf9\u8c61\u5b9e\u4f8b\u3002</p> <p>Raises:</p> Type Description <code>RuntimeError</code> <p>\u5982\u679c\u672a\u6ce8\u518c\u8be5\u80fd\u529b\uff0c\u6216\u5f53\u524d Entity \u4e0d\u5177\u5907\u8be5\u80fd\u529b\u8981\u6c42\u3002</p> Source code in <code>src\\tongsim\\entity\\entity.py</code> <pre><code>async def async_as_(self, ability_type: type[T]) -&gt; T:\n    \"\"\"\n    \u5f02\u6b65\u5730\u5c06 Entity \u8f6c\u6362\u4e3a\u5177\u5907\u6307\u5b9a\u80fd\u529b\u7684\u5bf9\u8c61\uff08Ability \u5b9e\u73b0\u7c7b\uff09\u3002\n\n    \u672c\u65b9\u6cd5\u901a\u8fc7\u80fd\u529b\u6ce8\u518c\u8868\u83b7\u53d6\u5bf9\u5e94\u7684\u5b9e\u73b0\u7c7b\uff0c\u5e76\u8fdb\u884c\u521d\u59cb\u5316\u7ed1\u5b9a\u3002\n    \u82e5\u5df2\u7f13\u5b58\u80fd\u529b\u5b9e\u4f8b\uff0c\u5c06\u76f4\u63a5\u8fd4\u56de\u7f13\u5b58\u3002\n\n    Args:\n        ability_type (type[T]): \u80fd\u529b\u63a5\u53e3\u7c7b\u578b\uff08Protocol\uff09\u3002\n\n    Returns:\n        T: \u5b9e\u73b0\u4e86\u8be5\u80fd\u529b\u7684\u80fd\u529b\u5bf9\u8c61\u5b9e\u4f8b\u3002\n\n    Raises:\n        RuntimeError: \u5982\u679c\u672a\u6ce8\u518c\u8be5\u80fd\u529b\uff0c\u6216\u5f53\u524d Entity \u4e0d\u5177\u5907\u8be5\u80fd\u529b\u8981\u6c42\u3002\n    \"\"\"\n    if ability_type in self._ability_cache:\n        return self._ability_cache[ability_type]\n\n    impl_cls = AbilityRegistry.get_impl_cls(ability_type)\n    if impl_cls is None:\n        raise RuntimeError(f\"Ability {ability_type.__name__} not registered.\")\n\n    if not impl_cls.is_applicable(self):\n        raise RuntimeError(\n            f\"Entity '{self._id}' does not support ability {ability_type.__name__}.\"\n        )\n\n    impl = await impl_cls.create(self)\n    self._ability_cache[ability_type] = impl\n    return impl\n</code></pre>"},{"location":"api/entity_mixin/","title":"\ud83e\udd16 \u5e26\u6709\u80fd\u529b\u7684 Entity \u5b9e\u4f8bClass","text":""},{"location":"api/entity_mixin/#tongsim.entity.mixin","title":"tongsim.entity.mixin","text":"<p>entity.mixin</p>"},{"location":"api/entity_mixin/#tongsim.entity.mixin.MixinEntityBase","title":"MixinEntityBase","text":"<p>               Bases: <code>Entity</code></p> <p>\u7528\u4e8e\u901a\u8fc7 <code>_ability_types</code> \u5b57\u6bb5\u58f0\u660e\u5f53\u524d\u5b9e\u4f53\u7c7b\u578b\u652f\u6301\u7684\u80fd\u529b\uff08Ability Protocol \u63a5\u53e3\uff09\uff0c \u5e76\u5728\u521b\u5efa\u65f6\u81ea\u52a8\u5c06\u8fd9\u4e9b\u80fd\u529b\u65b9\u6cd5\u7ed1\u5b9a\u4e3a\u5b9e\u4f53\u6210\u5458\u65b9\u6cd5\u3002</p> <p><code>_ability_types</code> \u4e3a\u7c7b\u53d8\u91cf\uff0c\u9700\u5728\u5b50\u7c7b\u4e2d\u663e\u5f0f\u6307\u5b9a\u80fd\u529b\u5217\u8868\u3002</p> Source code in <code>src\\tongsim\\entity\\mixin.py</code> <pre><code>class MixinEntityBase(Entity):\n    \"\"\"\n    \u7528\u4e8e\u901a\u8fc7 `_ability_types` \u5b57\u6bb5\u58f0\u660e\u5f53\u524d\u5b9e\u4f53\u7c7b\u578b\u652f\u6301\u7684\u80fd\u529b\uff08Ability Protocol \u63a5\u53e3\uff09\uff0c\n    \u5e76\u5728\u521b\u5efa\u65f6\u81ea\u52a8\u5c06\u8fd9\u4e9b\u80fd\u529b\u65b9\u6cd5\u7ed1\u5b9a\u4e3a\u5b9e\u4f53\u6210\u5458\u65b9\u6cd5\u3002\n\n    `_ability_types` \u4e3a\u7c7b\u53d8\u91cf\uff0c\u9700\u5728\u5b50\u7c7b\u4e2d\u663e\u5f0f\u6307\u5b9a\u80fd\u529b\u5217\u8868\u3002\n    \"\"\"\n\n    _ability_types: ClassVar[list[type]] = []\n\n    @classmethod\n    async def create(cls, *args, **kwargs):\n        self = cls(*args, **kwargs)\n        for ability in cls._ability_types:\n            await _bind_ability_methods(self, ability)\n        return self\n\n    @classmethod\n    async def from_grpc(\n        cls, entity_id: str, world_context: WorldContext\n    ) -&gt; \"MixinEntityBase\":\n        \"\"\"\n        \u901a\u8fc7 gRPC \u67e5\u8be2\u6784\u9020 Entity\u3002\n        \"\"\"\n\n        # TODO: \u4e3a\u4e86\u4fdd\u7559 Entity Base \u5c42\u7684\u5e72\u51c0\u5b9e\u73b0\uff0c\u6b64\u5904\u51fa\u73b0\u4e86\u91cd\u590d\u903b\u8f91\u8c03\u7528\n        resp = await UnaryAPI.query_components(world_context.conn, entity_id)\n        if resp is None:\n            raise RuntimeError(f\"Failed to query components for entity '{entity_id}'.\")\n\n        components: dict[ComponentType, list[str]] = defaultdict(list)\n        for component_id, component_type in resp.items():\n            components[component_type].append(component_id)\n\n        _logger.debug(\n            f\"[Consturct mixin entity from gRPC] Entity {entity_id}  ---  ability-types: {list(cls._ability_types)}\"\n        )\n        return await cls.create(entity_id, world_context, components)\n</code></pre>"},{"location":"api/entity_mixin/#tongsim.entity.mixin.CameraEntity","title":"CameraEntity","text":"<p>               Bases: <code>MixinEntityBase</code>, <code>SceneAbility</code>, <code>CameraAbility</code></p> <p>TongSim \u7684\u76f8\u673a\u5b9e\u4f53</p> Source code in <code>src\\tongsim\\entity\\mixin.py</code> <pre><code>class CameraEntity(MixinEntityBase, SceneAbility, CameraAbility):\n    \"\"\"\n    TongSim \u7684\u76f8\u673a\u5b9e\u4f53\n    \"\"\"\n\n    _ability_types: ClassVar[list[type]] = [SceneAbility, CameraAbility]\n</code></pre>"},{"location":"api/entity_mixin/#tongsim.entity.mixin.HFCameraEntity","title":"HFCameraEntity","text":"<p>               Bases: <code>MixinEntityBase</code>, <code>HFCameraAbility</code></p> <p>TongSim \u7684\u9ad8\u901f\u76f8\u673a\u5b9e\u4f53</p> Source code in <code>src\\tongsim\\entity\\mixin.py</code> <pre><code>class HFCameraEntity(MixinEntityBase, HFCameraAbility):\n    \"\"\"\n    TongSim \u7684\u9ad8\u901f\u76f8\u673a\u5b9e\u4f53\n    \"\"\"\n\n    _ability_types: ClassVar[list[type]] = [HFCameraAbility]\n</code></pre>"},{"location":"api/entity_mixin/#tongsim.entity.mixin.AgentEntity","title":"AgentEntity","text":"<p>               Bases: <code>MixinEntityBase</code>, <code>SceneAbility</code>, <code>AgentActionAbility</code>, <code>AssetAbility</code>, <code>VoxelAbility</code></p> <p>TongSim \u7684\u667a\u80fd\u4f53</p> Source code in <code>src\\tongsim\\entity\\mixin.py</code> <pre><code>class AgentEntity(\n    MixinEntityBase, SceneAbility, AgentActionAbility, AssetAbility, VoxelAbility\n):\n    \"\"\"\n    TongSim \u7684\u667a\u80fd\u4f53\n    \"\"\"\n\n    _ability_types: ClassVar[list[type]] = [\n        SceneAbility,\n        AgentActionAbility,\n        AssetAbility,\n        VoxelAbility,\n    ]\n</code></pre>"},{"location":"api/entity_mixin/#tongsim.entity.mixin.ConsumableEntity","title":"ConsumableEntity","text":"<p>               Bases: <code>MixinEntityBase</code>, <code>SceneAbility</code>, <code>ConsumableEnergyAbility</code>, <code>AssetAbility</code>, <code>CollisionShapeAbility</code></p> <p>\u53ef\u98df\u7528 \u6216 \u53ef\u996e\u7528 \u7684\u5b9e\u4f53\u3002</p> Source code in <code>src\\tongsim\\entity\\mixin.py</code> <pre><code>class ConsumableEntity(\n    MixinEntityBase,\n    SceneAbility,\n    ConsumableEnergyAbility,\n    AssetAbility,\n    CollisionShapeAbility,\n):\n    \"\"\"\n    \u53ef\u98df\u7528 \u6216 \u53ef\u996e\u7528 \u7684\u5b9e\u4f53\u3002\n    \"\"\"\n\n    _ability_types: ClassVar[list[type]] = [\n        SceneAbility,\n        ConsumableEnergyAbility,\n        AssetAbility,\n        CollisionShapeAbility,\n    ]\n</code></pre>"},{"location":"api/entity_mixin/#tongsim.entity.mixin.ElectricApplianceEntity","title":"ElectricApplianceEntity","text":"<p>               Bases: <code>MixinEntityBase</code>, <code>SceneAbility</code>, <code>AssetAbility</code>, <code>InteractableAbility</code>, <code>PowerableAbility</code>, <code>CollisionShapeAbility</code></p> <p>TongSim \u7684\u652f\u6301\u4ea4\u4e92\u63a7\u5236\u7684\u7535\u5668\u7c7b\u578b\u5b9e\u4f53\uff0c\u6bd4\u5982\u53f0\u706f\u3001\u7535\u89c6\u3001\u7a7a\u8c03\u3001\u51b0\u7bb1\u3001\u5fae\u6ce2\u7089\u3001\u7535\u98ce\u6247\u3001\u996e\u6c34\u673a\u7b49\u7b49</p> Source code in <code>src\\tongsim\\entity\\mixin.py</code> <pre><code>class ElectricApplianceEntity(\n    MixinEntityBase,\n    SceneAbility,\n    AssetAbility,\n    InteractableAbility,\n    PowerableAbility,\n    CollisionShapeAbility,\n):\n    \"\"\"\n    TongSim \u7684\u652f\u6301\u4ea4\u4e92\u63a7\u5236\u7684\u7535\u5668\u7c7b\u578b\u5b9e\u4f53\uff0c\u6bd4\u5982\u53f0\u706f\u3001\u7535\u89c6\u3001\u7a7a\u8c03\u3001\u51b0\u7bb1\u3001\u5fae\u6ce2\u7089\u3001\u7535\u98ce\u6247\u3001\u996e\u6c34\u673a\u7b49\u7b49\n    \"\"\"\n\n    _ability_types: ClassVar[list[type]] = [\n        SceneAbility,\n        AssetAbility,\n        InteractableAbility,\n        PowerableAbility,\n        CollisionShapeAbility,\n    ]\n</code></pre>"},{"location":"api/entity_mixin/#tongsim.entity.mixin.InteractableEntity","title":"InteractableEntity","text":"<p>               Bases: <code>MixinEntityBase</code>, <code>SceneAbility</code>, <code>AssetAbility</code>, <code>InteractableAbility</code>, <code>CollisionShapeAbility</code></p> <p>TongSim \u7684\u652f\u6301\u4ea4\u4e92\u63a7\u5236\u7269\u4f53\u7c7b\u578b\u5b9e\u4f53\uff08\u4e0d\u4f9d\u8d56\u7535\u6e90\uff09\uff0c\u6bd4\u5982\u9065\u63a7\u5668\u3001\u5899\u4e0a\u7684\u5f00\u5173</p> Source code in <code>src\\tongsim\\entity\\mixin.py</code> <pre><code>class InteractableEntity(\n    MixinEntityBase,\n    SceneAbility,\n    AssetAbility,\n    InteractableAbility,\n    CollisionShapeAbility,\n):\n    \"\"\"\n    TongSim \u7684\u652f\u6301\u4ea4\u4e92\u63a7\u5236\u7269\u4f53\u7c7b\u578b\u5b9e\u4f53\uff08\u4e0d\u4f9d\u8d56\u7535\u6e90\uff09\uff0c\u6bd4\u5982\u9065\u63a7\u5668\u3001\u5899\u4e0a\u7684\u5f00\u5173\n    \"\"\"\n\n    _ability_types: ClassVar[list[type]] = [\n        SceneAbility,\n        AssetAbility,\n        InteractableAbility,\n        CollisionShapeAbility,\n    ]\n</code></pre>"},{"location":"api/entity_mixin/#tongsim.entity.mixin.BaseObjectEntity","title":"BaseObjectEntity","text":"<p>               Bases: <code>MixinEntityBase</code>, <code>SceneAbility</code>, <code>ConsumableEnergyAbility</code>, <code>AssetAbility</code>, <code>InteractableAbility</code>, <code>PowerableAbility</code>, <code>CollisionShapeAbility</code>, <code>LightAbility</code></p> <p>TongSim \u7684\u901a\u7528\u5bf9\u8c61\u5b9e\u4f53\uff0c\u5305\u62ec\u5927\u90e8\u5206\u53ef\u4ee5\u4ea4\u4e92\u7684\u63a5\u53e3</p> Source code in <code>src\\tongsim\\entity\\mixin.py</code> <pre><code>class BaseObjectEntity(\n    MixinEntityBase,\n    SceneAbility,\n    ConsumableEnergyAbility,\n    AssetAbility,\n    InteractableAbility,\n    PowerableAbility,\n    CollisionShapeAbility,\n    LightAbility,\n):\n    \"\"\"\n    TongSim \u7684\u901a\u7528\u5bf9\u8c61\u5b9e\u4f53\uff0c\u5305\u62ec\u5927\u90e8\u5206\u53ef\u4ee5\u4ea4\u4e92\u7684\u63a5\u53e3\n    \"\"\"\n\n    _ability_types: ClassVar[list[type]] = [\n        SceneAbility,\n        ConsumableEnergyAbility,\n        AssetAbility,\n        InteractableAbility,\n        PowerableAbility,\n        CollisionShapeAbility,\n        LightAbility,\n    ]\n</code></pre>"},{"location":"api/entity_mixin/#tongsim.entity.mixin.LightEntity","title":"LightEntity","text":"<p>               Bases: <code>MixinEntityBase</code>, <code>SceneAbility</code>, <code>AssetAbility</code>, <code>InteractableAbility</code>, <code>CollisionShapeAbility</code>, <code>LightAbility</code></p> <p>TongSim \u7684\u706f\u5b9e\u4f53</p> Source code in <code>src\\tongsim\\entity\\mixin.py</code> <pre><code>class LightEntity(\n    MixinEntityBase,\n    SceneAbility,\n    AssetAbility,\n    InteractableAbility,\n    CollisionShapeAbility,\n    LightAbility,\n):\n    \"\"\"\n    TongSim \u7684\u706f\u5b9e\u4f53\n    \"\"\"\n\n    _ability_types: ClassVar[list[type]] = [\n        SceneAbility,\n        AssetAbility,\n        InteractableAbility,\n        CollisionShapeAbility,\n        LightAbility,\n    ]\n</code></pre>"},{"location":"api/entity_mixin/#tongsim.entity.mixin.NPCEntity","title":"NPCEntity","text":"<p>               Bases: <code>MixinEntityBase</code>, <code>NPCActionAbility</code></p> <p>TongSim \u7684 NPC \u5b9e\u4f53</p> Source code in <code>src\\tongsim\\entity\\mixin.py</code> <pre><code>class NPCEntity(MixinEntityBase, NPCActionAbility):\n    \"\"\"\n    TongSim \u7684 NPC \u5b9e\u4f53\n    \"\"\"\n\n    _ability_types: ClassVar[list[type]] = [NPCActionAbility]\n\n    @classmethod\n    async def from_grpc(\n        cls, entity_id: str, world_context: WorldContext\n    ) -&gt; \"MixinEntityBase\":\n        # note: \u5f53\u524d NPC \u4e0d\u662f\u4e00\u4e2a gRPC subject, \u56e0\u6b64\u8df3\u8fc7 query components \u7684\u8fc7\u7a0b!\n        components: dict[ComponentType, list[str]] = defaultdict(list)\n        _logger.debug(\n            f\"[Consturct mixin entity from gRPC] Entity {entity_id}  ---  ability-types: {list(cls._ability_types)}\"\n        )\n        return await cls.create(entity_id, world_context, components)\n</code></pre>"},{"location":"api/manager_pg/","title":"\ud83d\udccc Manager - PG \u6a21\u5757","text":""},{"location":"api/manager_pg/#tongsim.manager.pg.manager","title":"tongsim.manager.pg.manager","text":""},{"location":"api/manager_pg/#tongsim.manager.pg.manager.PGManager","title":"PGManager","text":"<p>PGManager \u7ba1\u7406\u5168\u91cf PG(Parse-Graph) \u6570\u636e\u72b6\u6001\u3002 \u9ed8\u8ba4\u7ef4\u62a4\u5728 TongSim \u5bf9\u8c61\u5b9e\u4f8b\u4e2d\uff0c\u53ef\u901a\u8fc7\u5176\u5b50\u65b9\u6cd5 pg_manager() \u83b7\u53d6\u3002</p> <p>\u529f\u80fd:</p> <ul> <li>\u4ece gRPC Stream \u63a5\u6536\u589e\u91cf PG \u6570\u636e</li> <li>\u5c06\u589e\u91cf\u6570\u636e\u5408\u5e76\u4e3a\u7ed3\u6784\u5b8c\u6574\u7684\u5168\u91cf PG</li> <li>\u652f\u6301\u57fa\u4e8e subject/component ID \u7684\u9ad8\u6027\u80fd\u7d22\u5f15\u8bbf\u95ee</li> <li>\u63d0\u4f9b\u57fa\u4e8e metainfo \u7684\u5b57\u6bb5\u67e5\u8be2\u63a5\u53e3\uff0c\u652f\u6301\u540c\u6b65\u4e0e\u5f02\u6b65\u7248\u672c</li> </ul> <p>\u6ce8\u610f:</p> <ul> <li>\u6240\u6709\u64cd\u4f5c\u5747\u5728\u7ebf\u7a0b\u5185\u4e8b\u4ef6\u5faa\u73af\uff08AsyncLoop\uff09\u4e2d\u8c03\u5ea6\uff0c\u786e\u4fdd\u7ebf\u7a0b\u5b89\u5168\uff0c\u65e0\u9700\u9501\u3002</li> </ul> Source code in <code>src\\tongsim\\manager\\pg\\manager.py</code> <pre><code>class PGManager:\n    \"\"\"\n    PGManager \u7ba1\u7406\u5168\u91cf PG(Parse-Graph) \u6570\u636e\u72b6\u6001\u3002 \u9ed8\u8ba4\u7ef4\u62a4\u5728 TongSim \u5bf9\u8c61\u5b9e\u4f8b\u4e2d\uff0c\u53ef\u901a\u8fc7\u5176\u5b50\u65b9\u6cd5 pg_manager() \u83b7\u53d6\u3002\n\n    \u529f\u80fd:\n\n    - \u4ece gRPC Stream \u63a5\u6536\u589e\u91cf PG \u6570\u636e\n    - \u5c06\u589e\u91cf\u6570\u636e\u5408\u5e76\u4e3a\u7ed3\u6784\u5b8c\u6574\u7684\u5168\u91cf PG\n    - \u652f\u6301\u57fa\u4e8e subject/component ID \u7684\u9ad8\u6027\u80fd\u7d22\u5f15\u8bbf\u95ee\n    - \u63d0\u4f9b\u57fa\u4e8e metainfo \u7684\u5b57\u6bb5\u67e5\u8be2\u63a5\u53e3\uff0c\u652f\u6301\u540c\u6b65\u4e0e\u5f02\u6b65\u7248\u672c\n\n    \u6ce8\u610f:\n\n    - \u6240\u6709\u64cd\u4f5c\u5747\u5728\u7ebf\u7a0b\u5185\u4e8b\u4ef6\u5faa\u73af\uff08AsyncLoop\uff09\u4e2d\u8c03\u5ea6\uff0c\u786e\u4fdd\u7ebf\u7a0b\u5b89\u5168\uff0c\u65e0\u9700\u9501\u3002\n    \"\"\"\n\n    def __init__(self, world_context: WorldContext):\n        self._pg: dict = {}  # \u5f53\u524d\u5b8c\u6574 PG \u72b6\u6001\n        self._pg_freq: int = 10\n        self._indexer = PGIndexer()\n        self._context: WorldContext = world_context\n        self._stream_task: Future | None = None\n        self._stream = None\n        self._next_segmentation_id: int = 1\n        self._assign_segmentation_id: bool = True  # \u8bb0\u5f55\u5f53\u524d\u662f\u5426\u542f\u7528\u4e86\u5206\u5272\u56fe ID \u5206\u914d\n        self._event = asyncio.Event()\n\n    async def notify_new_pg(self) -&gt; AsyncIterator[dict]:\n        \"\"\"\n        \u5f02\u6b65\u63a8\u9001 PG \u66f4\u65b0\u3002\u6bcf\u5f53 _run_pg_stream \u5408\u5e76\u4e86\u65b0\u5e27\uff0c\u5c31 yield \u4e00\u6b21\u5f53\u524d\u7684 self._pg\uff0c\u8bf7\u4f7f\u7528\u5f02\u6b65\u51fd\u6570\u53bb\u8fd0\u884c\uff0c\u5426\u5219\u4f1a\u5361\u4f4f\n\n        \u8bf4\u660e\uff1a\n        - \u8fd9\u662f\u4e00\u4e2a\u201c\u70ed\u201d\u6d41\uff1a\u591a\u4e2a\u6d88\u8d39\u8005\u5e76\u884c\u8ba2\u9605\u65f6\uff0c\u90fd\u4f1a\u5728\u4e8b\u4ef6\u89e6\u53d1\u65f6\u5404\u81ea\u88ab\u5524\u9192\u3002\n        - \u8fd4\u56de\u7684 dict \u89c6\u4e3a\u53ea\u8bfb\u89c6\u56fe\uff1b\u82e5\u9700\u8981\u62f7\u8d1d\u8bf7\u5728\u6d88\u8d39\u8005\u4fa7\u81ea\u884c copy/deepcopy\u3002\n        \"\"\"\n        try:\n            while self.is_pg_stream_started:\n                await self._event.wait()\n                self._event.clear()\n                yield self._pg\n        except asyncio.CancelledError:\n            # \u8ba9\u4e0a\u5c42\u6b63\u5e38\u611f\u77e5\u53d6\u6d88\n            raise\n\n    @property\n    def is_pg_stream_started(self) -&gt; bool:\n        \"\"\"\n        \u5224\u65ad\u662f\u5426\u542f\u52a8 PG \u6d41\u76d1\u542c\n\n        Returns:\n             bool: \u662f\u5426\u5f00\u542f PG \u6d41\u76d1\u542c\n        \"\"\"\n        return self._stream_task and not self._stream_task.done()\n\n    def start_pg_stream(self, pg_freq: int = 10, assign_segmentation_id: bool = True):\n        \"\"\"\n        \u542f\u52a8 PG \u6d41\u76d1\u542c\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n        Args:\n            pg_freq (int): PG \u5237\u65b0\u9891\u7387\uff0c\u5355\u4f4d\u4e3a\u5e27\u6570\uff08\u9ed8\u8ba4\u6bcf 10 \u5e27\u66f4\u65b0\u4e00\u6b21\uff09\u3002\n            assign_segmentation_id (bool): \u662f\u5426\u542f\u7528\u5206\u5272\u56fe ID \u5206\u914d, \u9ed8\u8ba4\u4e3a True\uff0c\u5373\u81ea\u52a8\u7ed9\u573a\u666f\u4e2d\u6bcf\u4e2a\u7269\u4f53 \u5206\u914d\u5206\u5272\u56fe ID.\n        \"\"\"\n        self._context.sync_run(\n            self.async_start_pg_stream(pg_freq, assign_segmentation_id)\n        )\n\n    async def async_start_pg_stream(\n        self, pg_freq: int = 10, assign_segmentation_id: bool = True\n    ):\n        \"\"\"\n        \u542f\u52a8 PG \u6d41\u76d1\u542c\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        Args:\n            pg_freq (int): PG \u5237\u65b0\u9891\u7387\uff0c\u5355\u4f4d\u4e3a\u5e27\u6570\uff08\u9ed8\u8ba4\u6bcf 10 \u5e27\u66f4\u65b0\u4e00\u6b21\uff09\u3002\n            assign_segmentation_id (bool): \u662f\u5426\u542f\u7528\u5206\u5272\u56fe ID \u5206\u914d, \u9ed8\u8ba4\u4e3a True\uff0c\u5373\u81ea\u52a8\u7ed9\u573a\u666f\u4e2d\u6bcf\u4e2a\u7269\u4f53 \u5206\u914d\u5206\u5272\u56fe ID.\n        \"\"\"\n        if self._stream_task and not self._stream_task.done():\n            return\n\n        succ = await UnaryAPI.set_pg_frequency(self._context.conn, pg_freq)\n        if succ:\n            self._pg_freq = pg_freq\n            self._assign_segmentation_id = assign_segmentation_id\n\n            self._stream = UnaryStreamAPI.subscribe_pg(self._context.conn)\n            pg_iter = self._stream.__aiter__()\n            pg_msg = await anext(pg_iter)\n\n            # \u9884\u5904\u7406\u9996\u5e27: offload \u5230\u7ebf\u7a0b\u6c60\u6267\u884c\uff0c\u907f\u514d\u963b\u585e\u4e8b\u4ef6\u5faa\u73af\n\n            loop = asyncio.get_running_loop()\n            segment_id_map = await loop.run_in_executor(\n                None, self.do_merge_first_pg, pg_msg\n            )\n\n            if segment_id_map:\n                await UnaryAPI.set_segment_id(self._context.conn, segment_id_map)\n\n            self._stream_task = self._context.async_task(\n                self._run_pg_stream(self._stream),\n                name=f\"Context-{self._context.uuid} PG-Stream\",\n            )\n\n        else:\n            _logger.error(\"Context-{self._context.uuid} set pg freq failed\")\n\n    async def async_stop_pg_stream(self):\n        \"\"\"\n        \u505c\u6b62 PG \u6d41\u76d1\u542c\u4efb\u52a1\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        \u82e5\u5b58\u5728\u6d3b\u8dc3\u7684 PG \u6d41\u4efb\u52a1\uff0c\u5c06\u5c1d\u8bd5\u53d6\u6d88\u5e76\u7b49\u5f85\u5176\u6e05\u7406\u5b8c\u6210\u3002\n        \u540c\u65f6\u6e05\u7a7a PG \u6570\u636e\u7f13\u5b58\u3002\n\n        Raises:\n            asyncio.CancelledError: \u82e5\u53d6\u6d88\u5931\u8d25\u6216\u5411\u4e0a\u4f20\u64ad\u53d6\u6d88\u4fe1\u53f7\u3002\n        \"\"\"\n        if self._stream:\n            with contextlib.suppress(Exception):\n                self._stream.cancel()\n            self._stream = None\n\n        if self._stream_task and not self._stream_task.done():\n            self._stream_task.cancel()\n            try:\n                loop = asyncio.get_running_loop()\n                await loop.run_in_executor(\n                    None, self._stream_task.result\n                )  # \u963b\u585e\u62ff\u7ed3\u679c\uff0c\u907f\u514d await Future \u9519\u8bef\n            except asyncio.CancelledError:\n                _logger.debug(\n                    f\"PG stream task is stopped for context {self._context.uuid}\"\n                )\n            except Exception as e:\n                _logger.exception(f\"Exception during PG stream stop: {e}\")\n            self._stream_task = None\n            self._pg = {}\n            self._indexer.clear()\n            self._next_segmentation_id: int = 1\n            self._assign_segmentation_id: bool = True\n            self._event.set()\n\n    def do_merge_first_pg(self, pg_msg: dict) -&gt; dict[str, int] | None:\n        t0 = time.perf_counter()\n        new_pg = MessageToDict(\n            pg_msg,\n            preserving_proto_field_name=True,\n            always_print_fields_with_no_presence=True,\n        )\n        segment_id_map = self._merge_pg(new_pg)\n        t1 = time.perf_counter()\n        frame = new_pg.get(\"current_frame\", \"?\")\n        _logger.info(f\"Init full PG frame {frame} in {(t1 - t0) * 1000:.2f} ms\")\n        return segment_id_map\n\n    def fetch_full_pg_from_streaming(self) -&gt; dict:\n        \"\"\"\n        \u4ece PG \u6d41\u4e2d\u83b7\u53d6\u5f53\u524d\u7684\u5168\u91cf PG \u6570\u636e\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n        Returns:\n            dict: \u5f53\u524d\u5e27\u7684\u5b8c\u6574 PG \u6570\u636e\u7ed3\u6784\u3002\n        \"\"\"\n        return self._context.sync_run(self.async_fetch_full_pg_from_streaming())\n\n    async def async_fetch_full_pg_from_streaming(self) -&gt; dict:\n        \"\"\"\n        \u4ece PG \u6d41\u4e2d\u83b7\u53d6\u5f53\u524d\u7684\u5168\u91cf PG \u6570\u636e\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        Returns:\n            dict: \u5f53\u524d\u5e27\u7684\u5b8c\u6574 PG \u6570\u636e\u7ed3\u6784\u3002\n        \"\"\"\n        return self._pg\n\n    def fetch_subject_pg_from_streaming(self, sid: str) -&gt; dict | None:\n        \"\"\"\n        \u4ece PG \u6d41\u4e2d\u83b7\u53d6\u6307\u5b9a Subject \u7684 PG \u4fe1\u606f\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n        Args:\n            sid (str): Subject ID\u3002\n\n        Returns:\n            dict | None: \u8be5 Subject \u7684 PG \u6570\u636e\uff08\u82e5\u4e0d\u5b58\u5728\u5219\u4e3a None\uff09\u3002\n        \"\"\"\n        return self._context.sync_run(self.async_fetch_subject_pg_from_streaming(sid))\n\n    async def async_fetch_subject_pg_from_streaming(self, sid: str) -&gt; dict | None:\n        \"\"\"\n        \u4ece PG \u6d41\u4e2d\u83b7\u53d6\u6307\u5b9a Subject \u7684 PG \u4fe1\u606f\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        Args:\n            sid (str): Subject ID\u3002\n\n        Returns:\n            dict | None: \u8be5 Subject \u7684 PG \u6570\u636e\uff08\u82e5\u4e0d\u5b58\u5728\u5219\u4e3a None\uff09\u3002\n        \"\"\"\n        sidx = self._indexer.get_subject_index(sid)\n        if sidx is None:\n            return None\n        return self._pg[\"subject_pg\"][sidx]\n\n    def fetch_component_pg_from_streaming(self, sid: str, cid: str) -&gt; dict | None:\n        \"\"\"\n        \u83b7\u53d6\u6307\u5b9a\u7ec4\u4ef6\u7684 PG \u4fe1\u606f\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n        Args:\n            sid (str): Subject ID\u3002\n            cid (str): Component ID\u3002\n\n        Returns:\n            dict | None: \u6307\u5b9a\u7ec4\u4ef6\u7684 PG \u6570\u636e\uff08\u82e5\u4e0d\u5b58\u5728\u5219\u4e3a None\uff09\u3002\n        \"\"\"\n        return self._context.sync_run(\n            self.async_fetch_component_pg_from_streaming(sid, cid)\n        )\n\n    async def async_fetch_component_pg_from_streaming(\n        self, sid: str, cid: str\n    ) -&gt; dict | None:\n        \"\"\"\n        \u83b7\u53d6\u6307\u5b9a\u7ec4\u4ef6\u7684 PG \u4fe1\u606f\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        Args:\n            sid (str): Subject ID\u3002\n            cid (str): Component ID\u3002\n\n        Returns:\n            dict | None: \u6307\u5b9a\u7ec4\u4ef6\u7684 PG \u6570\u636e\uff08\u82e5\u4e0d\u5b58\u5728\u5219\u4e3a None\uff09\u3002\n        \"\"\"\n        sidx = self._indexer.get_subject_index(sid)\n        cidx = self._indexer.get_component_index(sid, cid)\n        if sidx is None or cidx is None:\n            return None\n        return self._pg[\"subject_pg\"][sidx][\"component_pg\"][cidx]\n\n    def query(self, metas: list[dict]) -&gt; dict[str, dict[str, Any]]:\n        \"\"\"\n        \u6267\u884c\u7ec4\u4ef6\u5b57\u6bb5\u67e5\u8be2\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n        \u5173\u4e8e metas \u53c2\u6570: \u53ef\u4f7f\u7528 get_pg_metainfo_schema() \u83b7\u53d6\u652f\u6301\u7684\u7ec4\u4ef6\u4e0e\u5b57\u6bb5\u3002\n\n        Args:\n            metas (list[dict]): \u67e5\u8be2\u5b57\u6bb5\u7684 metainfo \u5217\u8868\u3002\n\n        Returns:\n            dict[str, dict[str, Any]]: subject_id \u2192 \u5b57\u6bb5\u7ed3\u679c\u6620\u5c04\u3002\n                - \u952e\u4e3a subject_id\uff08\u4e3b\u4f53 ID\uff09\n                - \u503c\u4e3a\u4e00\u4e2a\u5b57\u5178\uff0c\u5305\u542b\u8be5\u4e3b\u4f53\u4e0a\u67e5\u8be2\u5230\u7684\u5b57\u6bb5\u7ed3\u679c\n                - \u9644\u52a0\u952e \"__meta__\" \u5305\u542b\u672c\u6b21\u67e5\u8be2\u7684\u5168\u5c40\u4fe1\u606f\n        \"\"\"\n        return self._context.sync_run(self.async_query_fields(metas))\n\n    async def async_query_fields(self, metas: list[dict]) -&gt; dict[str, dict[str, Any]]:\n        \"\"\"\n        \u6267\u884c\u7ec4\u4ef6\u5b57\u6bb5\u67e5\u8be2\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        \u5173\u4e8e metas \u53c2\u6570: \u53ef\u4f7f\u7528 get_pg_metainfo_schema() \u83b7\u53d6\u652f\u6301\u7684\u7ec4\u4ef6\u4e0e\u5b57\u6bb5\u3002\n\n        Args:\n            metas (list[dict]): \u67e5\u8be2\u5b57\u6bb5\u7684 metainfo \u5217\u8868\u3002\n\n        Returns:\n            dict[str, dict[str, Any]]: subject_id \u2192 \u5b57\u6bb5\u7ed3\u679c\u6620\u5c04\u3002\n                - \u952e\u4e3a subject_id\uff08\u4e3b\u4f53 ID\uff09\n                - \u503c\u4e3a\u4e00\u4e2a\u5b57\u5178\uff0c\u5305\u542b\u8be5\u4e3b\u4f53\u4e0a\u67e5\u8be2\u5230\u7684\u5b57\u6bb5\u7ed3\u679c\n                - \u9644\u52a0\u952e \"__meta__\" \u5305\u542b\u672c\u6b21\u67e5\u8be2\u7684\u5168\u5c40\u4fe1\u606f\n        \"\"\"\n        validated = self._validate_metas(metas)\n        metas_by_component = self._group_metas_by_component(validated)\n\n        result: dict[str, dict[str, Any]] = {}\n\n        for subj in self._pg.get(\"subject_pg\", []):\n            sid = subj[\"subject\"][\"id\"]\n            if self._subject_pass_filter(subj):\n                continue\n            self._extract_fields_from_subject(subj, sid, metas_by_component, result)\n\n        # \u52a0\u5165\u5168\u5c40\u5143\u4fe1\u606f\n        result[\"__meta__\"] = {\"beijing_timestamp\": self._pg.get(\"beijing_timestamp\", 0)}\n\n        return result\n\n    def get_pg_metainfo_schema(self) -&gt; dict[str, ComponentSchema]:\n        \"\"\"\n        \u83b7\u53d6\u5f53\u524d PG \u67e5\u8be2\u652f\u6301\u7684\u7ec4\u4ef6\u53ca\u5176\u5b57\u6bb5\u5b9a\u4e49\u3002\n\n        Returns:\n            \u7ec4\u4ef6\u540d \u2192 \u652f\u6301\u5b57\u6bb5\u540d \u5217\u8868\u3002\n        \"\"\"\n        return PG_COMPONENT_REGISTRY\n\n    async def _run_pg_stream(self, stream):\n        \"\"\"\n        \u4ece gRPC \u6d41\u4e2d\u6301\u7eed\u63a5\u6536\u589e\u91cf PG\uff0c\u5e76\u5408\u5e76\u5230\u5f53\u524d\u72b6\u6001\u3002\n        \"\"\"\n        max_duration_ms = 1000.0 / max(self._pg_freq, 1)\n\n        try:\n            async for pg_msg in stream:\n                t0 = time.perf_counter()\n                new_pg = MessageToDict(\n                    pg_msg,\n                    preserving_proto_field_name=True,\n                    always_print_fields_with_no_presence=True,\n                )\n                segment_id_map = self._merge_pg(new_pg)\n                self._event.set()\n\n                t1 = time.perf_counter()\n\n                duration_ms = (t1 - t0) * 1000\n                frame = new_pg.get(\"current_frame\", \"?\")\n\n                if duration_ms &gt; max_duration_ms:\n                    _logger.warning(\n                        f\"Merge PG frame {frame} took {duration_ms:.2f} ms (exceeds {max_duration_ms:.2f} ms budget)\"\n                    )\n                else:\n                    _logger.debug(f\"Merge PG frame {frame} in {duration_ms:.2f} ms\")\n\n                # \u8bbe\u7f6e\u589e\u91cf\u7684 segment_id\n                if segment_id_map:\n                    await UnaryAPI.set_segment_id(self._context.conn, segment_id_map)\n\n        except asyncio.CancelledError:\n            _logger.info(f\"PG stream task cancelled for context {self._context.uuid}\")\n            raise  # \u53d6\u6d88\u5e94\u5411\u4e0a\u4f20\u64ad\u4ee5\u4fbf\u6b63\u5e38\u5173\u95ed\n\n        except Exception as e:\n            _logger.exception(\n                f\"PG stream encountered error in context {self._context.uuid}: {e}\"\n            )\n\n    def _merge_pg(self, new_pg: dict) -&gt; dict[str, int] | None:\n        \"\"\"\u5c06\u589e\u91cf PG \u5408\u5e76\u5230 self._pg\uff0c\u5e76\u66f4\u65b0\u7d22\u5f15\u5668\"\"\"\n        if \"world_id\" in new_pg:\n            self._pg[\"world_id\"] = new_pg[\"world_id\"]\n        if \"current_frame\" in new_pg:\n            self._pg[\"current_frame\"] = new_pg[\"current_frame\"]\n        if \"beijing_timestamp\" in new_pg:\n            self._pg[\"beijing_timestamp\"] = new_pg[\"beijing_timestamp\"].get(\n                \"timestamp_ms\", 0\n            )\n\n        new_subject_ids: list[str] = []  # \u6536\u96c6\u7528\u4e8e\u8bbe\u7f6e \u5206\u5272\u56fe ID\n\n        for subject in new_pg.get(\"subject_pg\", []):\n            sid = subject[\"subject\"][\"id\"]\n            if not self._indexer.has_subject(sid):\n                self._merge_subject_new(subject, sid)\n                new_subject_ids.append(sid)\n            else:\n                self._merge_subject_existing(subject, sid)\n\n        if self._assign_segmentation_id and new_subject_ids:\n            sid_segid_map = {\n                sid: self._next_segmentation_id + i\n                for i, sid in enumerate(new_subject_ids)\n            }\n            self._next_segmentation_id += len(new_subject_ids)\n            return sid_segid_map\n        return None\n\n    def _merge_subject_new(self, subject: dict, sid: str):\n        self._pg.setdefault(\"subject_pg\", []).append(subject)\n        sidx = len(self._pg[\"subject_pg\"]) - 1\n        self._indexer.register_subject(sid, sidx)\n\n        for i, comp in enumerate(subject.get(\"component_pg\", [])):\n            if \"component\" in comp and \"id\" in comp[\"component\"]:\n                self._indexer.register_component(sid, comp[\"component\"][\"id\"], i)\n\n    def _merge_subject_existing(self, subject: dict, sid: str):\n        sidx = self._indexer.get_subject_index(sid)\n        subject_ref = self._pg[\"subject_pg\"][sidx]\n\n        if subject.get(\"subject_destroyed\"):\n            subject_ref[\"is_subject_destroyed\"] = True\n            return\n\n        for comp in subject.get(\"component_pg\", []):\n            if \"component\" not in comp or \"id\" not in comp[\"component\"]:\n                continue\n\n            cid = comp[\"component\"][\"id\"]\n            cidx = self._indexer.get_component_index(sid, cid)\n\n            if cidx is not None:\n                subject_ref[\"component_pg\"][cidx] = comp\n            else:\n                subject_ref[\"component_pg\"].append(comp)\n                self._indexer.register_component(\n                    sid, cid, len(subject_ref[\"component_pg\"]) - 1\n                )\n\n    def _validate_metas(self, metas: list[dict]) -&gt; list[PGQueryMeta]:\n        return [validate_query_meta(m) for m in metas]\n\n    def _group_metas_by_component(\n        self, metas: list[PGQueryMeta]\n    ) -&gt; dict[str, list[PGQueryMeta]]:\n        grouped: dict[str, list[PGQueryMeta]] = defaultdict(list)\n        for meta in metas:\n            grouped[meta[\"component\"]].append(meta)\n        return grouped\n\n    def _subject_pass_filter(self, subj: dict) -&gt; bool:\n        return subj.get(\"is_subject_destroyed\", False)\n\n    def _extract_fields_from_subject(\n        self,\n        subj: dict,\n        sid: str,\n        metas_by_component: dict[str, list[PGQueryMeta]],\n        result: dict[str, dict[str, Any]],\n    ):\n        for comp in subj.get(\"component_pg\", []):\n            cid = comp[\"component\"][\"id\"]\n\n            for component_name, metas in metas_by_component.items():\n                if component_name not in comp:\n                    continue\n\n                comp_data = comp[component_name]\n\n                for meta in metas:\n                    allow_multiple = meta.get(\"allow_multiple\", False)\n                    for field in meta[\"fields\"]:\n                        if field not in comp_data:\n                            continue\n\n                        field_name = meta.get(\"as_\", {}).get(field, field)\n                        result.setdefault(sid, {})\n\n                        if allow_multiple:\n                            result[sid].setdefault(field_name, []).append(\n                                {\n                                    \"component_id\": cid,\n                                    \"value\": comp_data[field],\n                                }\n                            )\n                        else:\n                            result[sid][field_name] = comp_data[field]\n</code></pre>"},{"location":"api/manager_pg/#tongsim.manager.pg.manager.PGManager.is_pg_stream_started","title":"is_pg_stream_started  <code>property</code>","text":"<pre><code>is_pg_stream_started: bool\n</code></pre> <p>\u5224\u65ad\u662f\u5426\u542f\u52a8 PG \u6d41\u76d1\u542c</p> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u662f\u5426\u5f00\u542f PG \u6d41\u76d1\u542c</p>"},{"location":"api/manager_pg/#tongsim.manager.pg.manager.PGManager.notify_new_pg","title":"notify_new_pg  <code>async</code>","text":"<pre><code>notify_new_pg() -&gt; AsyncIterator[dict]\n</code></pre> <p>\u5f02\u6b65\u63a8\u9001 PG \u66f4\u65b0\u3002\u6bcf\u5f53 _run_pg_stream \u5408\u5e76\u4e86\u65b0\u5e27\uff0c\u5c31 yield \u4e00\u6b21\u5f53\u524d\u7684 self._pg\uff0c\u8bf7\u4f7f\u7528\u5f02\u6b65\u51fd\u6570\u53bb\u8fd0\u884c\uff0c\u5426\u5219\u4f1a\u5361\u4f4f</p> <p>\u8bf4\u660e\uff1a - \u8fd9\u662f\u4e00\u4e2a\u201c\u70ed\u201d\u6d41\uff1a\u591a\u4e2a\u6d88\u8d39\u8005\u5e76\u884c\u8ba2\u9605\u65f6\uff0c\u90fd\u4f1a\u5728\u4e8b\u4ef6\u89e6\u53d1\u65f6\u5404\u81ea\u88ab\u5524\u9192\u3002 - \u8fd4\u56de\u7684 dict \u89c6\u4e3a\u53ea\u8bfb\u89c6\u56fe\uff1b\u82e5\u9700\u8981\u62f7\u8d1d\u8bf7\u5728\u6d88\u8d39\u8005\u4fa7\u81ea\u884c copy/deepcopy\u3002</p> Source code in <code>src\\tongsim\\manager\\pg\\manager.py</code> <pre><code>async def notify_new_pg(self) -&gt; AsyncIterator[dict]:\n    \"\"\"\n    \u5f02\u6b65\u63a8\u9001 PG \u66f4\u65b0\u3002\u6bcf\u5f53 _run_pg_stream \u5408\u5e76\u4e86\u65b0\u5e27\uff0c\u5c31 yield \u4e00\u6b21\u5f53\u524d\u7684 self._pg\uff0c\u8bf7\u4f7f\u7528\u5f02\u6b65\u51fd\u6570\u53bb\u8fd0\u884c\uff0c\u5426\u5219\u4f1a\u5361\u4f4f\n\n    \u8bf4\u660e\uff1a\n    - \u8fd9\u662f\u4e00\u4e2a\u201c\u70ed\u201d\u6d41\uff1a\u591a\u4e2a\u6d88\u8d39\u8005\u5e76\u884c\u8ba2\u9605\u65f6\uff0c\u90fd\u4f1a\u5728\u4e8b\u4ef6\u89e6\u53d1\u65f6\u5404\u81ea\u88ab\u5524\u9192\u3002\n    - \u8fd4\u56de\u7684 dict \u89c6\u4e3a\u53ea\u8bfb\u89c6\u56fe\uff1b\u82e5\u9700\u8981\u62f7\u8d1d\u8bf7\u5728\u6d88\u8d39\u8005\u4fa7\u81ea\u884c copy/deepcopy\u3002\n    \"\"\"\n    try:\n        while self.is_pg_stream_started:\n            await self._event.wait()\n            self._event.clear()\n            yield self._pg\n    except asyncio.CancelledError:\n        # \u8ba9\u4e0a\u5c42\u6b63\u5e38\u611f\u77e5\u53d6\u6d88\n        raise\n</code></pre>"},{"location":"api/manager_pg/#tongsim.manager.pg.manager.PGManager.start_pg_stream","title":"start_pg_stream","text":"<pre><code>start_pg_stream(\n    pg_freq: int = 10, assign_segmentation_id: bool = True\n)\n</code></pre> <p>\u542f\u52a8 PG \u6d41\u76d1\u542c\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Parameters:</p> Name Type Description Default <code>pg_freq</code> <code>int</code> <p>PG \u5237\u65b0\u9891\u7387\uff0c\u5355\u4f4d\u4e3a\u5e27\u6570\uff08\u9ed8\u8ba4\u6bcf 10 \u5e27\u66f4\u65b0\u4e00\u6b21\uff09\u3002</p> <code>10</code> <code>assign_segmentation_id</code> <code>bool</code> <p>\u662f\u5426\u542f\u7528\u5206\u5272\u56fe ID \u5206\u914d, \u9ed8\u8ba4\u4e3a True\uff0c\u5373\u81ea\u52a8\u7ed9\u573a\u666f\u4e2d\u6bcf\u4e2a\u7269\u4f53 \u5206\u914d\u5206\u5272\u56fe ID.</p> <code>True</code> Source code in <code>src\\tongsim\\manager\\pg\\manager.py</code> <pre><code>def start_pg_stream(self, pg_freq: int = 10, assign_segmentation_id: bool = True):\n    \"\"\"\n    \u542f\u52a8 PG \u6d41\u76d1\u542c\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n    Args:\n        pg_freq (int): PG \u5237\u65b0\u9891\u7387\uff0c\u5355\u4f4d\u4e3a\u5e27\u6570\uff08\u9ed8\u8ba4\u6bcf 10 \u5e27\u66f4\u65b0\u4e00\u6b21\uff09\u3002\n        assign_segmentation_id (bool): \u662f\u5426\u542f\u7528\u5206\u5272\u56fe ID \u5206\u914d, \u9ed8\u8ba4\u4e3a True\uff0c\u5373\u81ea\u52a8\u7ed9\u573a\u666f\u4e2d\u6bcf\u4e2a\u7269\u4f53 \u5206\u914d\u5206\u5272\u56fe ID.\n    \"\"\"\n    self._context.sync_run(\n        self.async_start_pg_stream(pg_freq, assign_segmentation_id)\n    )\n</code></pre>"},{"location":"api/manager_pg/#tongsim.manager.pg.manager.PGManager.async_start_pg_stream","title":"async_start_pg_stream  <code>async</code>","text":"<pre><code>async_start_pg_stream(\n    pg_freq: int = 10, assign_segmentation_id: bool = True\n)\n</code></pre> <p>\u542f\u52a8 PG \u6d41\u76d1\u542c\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Parameters:</p> Name Type Description Default <code>pg_freq</code> <code>int</code> <p>PG \u5237\u65b0\u9891\u7387\uff0c\u5355\u4f4d\u4e3a\u5e27\u6570\uff08\u9ed8\u8ba4\u6bcf 10 \u5e27\u66f4\u65b0\u4e00\u6b21\uff09\u3002</p> <code>10</code> <code>assign_segmentation_id</code> <code>bool</code> <p>\u662f\u5426\u542f\u7528\u5206\u5272\u56fe ID \u5206\u914d, \u9ed8\u8ba4\u4e3a True\uff0c\u5373\u81ea\u52a8\u7ed9\u573a\u666f\u4e2d\u6bcf\u4e2a\u7269\u4f53 \u5206\u914d\u5206\u5272\u56fe ID.</p> <code>True</code> Source code in <code>src\\tongsim\\manager\\pg\\manager.py</code> <pre><code>async def async_start_pg_stream(\n    self, pg_freq: int = 10, assign_segmentation_id: bool = True\n):\n    \"\"\"\n    \u542f\u52a8 PG \u6d41\u76d1\u542c\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    Args:\n        pg_freq (int): PG \u5237\u65b0\u9891\u7387\uff0c\u5355\u4f4d\u4e3a\u5e27\u6570\uff08\u9ed8\u8ba4\u6bcf 10 \u5e27\u66f4\u65b0\u4e00\u6b21\uff09\u3002\n        assign_segmentation_id (bool): \u662f\u5426\u542f\u7528\u5206\u5272\u56fe ID \u5206\u914d, \u9ed8\u8ba4\u4e3a True\uff0c\u5373\u81ea\u52a8\u7ed9\u573a\u666f\u4e2d\u6bcf\u4e2a\u7269\u4f53 \u5206\u914d\u5206\u5272\u56fe ID.\n    \"\"\"\n    if self._stream_task and not self._stream_task.done():\n        return\n\n    succ = await UnaryAPI.set_pg_frequency(self._context.conn, pg_freq)\n    if succ:\n        self._pg_freq = pg_freq\n        self._assign_segmentation_id = assign_segmentation_id\n\n        self._stream = UnaryStreamAPI.subscribe_pg(self._context.conn)\n        pg_iter = self._stream.__aiter__()\n        pg_msg = await anext(pg_iter)\n\n        # \u9884\u5904\u7406\u9996\u5e27: offload \u5230\u7ebf\u7a0b\u6c60\u6267\u884c\uff0c\u907f\u514d\u963b\u585e\u4e8b\u4ef6\u5faa\u73af\n\n        loop = asyncio.get_running_loop()\n        segment_id_map = await loop.run_in_executor(\n            None, self.do_merge_first_pg, pg_msg\n        )\n\n        if segment_id_map:\n            await UnaryAPI.set_segment_id(self._context.conn, segment_id_map)\n\n        self._stream_task = self._context.async_task(\n            self._run_pg_stream(self._stream),\n            name=f\"Context-{self._context.uuid} PG-Stream\",\n        )\n\n    else:\n        _logger.error(\"Context-{self._context.uuid} set pg freq failed\")\n</code></pre>"},{"location":"api/manager_pg/#tongsim.manager.pg.manager.PGManager.async_stop_pg_stream","title":"async_stop_pg_stream  <code>async</code>","text":"<pre><code>async_stop_pg_stream()\n</code></pre> <p>\u505c\u6b62 PG \u6d41\u76d1\u542c\u4efb\u52a1\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>\u82e5\u5b58\u5728\u6d3b\u8dc3\u7684 PG \u6d41\u4efb\u52a1\uff0c\u5c06\u5c1d\u8bd5\u53d6\u6d88\u5e76\u7b49\u5f85\u5176\u6e05\u7406\u5b8c\u6210\u3002 \u540c\u65f6\u6e05\u7a7a PG \u6570\u636e\u7f13\u5b58\u3002</p> <p>Raises:</p> Type Description <code>CancelledError</code> <p>\u82e5\u53d6\u6d88\u5931\u8d25\u6216\u5411\u4e0a\u4f20\u64ad\u53d6\u6d88\u4fe1\u53f7\u3002</p> Source code in <code>src\\tongsim\\manager\\pg\\manager.py</code> <pre><code>async def async_stop_pg_stream(self):\n    \"\"\"\n    \u505c\u6b62 PG \u6d41\u76d1\u542c\u4efb\u52a1\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    \u82e5\u5b58\u5728\u6d3b\u8dc3\u7684 PG \u6d41\u4efb\u52a1\uff0c\u5c06\u5c1d\u8bd5\u53d6\u6d88\u5e76\u7b49\u5f85\u5176\u6e05\u7406\u5b8c\u6210\u3002\n    \u540c\u65f6\u6e05\u7a7a PG \u6570\u636e\u7f13\u5b58\u3002\n\n    Raises:\n        asyncio.CancelledError: \u82e5\u53d6\u6d88\u5931\u8d25\u6216\u5411\u4e0a\u4f20\u64ad\u53d6\u6d88\u4fe1\u53f7\u3002\n    \"\"\"\n    if self._stream:\n        with contextlib.suppress(Exception):\n            self._stream.cancel()\n        self._stream = None\n\n    if self._stream_task and not self._stream_task.done():\n        self._stream_task.cancel()\n        try:\n            loop = asyncio.get_running_loop()\n            await loop.run_in_executor(\n                None, self._stream_task.result\n            )  # \u963b\u585e\u62ff\u7ed3\u679c\uff0c\u907f\u514d await Future \u9519\u8bef\n        except asyncio.CancelledError:\n            _logger.debug(\n                f\"PG stream task is stopped for context {self._context.uuid}\"\n            )\n        except Exception as e:\n            _logger.exception(f\"Exception during PG stream stop: {e}\")\n        self._stream_task = None\n        self._pg = {}\n        self._indexer.clear()\n        self._next_segmentation_id: int = 1\n        self._assign_segmentation_id: bool = True\n        self._event.set()\n</code></pre>"},{"location":"api/manager_pg/#tongsim.manager.pg.manager.PGManager.fetch_full_pg_from_streaming","title":"fetch_full_pg_from_streaming","text":"<pre><code>fetch_full_pg_from_streaming() -&gt; dict\n</code></pre> <p>\u4ece PG \u6d41\u4e2d\u83b7\u53d6\u5f53\u524d\u7684\u5168\u91cf PG \u6570\u636e\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>\u5f53\u524d\u5e27\u7684\u5b8c\u6574 PG \u6570\u636e\u7ed3\u6784\u3002</p> Source code in <code>src\\tongsim\\manager\\pg\\manager.py</code> <pre><code>def fetch_full_pg_from_streaming(self) -&gt; dict:\n    \"\"\"\n    \u4ece PG \u6d41\u4e2d\u83b7\u53d6\u5f53\u524d\u7684\u5168\u91cf PG \u6570\u636e\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n    Returns:\n        dict: \u5f53\u524d\u5e27\u7684\u5b8c\u6574 PG \u6570\u636e\u7ed3\u6784\u3002\n    \"\"\"\n    return self._context.sync_run(self.async_fetch_full_pg_from_streaming())\n</code></pre>"},{"location":"api/manager_pg/#tongsim.manager.pg.manager.PGManager.async_fetch_full_pg_from_streaming","title":"async_fetch_full_pg_from_streaming  <code>async</code>","text":"<pre><code>async_fetch_full_pg_from_streaming() -&gt; dict\n</code></pre> <p>\u4ece PG \u6d41\u4e2d\u83b7\u53d6\u5f53\u524d\u7684\u5168\u91cf PG \u6570\u636e\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>\u5f53\u524d\u5e27\u7684\u5b8c\u6574 PG \u6570\u636e\u7ed3\u6784\u3002</p> Source code in <code>src\\tongsim\\manager\\pg\\manager.py</code> <pre><code>async def async_fetch_full_pg_from_streaming(self) -&gt; dict:\n    \"\"\"\n    \u4ece PG \u6d41\u4e2d\u83b7\u53d6\u5f53\u524d\u7684\u5168\u91cf PG \u6570\u636e\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    Returns:\n        dict: \u5f53\u524d\u5e27\u7684\u5b8c\u6574 PG \u6570\u636e\u7ed3\u6784\u3002\n    \"\"\"\n    return self._pg\n</code></pre>"},{"location":"api/manager_pg/#tongsim.manager.pg.manager.PGManager.fetch_subject_pg_from_streaming","title":"fetch_subject_pg_from_streaming","text":"<pre><code>fetch_subject_pg_from_streaming(sid: str) -&gt; dict | None\n</code></pre> <p>\u4ece PG \u6d41\u4e2d\u83b7\u53d6\u6307\u5b9a Subject \u7684 PG \u4fe1\u606f\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Parameters:</p> Name Type Description Default <code>sid</code> <code>str</code> <p>Subject ID\u3002</p> required <p>Returns:</p> Type Description <code>dict | None</code> <p>dict | None: \u8be5 Subject \u7684 PG \u6570\u636e\uff08\u82e5\u4e0d\u5b58\u5728\u5219\u4e3a None\uff09\u3002</p> Source code in <code>src\\tongsim\\manager\\pg\\manager.py</code> <pre><code>def fetch_subject_pg_from_streaming(self, sid: str) -&gt; dict | None:\n    \"\"\"\n    \u4ece PG \u6d41\u4e2d\u83b7\u53d6\u6307\u5b9a Subject \u7684 PG \u4fe1\u606f\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n    Args:\n        sid (str): Subject ID\u3002\n\n    Returns:\n        dict | None: \u8be5 Subject \u7684 PG \u6570\u636e\uff08\u82e5\u4e0d\u5b58\u5728\u5219\u4e3a None\uff09\u3002\n    \"\"\"\n    return self._context.sync_run(self.async_fetch_subject_pg_from_streaming(sid))\n</code></pre>"},{"location":"api/manager_pg/#tongsim.manager.pg.manager.PGManager.async_fetch_subject_pg_from_streaming","title":"async_fetch_subject_pg_from_streaming  <code>async</code>","text":"<pre><code>async_fetch_subject_pg_from_streaming(\n    sid: str,\n) -&gt; dict | None\n</code></pre> <p>\u4ece PG \u6d41\u4e2d\u83b7\u53d6\u6307\u5b9a Subject \u7684 PG \u4fe1\u606f\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Parameters:</p> Name Type Description Default <code>sid</code> <code>str</code> <p>Subject ID\u3002</p> required <p>Returns:</p> Type Description <code>dict | None</code> <p>dict | None: \u8be5 Subject \u7684 PG \u6570\u636e\uff08\u82e5\u4e0d\u5b58\u5728\u5219\u4e3a None\uff09\u3002</p> Source code in <code>src\\tongsim\\manager\\pg\\manager.py</code> <pre><code>async def async_fetch_subject_pg_from_streaming(self, sid: str) -&gt; dict | None:\n    \"\"\"\n    \u4ece PG \u6d41\u4e2d\u83b7\u53d6\u6307\u5b9a Subject \u7684 PG \u4fe1\u606f\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    Args:\n        sid (str): Subject ID\u3002\n\n    Returns:\n        dict | None: \u8be5 Subject \u7684 PG \u6570\u636e\uff08\u82e5\u4e0d\u5b58\u5728\u5219\u4e3a None\uff09\u3002\n    \"\"\"\n    sidx = self._indexer.get_subject_index(sid)\n    if sidx is None:\n        return None\n    return self._pg[\"subject_pg\"][sidx]\n</code></pre>"},{"location":"api/manager_pg/#tongsim.manager.pg.manager.PGManager.fetch_component_pg_from_streaming","title":"fetch_component_pg_from_streaming","text":"<pre><code>fetch_component_pg_from_streaming(\n    sid: str, cid: str\n) -&gt; dict | None\n</code></pre> <p>\u83b7\u53d6\u6307\u5b9a\u7ec4\u4ef6\u7684 PG \u4fe1\u606f\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Parameters:</p> Name Type Description Default <code>sid</code> <code>str</code> <p>Subject ID\u3002</p> required <code>cid</code> <code>str</code> <p>Component ID\u3002</p> required <p>Returns:</p> Type Description <code>dict | None</code> <p>dict | None: \u6307\u5b9a\u7ec4\u4ef6\u7684 PG \u6570\u636e\uff08\u82e5\u4e0d\u5b58\u5728\u5219\u4e3a None\uff09\u3002</p> Source code in <code>src\\tongsim\\manager\\pg\\manager.py</code> <pre><code>def fetch_component_pg_from_streaming(self, sid: str, cid: str) -&gt; dict | None:\n    \"\"\"\n    \u83b7\u53d6\u6307\u5b9a\u7ec4\u4ef6\u7684 PG \u4fe1\u606f\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n    Args:\n        sid (str): Subject ID\u3002\n        cid (str): Component ID\u3002\n\n    Returns:\n        dict | None: \u6307\u5b9a\u7ec4\u4ef6\u7684 PG \u6570\u636e\uff08\u82e5\u4e0d\u5b58\u5728\u5219\u4e3a None\uff09\u3002\n    \"\"\"\n    return self._context.sync_run(\n        self.async_fetch_component_pg_from_streaming(sid, cid)\n    )\n</code></pre>"},{"location":"api/manager_pg/#tongsim.manager.pg.manager.PGManager.async_fetch_component_pg_from_streaming","title":"async_fetch_component_pg_from_streaming  <code>async</code>","text":"<pre><code>async_fetch_component_pg_from_streaming(\n    sid: str, cid: str\n) -&gt; dict | None\n</code></pre> <p>\u83b7\u53d6\u6307\u5b9a\u7ec4\u4ef6\u7684 PG \u4fe1\u606f\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Parameters:</p> Name Type Description Default <code>sid</code> <code>str</code> <p>Subject ID\u3002</p> required <code>cid</code> <code>str</code> <p>Component ID\u3002</p> required <p>Returns:</p> Type Description <code>dict | None</code> <p>dict | None: \u6307\u5b9a\u7ec4\u4ef6\u7684 PG \u6570\u636e\uff08\u82e5\u4e0d\u5b58\u5728\u5219\u4e3a None\uff09\u3002</p> Source code in <code>src\\tongsim\\manager\\pg\\manager.py</code> <pre><code>async def async_fetch_component_pg_from_streaming(\n    self, sid: str, cid: str\n) -&gt; dict | None:\n    \"\"\"\n    \u83b7\u53d6\u6307\u5b9a\u7ec4\u4ef6\u7684 PG \u4fe1\u606f\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    Args:\n        sid (str): Subject ID\u3002\n        cid (str): Component ID\u3002\n\n    Returns:\n        dict | None: \u6307\u5b9a\u7ec4\u4ef6\u7684 PG \u6570\u636e\uff08\u82e5\u4e0d\u5b58\u5728\u5219\u4e3a None\uff09\u3002\n    \"\"\"\n    sidx = self._indexer.get_subject_index(sid)\n    cidx = self._indexer.get_component_index(sid, cid)\n    if sidx is None or cidx is None:\n        return None\n    return self._pg[\"subject_pg\"][sidx][\"component_pg\"][cidx]\n</code></pre>"},{"location":"api/manager_pg/#tongsim.manager.pg.manager.PGManager.query","title":"query","text":"<pre><code>query(metas: list[dict]) -&gt; dict[str, dict[str, Any]]\n</code></pre> <p>\u6267\u884c\u7ec4\u4ef6\u5b57\u6bb5\u67e5\u8be2\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002</p> <p>\u5173\u4e8e metas \u53c2\u6570: \u53ef\u4f7f\u7528 get_pg_metainfo_schema() \u83b7\u53d6\u652f\u6301\u7684\u7ec4\u4ef6\u4e0e\u5b57\u6bb5\u3002</p> <p>Parameters:</p> Name Type Description Default <code>metas</code> <code>list[dict]</code> <p>\u67e5\u8be2\u5b57\u6bb5\u7684 metainfo \u5217\u8868\u3002</p> required <p>Returns:</p> Type Description <code>dict[str, dict[str, Any]]</code> <p>dict[str, dict[str, Any]]: subject_id \u2192 \u5b57\u6bb5\u7ed3\u679c\u6620\u5c04\u3002 - \u952e\u4e3a subject_id\uff08\u4e3b\u4f53 ID\uff09 - \u503c\u4e3a\u4e00\u4e2a\u5b57\u5178\uff0c\u5305\u542b\u8be5\u4e3b\u4f53\u4e0a\u67e5\u8be2\u5230\u7684\u5b57\u6bb5\u7ed3\u679c - \u9644\u52a0\u952e \"meta\" \u5305\u542b\u672c\u6b21\u67e5\u8be2\u7684\u5168\u5c40\u4fe1\u606f</p> Source code in <code>src\\tongsim\\manager\\pg\\manager.py</code> <pre><code>def query(self, metas: list[dict]) -&gt; dict[str, dict[str, Any]]:\n    \"\"\"\n    \u6267\u884c\u7ec4\u4ef6\u5b57\u6bb5\u67e5\u8be2\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n    \u5173\u4e8e metas \u53c2\u6570: \u53ef\u4f7f\u7528 get_pg_metainfo_schema() \u83b7\u53d6\u652f\u6301\u7684\u7ec4\u4ef6\u4e0e\u5b57\u6bb5\u3002\n\n    Args:\n        metas (list[dict]): \u67e5\u8be2\u5b57\u6bb5\u7684 metainfo \u5217\u8868\u3002\n\n    Returns:\n        dict[str, dict[str, Any]]: subject_id \u2192 \u5b57\u6bb5\u7ed3\u679c\u6620\u5c04\u3002\n            - \u952e\u4e3a subject_id\uff08\u4e3b\u4f53 ID\uff09\n            - \u503c\u4e3a\u4e00\u4e2a\u5b57\u5178\uff0c\u5305\u542b\u8be5\u4e3b\u4f53\u4e0a\u67e5\u8be2\u5230\u7684\u5b57\u6bb5\u7ed3\u679c\n            - \u9644\u52a0\u952e \"__meta__\" \u5305\u542b\u672c\u6b21\u67e5\u8be2\u7684\u5168\u5c40\u4fe1\u606f\n    \"\"\"\n    return self._context.sync_run(self.async_query_fields(metas))\n</code></pre>"},{"location":"api/manager_pg/#tongsim.manager.pg.manager.PGManager.async_query_fields","title":"async_query_fields  <code>async</code>","text":"<pre><code>async_query_fields(\n    metas: list[dict],\n) -&gt; dict[str, dict[str, Any]]\n</code></pre> <p>\u6267\u884c\u7ec4\u4ef6\u5b57\u6bb5\u67e5\u8be2\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>\u5173\u4e8e metas \u53c2\u6570: \u53ef\u4f7f\u7528 get_pg_metainfo_schema() \u83b7\u53d6\u652f\u6301\u7684\u7ec4\u4ef6\u4e0e\u5b57\u6bb5\u3002</p> <p>Parameters:</p> Name Type Description Default <code>metas</code> <code>list[dict]</code> <p>\u67e5\u8be2\u5b57\u6bb5\u7684 metainfo \u5217\u8868\u3002</p> required <p>Returns:</p> Type Description <code>dict[str, dict[str, Any]]</code> <p>dict[str, dict[str, Any]]: subject_id \u2192 \u5b57\u6bb5\u7ed3\u679c\u6620\u5c04\u3002 - \u952e\u4e3a subject_id\uff08\u4e3b\u4f53 ID\uff09 - \u503c\u4e3a\u4e00\u4e2a\u5b57\u5178\uff0c\u5305\u542b\u8be5\u4e3b\u4f53\u4e0a\u67e5\u8be2\u5230\u7684\u5b57\u6bb5\u7ed3\u679c - \u9644\u52a0\u952e \"meta\" \u5305\u542b\u672c\u6b21\u67e5\u8be2\u7684\u5168\u5c40\u4fe1\u606f</p> Source code in <code>src\\tongsim\\manager\\pg\\manager.py</code> <pre><code>async def async_query_fields(self, metas: list[dict]) -&gt; dict[str, dict[str, Any]]:\n    \"\"\"\n    \u6267\u884c\u7ec4\u4ef6\u5b57\u6bb5\u67e5\u8be2\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    \u5173\u4e8e metas \u53c2\u6570: \u53ef\u4f7f\u7528 get_pg_metainfo_schema() \u83b7\u53d6\u652f\u6301\u7684\u7ec4\u4ef6\u4e0e\u5b57\u6bb5\u3002\n\n    Args:\n        metas (list[dict]): \u67e5\u8be2\u5b57\u6bb5\u7684 metainfo \u5217\u8868\u3002\n\n    Returns:\n        dict[str, dict[str, Any]]: subject_id \u2192 \u5b57\u6bb5\u7ed3\u679c\u6620\u5c04\u3002\n            - \u952e\u4e3a subject_id\uff08\u4e3b\u4f53 ID\uff09\n            - \u503c\u4e3a\u4e00\u4e2a\u5b57\u5178\uff0c\u5305\u542b\u8be5\u4e3b\u4f53\u4e0a\u67e5\u8be2\u5230\u7684\u5b57\u6bb5\u7ed3\u679c\n            - \u9644\u52a0\u952e \"__meta__\" \u5305\u542b\u672c\u6b21\u67e5\u8be2\u7684\u5168\u5c40\u4fe1\u606f\n    \"\"\"\n    validated = self._validate_metas(metas)\n    metas_by_component = self._group_metas_by_component(validated)\n\n    result: dict[str, dict[str, Any]] = {}\n\n    for subj in self._pg.get(\"subject_pg\", []):\n        sid = subj[\"subject\"][\"id\"]\n        if self._subject_pass_filter(subj):\n            continue\n        self._extract_fields_from_subject(subj, sid, metas_by_component, result)\n\n    # \u52a0\u5165\u5168\u5c40\u5143\u4fe1\u606f\n    result[\"__meta__\"] = {\"beijing_timestamp\": self._pg.get(\"beijing_timestamp\", 0)}\n\n    return result\n</code></pre>"},{"location":"api/manager_pg/#tongsim.manager.pg.manager.PGManager.get_pg_metainfo_schema","title":"get_pg_metainfo_schema","text":"<pre><code>get_pg_metainfo_schema() -&gt; dict[str, ComponentSchema]\n</code></pre> <p>\u83b7\u53d6\u5f53\u524d PG \u67e5\u8be2\u652f\u6301\u7684\u7ec4\u4ef6\u53ca\u5176\u5b57\u6bb5\u5b9a\u4e49\u3002</p> <p>Returns:</p> Type Description <code>dict[str, ComponentSchema]</code> <p>\u7ec4\u4ef6\u540d \u2192 \u652f\u6301\u5b57\u6bb5\u540d \u5217\u8868\u3002</p> Source code in <code>src\\tongsim\\manager\\pg\\manager.py</code> <pre><code>def get_pg_metainfo_schema(self) -&gt; dict[str, ComponentSchema]:\n    \"\"\"\n    \u83b7\u53d6\u5f53\u524d PG \u67e5\u8be2\u652f\u6301\u7684\u7ec4\u4ef6\u53ca\u5176\u5b57\u6bb5\u5b9a\u4e49\u3002\n\n    Returns:\n        \u7ec4\u4ef6\u540d \u2192 \u652f\u6301\u5b57\u6bb5\u540d \u5217\u8868\u3002\n    \"\"\"\n    return PG_COMPONENT_REGISTRY\n</code></pre>"},{"location":"api/manager_spatial/","title":"\ud83d\udccc Manager - Spatial \u6a21\u5757","text":""},{"location":"api/manager_spatial/#tongsim.manager.spatial","title":"tongsim.manager.spatial","text":""},{"location":"api/manager_spatial/#tongsim.manager.spatial.SpatialManager","title":"SpatialManager","text":"<p>SpatialManager \u63d0\u4f9b\u5bf9\u573a\u666f\u7a7a\u95f4\u7ed3\u6784\u7684\u8bbf\u95ee\u80fd\u529b\uff0c\u5305\u62ec: \u623f\u95f4\u4fe1\u606f\u3001\u5bfc\u822a\u3001\u51fa\u751f\u70b9\u7b49\u7b49\u3002\u9ed8\u8ba4\u7ef4\u62a4\u5728 TongSim \u5bf9\u8c61\u5b9e\u4f8b\u4e2d\uff0c\u53ef\u901a\u8fc7\u5176\u5b50\u65b9\u6cd5 spatial_manager() \u83b7\u53d6\u3002</p> Source code in <code>src\\tongsim\\manager\\spatial\\manager.py</code> <pre><code>class SpatialManager:\n    \"\"\"\n    SpatialManager \u63d0\u4f9b\u5bf9\u573a\u666f\u7a7a\u95f4\u7ed3\u6784\u7684\u8bbf\u95ee\u80fd\u529b\uff0c\u5305\u62ec: \u623f\u95f4\u4fe1\u606f\u3001\u5bfc\u822a\u3001\u51fa\u751f\u70b9\u7b49\u7b49\u3002\u9ed8\u8ba4\u7ef4\u62a4\u5728 TongSim \u5bf9\u8c61\u5b9e\u4f8b\u4e2d\uff0c\u53ef\u901a\u8fc7\u5176\u5b50\u65b9\u6cd5 spatial_manager() \u83b7\u53d6\u3002\n    \"\"\"\n\n    def __init__(self, world_context: WorldContext):\n        self._context: WorldContext = world_context\n\n    def get_current_room_info(self) -&gt; list[dict]:\n        \"\"\"\n        \u83b7\u53d6\u5f53\u524d\u5730\u56fe\u4e2d\u6240\u6709\u623f\u95f4\u4fe1\u606f\u3002\n\n        Returns:\n            list[dict]: \u6bcf\u4e2a\u623f\u95f4\u4fe1\u606f\u5305\u542b\u5982\u4e0b\u5b57\u6bb5:\n                - room_name (str)\n                - room_category (str)\n                - boxes (list[dict]): AABB \u8fb9\u754c\u6846\uff0c\u5305\u542b min/max \u4e09\u7ef4\u5750\u6807\u3002\n        \"\"\"\n        return self._context.sync_run(self.async_get_current_room_info())\n\n    async def async_get_current_room_info(self) -&gt; list[dict]:\n        \"\"\"\n        \u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u5730\u56fe\u623f\u95f4\u4fe1\u606f\u3002\n\n        Returns:\n            list[dict]: \u6bcf\u4e2a\u623f\u95f4\u4fe1\u606f\u5305\u542b\u5982\u4e0b\u5b57\u6bb5:\n                - room_name (str)\n                - room_category (str)\n                - boxes (list[dict]): AABB \u8fb9\u754c\u6846\uff0c\u5305\u542b min/max \u4e09\u7ef4\u5750\u6807\u3002\n        \"\"\"\n        return await UnaryAPI.get_room_info(self._context.conn)\n\n    def get_nearest_nav_position(self, target_location: Vector3) -&gt; Vector3 | None:\n        \"\"\"\n        \u83b7\u53d6\u76ee\u6807\u70b9\u9644\u8fd1\u6700\u8fd1\u7684\u53ef\u5bfc\u822a\u4f4d\u7f6e\u3002\n\n        Args:\n            target_location (Vector3): \u5f85\u67e5\u8be2\u7684\u76ee\u6807\u4f4d\u7f6e\u3002\n\n        Returns:\n            Vector3: \u5bfc\u822a\u7f51\u683c\u4e2d\u6700\u8fd1\u7684\u6709\u6548\u70b9\u3002\n        \"\"\"\n        return self._context.sync_run(\n            self.async_get_nearest_nav_position(target_location)\n        )\n\n    async def async_get_nearest_nav_position(\n        self, target_location: Vector3\n    ) -&gt; Vector3 | None:\n        \"\"\"\n        \u5f02\u6b65\u7248\u672c: \u83b7\u53d6\u76ee\u6807\u70b9\u9644\u8fd1\u6700\u8fd1\u7684\u53ef\u5bfc\u822a\u4f4d\u7f6e\u3002\n\n        Args:\n            target_location (Vector3): \u5f85\u67e5\u8be2\u7684\u76ee\u6807\u4f4d\u7f6e\u3002\n\n        Returns:\n            Vector3: \u5bfc\u822a\u7f51\u683c\u4e2d\u6700\u8fd1\u7684\u6709\u6548\u70b9\u3002\n        \"\"\"\n        return await UnaryAPI.get_nearest_nav_point(self._context.conn, target_location)\n\n    def get_random_spawn_location(self, room_name: str = \"\") -&gt; Vector3 | None:\n        \"\"\"\n        \u67e5\u8be2\u6307\u5b9a\u623f\u95f4\u5185\u6216\u6574\u4e2a\u5730\u56fe\u4e2d\u53ef\u7528\u4e8e\u751f\u6210\u667a\u80fd\u4f53\u7684\u968f\u673a\u4f4d\u7f6e\u3002\n\n        Args:\n            room_name (str): \u623f\u95f4\u540d\u79f0\uff08\u53ef\u9009\uff09\u3002\u82e5\u4e3a\u7a7a\uff0c\u5219\u81ea\u52a8\u4ece\u6240\u6709\u623f\u95f4\u4e2d\u9009\u62e9\u3002\n\n        Returns:\n            Vector3: \u53ef\u7528\u4e8e spawn \u7684\u968f\u673a\u5bfc\u822a\u4f4d\u7f6e\u3002\n        \"\"\"\n        return self._context.sync_run(self.async_get_random_spawn_location(room_name))\n\n    async def async_get_random_spawn_location(\n        self, room_name: str = \"\"\n    ) -&gt; Vector3 | None:\n        \"\"\"\n        \u5f02\u6b65\u7248\u672c: \u67e5\u8be2\u6307\u5b9a\u623f\u95f4\u6216\u5730\u56fe\u4e2d\u53ef spawn \u7684\u968f\u673a\u5bfc\u822a\u4f4d\u7f6e\u3002\n\n        Args:\n            room_name (str): \u623f\u95f4\u540d\u79f0\uff08\u53ef\u9009\uff09\u3002\u82e5\u4e3a\u7a7a\uff0c\u5219\u81ea\u52a8\u4ece\u6240\u6709\u623f\u95f4\u4e2d\u9009\u62e9\u3002\n\n        Returns:\n            Vector3: \u53ef\u7528\u4e8e spawn \u7684\u968f\u673a\u5bfc\u822a\u4f4d\u7f6e\u3002\n        \"\"\"\n        return await UnaryAPI.get_random_spawn_location(self._context.conn, room_name)\n\n    def get_room_name_from_location(self, location: Vector3) -&gt; str:\n        \"\"\"\n        \u83b7\u5f97\u8be5\u4f4d\u7f6e\u6240\u5728\u7684\u623f\u95f4\u540d\n\n        Args:\n            location (Vector3): \u67e5\u8be2\u4f4d\u7f6e\u4e09\u7ef4\u5750\u6807\u70b9\n\n        Return:\n             str: \u8be5\u4f4d\u7f6e\u6240\u5728\u623f\u95f4\u540d\uff0c\u5982\u679c\u4e0d\u5728\u4efb\u4f55\u623f\u95f4\u533a\u57df\u8fd4\u56de\"None\"\n        \"\"\"\n        return self._context.sync_run(self.async_get_room_name_from_location(location))\n\n    async def async_get_room_name_from_location(self, location: Vector3) -&gt; str:\n        \"\"\"\n        \u5f02\u6b65\u7248\u672c\uff1a\u83b7\u5f97\u8be5\u4f4d\u7f6e\u6240\u5728\u7684\u623f\u95f4\u540d\n\n        Args:\n            location (Vector3): \u67e5\u8be2\u4f4d\u7f6e\u4e09\u7ef4\u5750\u6807\u70b9\n\n        Return:\n             str: \u8be5\u4f4d\u7f6e\u6240\u5728\u623f\u95f4\u540d\uff0c\u5982\u679c\u4e0d\u5728\u4efb\u4f55\u623f\u95f4\u533a\u57df\u8fd4\u56de\"None\"\n        \"\"\"\n        return await UnaryAPI.get_room_name_from_location(self._context.conn, location)\n\n    def get_room_array(self) -&gt; list[str]:\n        \"\"\"\n        \u83b7\u5f97\u5f53\u524d\u5730\u56fe\u6240\u6709\u623f\u95f4\n\n        Returns:\n            list[str]: \u5f97\u5230\u6240\u6709\u623f\u95f4\u540d\u5b57\u5217\u8868\n        \"\"\"\n        return self._context.sync_run(self.async_get_room_array())\n\n    async def async_get_room_array(self) -&gt; list[str]:\n        \"\"\"\n        \u5f02\u6b65\u7248\u672c\uff1a\u83b7\u5f97\u5f53\u524d\u5730\u56fe\u6240\u6709\u623f\u95f4\n\n        Returns:\n            list[str]: \u5f97\u5230\u6240\u6709\u623f\u95f4\u540d\u5b57\u5217\u8868\n        \"\"\"\n        return await UnaryAPI.get_room_array(self._context.conn)\n\n    def get_nav_point_ringlike(\n        self, center: Vector3, min_radius: float, max_radius: float, room: str\n    ) -&gt; Vector3:\n        \"\"\"\n        \u540c\u6b65\u7248\u672c\uff1a\u83b7\u53d6\u6307\u5b9a\u73af\u5f62\u533a\u57df\u968f\u673a\u70b9\u3002\n\n        Args:\n            center (Vector3): \u73af\u5f62\u533a\u57df\u4e2d\u5fc3\u4f4d\u7f6e\u3002\n            min_radius (float): \u5185\u5708\u534a\u5f84\u3002\n            max_radius (float): \u5916\u5708\u534a\u5f84\u3002\n            room (str): \u623f\u95f4\u5185\u540d\u79f0\uff08\u9650\u5b9a\u5728\u623f\u95f4\u5185\uff0c\u9ed8\u8ba4\u6ca1\u6709\u623f\u95f4\u9650\u5b9a\uff09\u3002\n\n        Returns:\n            Vector3: \u73af\u5f62\u533a\u57df\u5185\u968f\u673a\u70b9\n        \"\"\"\n        return self._context.sync_run(\n            self.async_get_nav_point_ringlike(center, min_radius, max_radius, room)\n        )\n\n    async def async_get_nav_point_ringlike(\n        self, center: Vector3, min_radius: float, max_radius: float, room: str = \"\"\n    ) -&gt; Vector3:\n        \"\"\"\n        \u5f02\u6b65\u7248\u672c\uff1a\u83b7\u53d6\u6307\u5b9a\u73af\u5f62\u533a\u57df\u968f\u673a\u70b9\u3002\n\n        Args:\n            center (Vector3): \u73af\u5f62\u533a\u57df\u4e2d\u5fc3\u4f4d\u7f6e\u3002\n            min_radius (float): \u5185\u5708\u534a\u5f84\u3002\n            max_radius (float): \u5916\u5708\u534a\u5f84\u3002\n            room (str): \u623f\u95f4\u5185\u540d\u79f0\uff08\u9650\u5b9a\u5728\u623f\u95f4\u5185\uff0c\u9ed8\u8ba4\u6ca1\u6709\u623f\u95f4\u9650\u5b9a\uff09\u3002\n\n        Returns:\n            Vector3: \u73af\u5f62\u533a\u57df\u5185\u968f\u673a\u70b9\n        \"\"\"\n        return await UnaryAPI.get_nav_point_ringlike(\n            self._context.conn, center, min_radius, max_radius, room\n        )\n\n    def get_navmesh_polys_in_room(self, room_name: str) -&gt; list[list[Vector3]]:\n        \"\"\"\n        \u83b7\u53d6\u623f\u95f4\u5185\u5bfc\u822a\u7f51\u683c\u591a\u8fb9\u5f62\u9876\u70b9\u5217\u8868\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n        Args:\n            room_name (str): \u623f\u95f4\u540d\u79f0\u3002\n\n        Returns:\n            list[list[Vector3]]: \u5bfc\u822a\u7f51\u683c\u591a\u8fb9\u5f62\u96c6\u5408\u3002\u6bcf\u4e2a\u5143\u7d20\u8868\u793a\u4e00\u4e2a\u591a\u8fb9\u5f62\u7684\u9876\u70b9\u5217\u8868\uff0c\u9876\u70b9\u7c7b\u578b\u4e3a Vector3\u3002\n        \"\"\"\n        return self._context.sync_run(self.async_get_navmesh_polys_in_room(room_name))\n\n    async def async_get_navmesh_polys_in_room(\n        self, room_name: str\n    ) -&gt; list[list[Vector3]]:\n        \"\"\"\n        \u83b7\u53d6\u623f\u95f4\u5185\u5bfc\u822a\u7f51\u683c\u591a\u8fb9\u5f62\u9876\u70b9\u5217\u8868\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n        Args:\n            room_name (str): \u623f\u95f4\u540d\u79f0\u3002\n\n        Returns:\n            list[list[Vector3]]: \u5bfc\u822a\u7f51\u683c\u591a\u8fb9\u5f62\u96c6\u5408\u3002\u6bcf\u4e2a\u5143\u7d20\u8868\u793a\u4e00\u4e2a\u591a\u8fb9\u5f62\u7684\u9876\u70b9\u5217\u8868\uff0c\u9876\u70b9\u7c7b\u578b\u4e3a Vector3\u3002\n        \"\"\"\n        return await UnaryAPI.get_nevmesh_polys_in_room(\n            self._context.conn, room_name=room_name\n        )\n</code></pre>"},{"location":"api/manager_spatial/#tongsim.manager.spatial.SpatialManager.get_current_room_info","title":"get_current_room_info","text":"<pre><code>get_current_room_info() -&gt; list[dict]\n</code></pre> <p>\u83b7\u53d6\u5f53\u524d\u5730\u56fe\u4e2d\u6240\u6709\u623f\u95f4\u4fe1\u606f\u3002</p> <p>Returns:</p> Type Description <code>list[dict]</code> <p>list[dict]: \u6bcf\u4e2a\u623f\u95f4\u4fe1\u606f\u5305\u542b\u5982\u4e0b\u5b57\u6bb5: - room_name (str) - room_category (str) - boxes (list[dict]): AABB \u8fb9\u754c\u6846\uff0c\u5305\u542b min/max \u4e09\u7ef4\u5750\u6807\u3002</p> Source code in <code>src\\tongsim\\manager\\spatial\\manager.py</code> <pre><code>def get_current_room_info(self) -&gt; list[dict]:\n    \"\"\"\n    \u83b7\u53d6\u5f53\u524d\u5730\u56fe\u4e2d\u6240\u6709\u623f\u95f4\u4fe1\u606f\u3002\n\n    Returns:\n        list[dict]: \u6bcf\u4e2a\u623f\u95f4\u4fe1\u606f\u5305\u542b\u5982\u4e0b\u5b57\u6bb5:\n            - room_name (str)\n            - room_category (str)\n            - boxes (list[dict]): AABB \u8fb9\u754c\u6846\uff0c\u5305\u542b min/max \u4e09\u7ef4\u5750\u6807\u3002\n    \"\"\"\n    return self._context.sync_run(self.async_get_current_room_info())\n</code></pre>"},{"location":"api/manager_spatial/#tongsim.manager.spatial.SpatialManager.async_get_current_room_info","title":"async_get_current_room_info  <code>async</code>","text":"<pre><code>async_get_current_room_info() -&gt; list[dict]\n</code></pre> <p>\u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u5730\u56fe\u623f\u95f4\u4fe1\u606f\u3002</p> <p>Returns:</p> Type Description <code>list[dict]</code> <p>list[dict]: \u6bcf\u4e2a\u623f\u95f4\u4fe1\u606f\u5305\u542b\u5982\u4e0b\u5b57\u6bb5: - room_name (str) - room_category (str) - boxes (list[dict]): AABB \u8fb9\u754c\u6846\uff0c\u5305\u542b min/max \u4e09\u7ef4\u5750\u6807\u3002</p> Source code in <code>src\\tongsim\\manager\\spatial\\manager.py</code> <pre><code>async def async_get_current_room_info(self) -&gt; list[dict]:\n    \"\"\"\n    \u5f02\u6b65\u83b7\u53d6\u5f53\u524d\u5730\u56fe\u623f\u95f4\u4fe1\u606f\u3002\n\n    Returns:\n        list[dict]: \u6bcf\u4e2a\u623f\u95f4\u4fe1\u606f\u5305\u542b\u5982\u4e0b\u5b57\u6bb5:\n            - room_name (str)\n            - room_category (str)\n            - boxes (list[dict]): AABB \u8fb9\u754c\u6846\uff0c\u5305\u542b min/max \u4e09\u7ef4\u5750\u6807\u3002\n    \"\"\"\n    return await UnaryAPI.get_room_info(self._context.conn)\n</code></pre>"},{"location":"api/manager_spatial/#tongsim.manager.spatial.SpatialManager.get_nearest_nav_position","title":"get_nearest_nav_position","text":"<pre><code>get_nearest_nav_position(\n    target_location: Vector3,\n) -&gt; Vector3 | None\n</code></pre> <p>\u83b7\u53d6\u76ee\u6807\u70b9\u9644\u8fd1\u6700\u8fd1\u7684\u53ef\u5bfc\u822a\u4f4d\u7f6e\u3002</p> <p>Parameters:</p> Name Type Description Default <code>target_location</code> <code>Vector3</code> <p>\u5f85\u67e5\u8be2\u7684\u76ee\u6807\u4f4d\u7f6e\u3002</p> required <p>Returns:</p> Name Type Description <code>Vector3</code> <code>Vector3 | None</code> <p>\u5bfc\u822a\u7f51\u683c\u4e2d\u6700\u8fd1\u7684\u6709\u6548\u70b9\u3002</p> Source code in <code>src\\tongsim\\manager\\spatial\\manager.py</code> <pre><code>def get_nearest_nav_position(self, target_location: Vector3) -&gt; Vector3 | None:\n    \"\"\"\n    \u83b7\u53d6\u76ee\u6807\u70b9\u9644\u8fd1\u6700\u8fd1\u7684\u53ef\u5bfc\u822a\u4f4d\u7f6e\u3002\n\n    Args:\n        target_location (Vector3): \u5f85\u67e5\u8be2\u7684\u76ee\u6807\u4f4d\u7f6e\u3002\n\n    Returns:\n        Vector3: \u5bfc\u822a\u7f51\u683c\u4e2d\u6700\u8fd1\u7684\u6709\u6548\u70b9\u3002\n    \"\"\"\n    return self._context.sync_run(\n        self.async_get_nearest_nav_position(target_location)\n    )\n</code></pre>"},{"location":"api/manager_spatial/#tongsim.manager.spatial.SpatialManager.async_get_nearest_nav_position","title":"async_get_nearest_nav_position  <code>async</code>","text":"<pre><code>async_get_nearest_nav_position(\n    target_location: Vector3,\n) -&gt; Vector3 | None\n</code></pre> <p>\u5f02\u6b65\u7248\u672c: \u83b7\u53d6\u76ee\u6807\u70b9\u9644\u8fd1\u6700\u8fd1\u7684\u53ef\u5bfc\u822a\u4f4d\u7f6e\u3002</p> <p>Parameters:</p> Name Type Description Default <code>target_location</code> <code>Vector3</code> <p>\u5f85\u67e5\u8be2\u7684\u76ee\u6807\u4f4d\u7f6e\u3002</p> required <p>Returns:</p> Name Type Description <code>Vector3</code> <code>Vector3 | None</code> <p>\u5bfc\u822a\u7f51\u683c\u4e2d\u6700\u8fd1\u7684\u6709\u6548\u70b9\u3002</p> Source code in <code>src\\tongsim\\manager\\spatial\\manager.py</code> <pre><code>async def async_get_nearest_nav_position(\n    self, target_location: Vector3\n) -&gt; Vector3 | None:\n    \"\"\"\n    \u5f02\u6b65\u7248\u672c: \u83b7\u53d6\u76ee\u6807\u70b9\u9644\u8fd1\u6700\u8fd1\u7684\u53ef\u5bfc\u822a\u4f4d\u7f6e\u3002\n\n    Args:\n        target_location (Vector3): \u5f85\u67e5\u8be2\u7684\u76ee\u6807\u4f4d\u7f6e\u3002\n\n    Returns:\n        Vector3: \u5bfc\u822a\u7f51\u683c\u4e2d\u6700\u8fd1\u7684\u6709\u6548\u70b9\u3002\n    \"\"\"\n    return await UnaryAPI.get_nearest_nav_point(self._context.conn, target_location)\n</code></pre>"},{"location":"api/manager_spatial/#tongsim.manager.spatial.SpatialManager.get_random_spawn_location","title":"get_random_spawn_location","text":"<pre><code>get_random_spawn_location(\n    room_name: str = \"\",\n) -&gt; Vector3 | None\n</code></pre> <p>\u67e5\u8be2\u6307\u5b9a\u623f\u95f4\u5185\u6216\u6574\u4e2a\u5730\u56fe\u4e2d\u53ef\u7528\u4e8e\u751f\u6210\u667a\u80fd\u4f53\u7684\u968f\u673a\u4f4d\u7f6e\u3002</p> <p>Parameters:</p> Name Type Description Default <code>room_name</code> <code>str</code> <p>\u623f\u95f4\u540d\u79f0\uff08\u53ef\u9009\uff09\u3002\u82e5\u4e3a\u7a7a\uff0c\u5219\u81ea\u52a8\u4ece\u6240\u6709\u623f\u95f4\u4e2d\u9009\u62e9\u3002</p> <code>''</code> <p>Returns:</p> Name Type Description <code>Vector3</code> <code>Vector3 | None</code> <p>\u53ef\u7528\u4e8e spawn \u7684\u968f\u673a\u5bfc\u822a\u4f4d\u7f6e\u3002</p> Source code in <code>src\\tongsim\\manager\\spatial\\manager.py</code> <pre><code>def get_random_spawn_location(self, room_name: str = \"\") -&gt; Vector3 | None:\n    \"\"\"\n    \u67e5\u8be2\u6307\u5b9a\u623f\u95f4\u5185\u6216\u6574\u4e2a\u5730\u56fe\u4e2d\u53ef\u7528\u4e8e\u751f\u6210\u667a\u80fd\u4f53\u7684\u968f\u673a\u4f4d\u7f6e\u3002\n\n    Args:\n        room_name (str): \u623f\u95f4\u540d\u79f0\uff08\u53ef\u9009\uff09\u3002\u82e5\u4e3a\u7a7a\uff0c\u5219\u81ea\u52a8\u4ece\u6240\u6709\u623f\u95f4\u4e2d\u9009\u62e9\u3002\n\n    Returns:\n        Vector3: \u53ef\u7528\u4e8e spawn \u7684\u968f\u673a\u5bfc\u822a\u4f4d\u7f6e\u3002\n    \"\"\"\n    return self._context.sync_run(self.async_get_random_spawn_location(room_name))\n</code></pre>"},{"location":"api/manager_spatial/#tongsim.manager.spatial.SpatialManager.async_get_random_spawn_location","title":"async_get_random_spawn_location  <code>async</code>","text":"<pre><code>async_get_random_spawn_location(\n    room_name: str = \"\",\n) -&gt; Vector3 | None\n</code></pre> <p>\u5f02\u6b65\u7248\u672c: \u67e5\u8be2\u6307\u5b9a\u623f\u95f4\u6216\u5730\u56fe\u4e2d\u53ef spawn \u7684\u968f\u673a\u5bfc\u822a\u4f4d\u7f6e\u3002</p> <p>Parameters:</p> Name Type Description Default <code>room_name</code> <code>str</code> <p>\u623f\u95f4\u540d\u79f0\uff08\u53ef\u9009\uff09\u3002\u82e5\u4e3a\u7a7a\uff0c\u5219\u81ea\u52a8\u4ece\u6240\u6709\u623f\u95f4\u4e2d\u9009\u62e9\u3002</p> <code>''</code> <p>Returns:</p> Name Type Description <code>Vector3</code> <code>Vector3 | None</code> <p>\u53ef\u7528\u4e8e spawn \u7684\u968f\u673a\u5bfc\u822a\u4f4d\u7f6e\u3002</p> Source code in <code>src\\tongsim\\manager\\spatial\\manager.py</code> <pre><code>async def async_get_random_spawn_location(\n    self, room_name: str = \"\"\n) -&gt; Vector3 | None:\n    \"\"\"\n    \u5f02\u6b65\u7248\u672c: \u67e5\u8be2\u6307\u5b9a\u623f\u95f4\u6216\u5730\u56fe\u4e2d\u53ef spawn \u7684\u968f\u673a\u5bfc\u822a\u4f4d\u7f6e\u3002\n\n    Args:\n        room_name (str): \u623f\u95f4\u540d\u79f0\uff08\u53ef\u9009\uff09\u3002\u82e5\u4e3a\u7a7a\uff0c\u5219\u81ea\u52a8\u4ece\u6240\u6709\u623f\u95f4\u4e2d\u9009\u62e9\u3002\n\n    Returns:\n        Vector3: \u53ef\u7528\u4e8e spawn \u7684\u968f\u673a\u5bfc\u822a\u4f4d\u7f6e\u3002\n    \"\"\"\n    return await UnaryAPI.get_random_spawn_location(self._context.conn, room_name)\n</code></pre>"},{"location":"api/manager_spatial/#tongsim.manager.spatial.SpatialManager.get_room_name_from_location","title":"get_room_name_from_location","text":"<pre><code>get_room_name_from_location(location: Vector3) -&gt; str\n</code></pre> <p>\u83b7\u5f97\u8be5\u4f4d\u7f6e\u6240\u5728\u7684\u623f\u95f4\u540d</p> <p>Parameters:</p> Name Type Description Default <code>location</code> <code>Vector3</code> <p>\u67e5\u8be2\u4f4d\u7f6e\u4e09\u7ef4\u5750\u6807\u70b9</p> required Return <p>str: \u8be5\u4f4d\u7f6e\u6240\u5728\u623f\u95f4\u540d\uff0c\u5982\u679c\u4e0d\u5728\u4efb\u4f55\u623f\u95f4\u533a\u57df\u8fd4\u56de\"None\"</p> Source code in <code>src\\tongsim\\manager\\spatial\\manager.py</code> <pre><code>def get_room_name_from_location(self, location: Vector3) -&gt; str:\n    \"\"\"\n    \u83b7\u5f97\u8be5\u4f4d\u7f6e\u6240\u5728\u7684\u623f\u95f4\u540d\n\n    Args:\n        location (Vector3): \u67e5\u8be2\u4f4d\u7f6e\u4e09\u7ef4\u5750\u6807\u70b9\n\n    Return:\n         str: \u8be5\u4f4d\u7f6e\u6240\u5728\u623f\u95f4\u540d\uff0c\u5982\u679c\u4e0d\u5728\u4efb\u4f55\u623f\u95f4\u533a\u57df\u8fd4\u56de\"None\"\n    \"\"\"\n    return self._context.sync_run(self.async_get_room_name_from_location(location))\n</code></pre>"},{"location":"api/manager_spatial/#tongsim.manager.spatial.SpatialManager.async_get_room_name_from_location","title":"async_get_room_name_from_location  <code>async</code>","text":"<pre><code>async_get_room_name_from_location(location: Vector3) -&gt; str\n</code></pre> <p>\u5f02\u6b65\u7248\u672c\uff1a\u83b7\u5f97\u8be5\u4f4d\u7f6e\u6240\u5728\u7684\u623f\u95f4\u540d</p> <p>Parameters:</p> Name Type Description Default <code>location</code> <code>Vector3</code> <p>\u67e5\u8be2\u4f4d\u7f6e\u4e09\u7ef4\u5750\u6807\u70b9</p> required Return <p>str: \u8be5\u4f4d\u7f6e\u6240\u5728\u623f\u95f4\u540d\uff0c\u5982\u679c\u4e0d\u5728\u4efb\u4f55\u623f\u95f4\u533a\u57df\u8fd4\u56de\"None\"</p> Source code in <code>src\\tongsim\\manager\\spatial\\manager.py</code> <pre><code>async def async_get_room_name_from_location(self, location: Vector3) -&gt; str:\n    \"\"\"\n    \u5f02\u6b65\u7248\u672c\uff1a\u83b7\u5f97\u8be5\u4f4d\u7f6e\u6240\u5728\u7684\u623f\u95f4\u540d\n\n    Args:\n        location (Vector3): \u67e5\u8be2\u4f4d\u7f6e\u4e09\u7ef4\u5750\u6807\u70b9\n\n    Return:\n         str: \u8be5\u4f4d\u7f6e\u6240\u5728\u623f\u95f4\u540d\uff0c\u5982\u679c\u4e0d\u5728\u4efb\u4f55\u623f\u95f4\u533a\u57df\u8fd4\u56de\"None\"\n    \"\"\"\n    return await UnaryAPI.get_room_name_from_location(self._context.conn, location)\n</code></pre>"},{"location":"api/manager_spatial/#tongsim.manager.spatial.SpatialManager.get_room_array","title":"get_room_array","text":"<pre><code>get_room_array() -&gt; list[str]\n</code></pre> <p>\u83b7\u5f97\u5f53\u524d\u5730\u56fe\u6240\u6709\u623f\u95f4</p> <p>Returns:</p> Type Description <code>list[str]</code> <p>list[str]: \u5f97\u5230\u6240\u6709\u623f\u95f4\u540d\u5b57\u5217\u8868</p> Source code in <code>src\\tongsim\\manager\\spatial\\manager.py</code> <pre><code>def get_room_array(self) -&gt; list[str]:\n    \"\"\"\n    \u83b7\u5f97\u5f53\u524d\u5730\u56fe\u6240\u6709\u623f\u95f4\n\n    Returns:\n        list[str]: \u5f97\u5230\u6240\u6709\u623f\u95f4\u540d\u5b57\u5217\u8868\n    \"\"\"\n    return self._context.sync_run(self.async_get_room_array())\n</code></pre>"},{"location":"api/manager_spatial/#tongsim.manager.spatial.SpatialManager.async_get_room_array","title":"async_get_room_array  <code>async</code>","text":"<pre><code>async_get_room_array() -&gt; list[str]\n</code></pre> <p>\u5f02\u6b65\u7248\u672c\uff1a\u83b7\u5f97\u5f53\u524d\u5730\u56fe\u6240\u6709\u623f\u95f4</p> <p>Returns:</p> Type Description <code>list[str]</code> <p>list[str]: \u5f97\u5230\u6240\u6709\u623f\u95f4\u540d\u5b57\u5217\u8868</p> Source code in <code>src\\tongsim\\manager\\spatial\\manager.py</code> <pre><code>async def async_get_room_array(self) -&gt; list[str]:\n    \"\"\"\n    \u5f02\u6b65\u7248\u672c\uff1a\u83b7\u5f97\u5f53\u524d\u5730\u56fe\u6240\u6709\u623f\u95f4\n\n    Returns:\n        list[str]: \u5f97\u5230\u6240\u6709\u623f\u95f4\u540d\u5b57\u5217\u8868\n    \"\"\"\n    return await UnaryAPI.get_room_array(self._context.conn)\n</code></pre>"},{"location":"api/manager_spatial/#tongsim.manager.spatial.SpatialManager.get_nav_point_ringlike","title":"get_nav_point_ringlike","text":"<pre><code>get_nav_point_ringlike(\n    center: Vector3,\n    min_radius: float,\n    max_radius: float,\n    room: str,\n) -&gt; Vector3\n</code></pre> <p>\u540c\u6b65\u7248\u672c\uff1a\u83b7\u53d6\u6307\u5b9a\u73af\u5f62\u533a\u57df\u968f\u673a\u70b9\u3002</p> <p>Parameters:</p> Name Type Description Default <code>center</code> <code>Vector3</code> <p>\u73af\u5f62\u533a\u57df\u4e2d\u5fc3\u4f4d\u7f6e\u3002</p> required <code>min_radius</code> <code>float</code> <p>\u5185\u5708\u534a\u5f84\u3002</p> required <code>max_radius</code> <code>float</code> <p>\u5916\u5708\u534a\u5f84\u3002</p> required <code>room</code> <code>str</code> <p>\u623f\u95f4\u5185\u540d\u79f0\uff08\u9650\u5b9a\u5728\u623f\u95f4\u5185\uff0c\u9ed8\u8ba4\u6ca1\u6709\u623f\u95f4\u9650\u5b9a\uff09\u3002</p> required <p>Returns:</p> Name Type Description <code>Vector3</code> <code>Vector3</code> <p>\u73af\u5f62\u533a\u57df\u5185\u968f\u673a\u70b9</p> Source code in <code>src\\tongsim\\manager\\spatial\\manager.py</code> <pre><code>def get_nav_point_ringlike(\n    self, center: Vector3, min_radius: float, max_radius: float, room: str\n) -&gt; Vector3:\n    \"\"\"\n    \u540c\u6b65\u7248\u672c\uff1a\u83b7\u53d6\u6307\u5b9a\u73af\u5f62\u533a\u57df\u968f\u673a\u70b9\u3002\n\n    Args:\n        center (Vector3): \u73af\u5f62\u533a\u57df\u4e2d\u5fc3\u4f4d\u7f6e\u3002\n        min_radius (float): \u5185\u5708\u534a\u5f84\u3002\n        max_radius (float): \u5916\u5708\u534a\u5f84\u3002\n        room (str): \u623f\u95f4\u5185\u540d\u79f0\uff08\u9650\u5b9a\u5728\u623f\u95f4\u5185\uff0c\u9ed8\u8ba4\u6ca1\u6709\u623f\u95f4\u9650\u5b9a\uff09\u3002\n\n    Returns:\n        Vector3: \u73af\u5f62\u533a\u57df\u5185\u968f\u673a\u70b9\n    \"\"\"\n    return self._context.sync_run(\n        self.async_get_nav_point_ringlike(center, min_radius, max_radius, room)\n    )\n</code></pre>"},{"location":"api/manager_spatial/#tongsim.manager.spatial.SpatialManager.async_get_nav_point_ringlike","title":"async_get_nav_point_ringlike  <code>async</code>","text":"<pre><code>async_get_nav_point_ringlike(\n    center: Vector3,\n    min_radius: float,\n    max_radius: float,\n    room: str = \"\",\n) -&gt; Vector3\n</code></pre> <p>\u5f02\u6b65\u7248\u672c\uff1a\u83b7\u53d6\u6307\u5b9a\u73af\u5f62\u533a\u57df\u968f\u673a\u70b9\u3002</p> <p>Parameters:</p> Name Type Description Default <code>center</code> <code>Vector3</code> <p>\u73af\u5f62\u533a\u57df\u4e2d\u5fc3\u4f4d\u7f6e\u3002</p> required <code>min_radius</code> <code>float</code> <p>\u5185\u5708\u534a\u5f84\u3002</p> required <code>max_radius</code> <code>float</code> <p>\u5916\u5708\u534a\u5f84\u3002</p> required <code>room</code> <code>str</code> <p>\u623f\u95f4\u5185\u540d\u79f0\uff08\u9650\u5b9a\u5728\u623f\u95f4\u5185\uff0c\u9ed8\u8ba4\u6ca1\u6709\u623f\u95f4\u9650\u5b9a\uff09\u3002</p> <code>''</code> <p>Returns:</p> Name Type Description <code>Vector3</code> <code>Vector3</code> <p>\u73af\u5f62\u533a\u57df\u5185\u968f\u673a\u70b9</p> Source code in <code>src\\tongsim\\manager\\spatial\\manager.py</code> <pre><code>async def async_get_nav_point_ringlike(\n    self, center: Vector3, min_radius: float, max_radius: float, room: str = \"\"\n) -&gt; Vector3:\n    \"\"\"\n    \u5f02\u6b65\u7248\u672c\uff1a\u83b7\u53d6\u6307\u5b9a\u73af\u5f62\u533a\u57df\u968f\u673a\u70b9\u3002\n\n    Args:\n        center (Vector3): \u73af\u5f62\u533a\u57df\u4e2d\u5fc3\u4f4d\u7f6e\u3002\n        min_radius (float): \u5185\u5708\u534a\u5f84\u3002\n        max_radius (float): \u5916\u5708\u534a\u5f84\u3002\n        room (str): \u623f\u95f4\u5185\u540d\u79f0\uff08\u9650\u5b9a\u5728\u623f\u95f4\u5185\uff0c\u9ed8\u8ba4\u6ca1\u6709\u623f\u95f4\u9650\u5b9a\uff09\u3002\n\n    Returns:\n        Vector3: \u73af\u5f62\u533a\u57df\u5185\u968f\u673a\u70b9\n    \"\"\"\n    return await UnaryAPI.get_nav_point_ringlike(\n        self._context.conn, center, min_radius, max_radius, room\n    )\n</code></pre>"},{"location":"api/manager_spatial/#tongsim.manager.spatial.SpatialManager.get_navmesh_polys_in_room","title":"get_navmesh_polys_in_room","text":"<pre><code>get_navmesh_polys_in_room(\n    room_name: str,\n) -&gt; list[list[Vector3]]\n</code></pre> <p>\u83b7\u53d6\u623f\u95f4\u5185\u5bfc\u822a\u7f51\u683c\u591a\u8fb9\u5f62\u9876\u70b9\u5217\u8868\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Parameters:</p> Name Type Description Default <code>room_name</code> <code>str</code> <p>\u623f\u95f4\u540d\u79f0\u3002</p> required <p>Returns:</p> Type Description <code>list[list[Vector3]]</code> <p>list[list[Vector3]]: \u5bfc\u822a\u7f51\u683c\u591a\u8fb9\u5f62\u96c6\u5408\u3002\u6bcf\u4e2a\u5143\u7d20\u8868\u793a\u4e00\u4e2a\u591a\u8fb9\u5f62\u7684\u9876\u70b9\u5217\u8868\uff0c\u9876\u70b9\u7c7b\u578b\u4e3a Vector3\u3002</p> Source code in <code>src\\tongsim\\manager\\spatial\\manager.py</code> <pre><code>def get_navmesh_polys_in_room(self, room_name: str) -&gt; list[list[Vector3]]:\n    \"\"\"\n    \u83b7\u53d6\u623f\u95f4\u5185\u5bfc\u822a\u7f51\u683c\u591a\u8fb9\u5f62\u9876\u70b9\u5217\u8868\uff08\u540c\u6b65\u63a5\u53e3\uff09\u3002\n\n    Args:\n        room_name (str): \u623f\u95f4\u540d\u79f0\u3002\n\n    Returns:\n        list[list[Vector3]]: \u5bfc\u822a\u7f51\u683c\u591a\u8fb9\u5f62\u96c6\u5408\u3002\u6bcf\u4e2a\u5143\u7d20\u8868\u793a\u4e00\u4e2a\u591a\u8fb9\u5f62\u7684\u9876\u70b9\u5217\u8868\uff0c\u9876\u70b9\u7c7b\u578b\u4e3a Vector3\u3002\n    \"\"\"\n    return self._context.sync_run(self.async_get_navmesh_polys_in_room(room_name))\n</code></pre>"},{"location":"api/manager_spatial/#tongsim.manager.spatial.SpatialManager.async_get_navmesh_polys_in_room","title":"async_get_navmesh_polys_in_room  <code>async</code>","text":"<pre><code>async_get_navmesh_polys_in_room(\n    room_name: str,\n) -&gt; list[list[Vector3]]\n</code></pre> <p>\u83b7\u53d6\u623f\u95f4\u5185\u5bfc\u822a\u7f51\u683c\u591a\u8fb9\u5f62\u9876\u70b9\u5217\u8868\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002</p> <p>Parameters:</p> Name Type Description Default <code>room_name</code> <code>str</code> <p>\u623f\u95f4\u540d\u79f0\u3002</p> required <p>Returns:</p> Type Description <code>list[list[Vector3]]</code> <p>list[list[Vector3]]: \u5bfc\u822a\u7f51\u683c\u591a\u8fb9\u5f62\u96c6\u5408\u3002\u6bcf\u4e2a\u5143\u7d20\u8868\u793a\u4e00\u4e2a\u591a\u8fb9\u5f62\u7684\u9876\u70b9\u5217\u8868\uff0c\u9876\u70b9\u7c7b\u578b\u4e3a Vector3\u3002</p> Source code in <code>src\\tongsim\\manager\\spatial\\manager.py</code> <pre><code>async def async_get_navmesh_polys_in_room(\n    self, room_name: str\n) -&gt; list[list[Vector3]]:\n    \"\"\"\n    \u83b7\u53d6\u623f\u95f4\u5185\u5bfc\u822a\u7f51\u683c\u591a\u8fb9\u5f62\u9876\u70b9\u5217\u8868\uff08\u5f02\u6b65\u63a5\u53e3\uff09\u3002\n\n    Args:\n        room_name (str): \u623f\u95f4\u540d\u79f0\u3002\n\n    Returns:\n        list[list[Vector3]]: \u5bfc\u822a\u7f51\u683c\u591a\u8fb9\u5f62\u96c6\u5408\u3002\u6bcf\u4e2a\u5143\u7d20\u8868\u793a\u4e00\u4e2a\u591a\u8fb9\u5f62\u7684\u9876\u70b9\u5217\u8868\uff0c\u9876\u70b9\u7c7b\u578b\u4e3a Vector3\u3002\n    \"\"\"\n    return await UnaryAPI.get_nevmesh_polys_in_room(\n        self._context.conn, room_name=room_name\n    )\n</code></pre>"},{"location":"api/tongsim/","title":"\ud83d\ude80 TongSim \u4e3b\u6a21\u5757","text":""},{"location":"api/tongsim/#tongsim.tongsim","title":"tongsim.tongsim","text":"<p>tongsim.tongsim</p> <p>\u5bf9\u5e94\u5355\u4e2a TongSim UE \u5b9e\u4f8b, \u5185\u90e8\u4f9d\u8d56 WorldContext \u7ba1\u7406\u8fde\u63a5\u4e0e\u4efb\u52a1\u8c03\u5ea6\u3002</p>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim","title":"TongSim","text":"<p>TongSim \u5b9e\u4f8b: \u4ee3\u8868\u4e00\u4e2a\u8fde\u63a5\u7684 UE \u5b9e\u4f8b\uff0c\u63d0\u4f9b\u9ad8\u7ea7\u63a7\u5236\u63a5\u53e3\u3002 \u6240\u6709\u65b9\u6cd5\u4e3a\u540c\u6b65\u963b\u585e\u63a5\u53e3\uff0c\u4fbf\u4e8e\u5728\u540c\u6b65\u9879\u76ee\u6216\u811a\u672c\u4e2d\u4f7f\u7528\u3002</p> Source code in <code>src\\tongsim\\tongsim.py</code> <pre><code>class TongSim:\n    \"\"\"\n    TongSim \u5b9e\u4f8b: \u4ee3\u8868\u4e00\u4e2a\u8fde\u63a5\u7684 UE \u5b9e\u4f8b\uff0c\u63d0\u4f9b\u9ad8\u7ea7\u63a7\u5236\u63a5\u53e3\u3002\n    \u6240\u6709\u65b9\u6cd5\u4e3a\u540c\u6b65\u963b\u585e\u63a5\u53e3\uff0c\u4fbf\u4e8e\u5728\u540c\u6b65\u9879\u76ee\u6216\u811a\u672c\u4e2d\u4f7f\u7528\u3002\n    \"\"\"\n\n    def __init__(self, grpc_endpoint: str, legacy_grpc_endpoint: str):\n        \"\"\"\n        \u521d\u59cb\u5316\u4e00\u4e2a TongSim \u5b9e\u4f8b\u3002\n\n        Args:\n            endpoint (str): gRPC \u670d\u52a1\u5668\u5730\u5740\uff0c\u5982 \"localhost:5056\"\n            legacy_endpoint (str): \u5e9f\u5f03\u7684 gRPC \u670d\u52a1\u5668\u5730\u5740\uff0c\u5982 \"localhost:50052\"\n        \"\"\"\n        self._context: Final[WorldContext] = WorldContext(\n            grpc_endpoint, legacy_grpc_endpoint\n        )\n        self._pg_manager: Final[PGManager] = PGManager(self._context)\n        self._spatical_manager: Final[SpatialManager] = SpatialManager(self._context)\n        self._trace_manager: Final[TraceManager] = TraceManager(self._context)\n        self._spatial_manager: Final[SpatialManager] = SpatialManager(self._context)\n        self._debug_draw: Final[DebugDraw] = DebugDraw(self._context)\n        self._utils: Final[UtilFuncs] = UtilFuncs(self._context)\n\n    @property\n    def utils(self) -&gt; UtilFuncs:\n        \"\"\"\n        \u83b7\u53d6\u5c01\u88c5\u7684\u5b9e\u7528\u5de5\u5177\u51fd\u6570\u63a5\u53e3\u3002\n\n        Returns:\n            UtilFuncs: \u63d0\u4f9b\u5b9e\u7528\u5de5\u5177\u51fd\u6570\u65b9\u6cd5\u3002\n        \"\"\"\n        return self._utils\n\n    @property\n    def debug_draw(self) -&gt; DebugDraw:\n        \"\"\"\n        \u83b7\u53d6 DebugDraw \u8c03\u8bd5\u7ed8\u56fe\u63a5\u53e3\u5bf9\u8c61\u3002\n\n        Returns:\n            DebugDraw: \u63d0\u4f9b\u8c03\u8bd5\u7ed8\u5236\u65b9\u6cd5\uff08\u5982\u5750\u6807\u7cfb\u3001\u7ebf\u6bb5\u3001\u76d2\u5b50\uff09\u7684\u7ba1\u7406\u7c7b\u3002\n        \"\"\"\n        return self._debug_draw\n\n    @property\n    def pg_manager(self) -&gt; PGManager:\n        \"\"\"\n        \u83b7\u53d6 PG \u7ba1\u7406\u5668\uff0c\u7528\u4e8e\u8bbf\u95ee\u548c\u64cd\u4f5c\u5f53\u524d\u573a\u666f\u7684 Parsing-Graph\uff08PG\uff09\u3002\n        Returns:\n            PGManager: \u5f53\u524d\u8fde\u63a5\u4e0a\u4e0b\u6587\u4e2d\u7684 PG \u7ba1\u7406\u5668\u5b9e\u4f8b\u3002\n        \"\"\"\n        return self._pg_manager\n\n    @property\n    def spatial_manager(self) -&gt; SpatialManager:\n        \"\"\"\n        \u83b7\u53d6 spatial manager\uff0c\u7528\u4e8e\u5bf9\u573a\u666f\u7a7a\u95f4\u7ed3\u6784\u7684\u8bbf\u95ee\u80fd\u529b\uff0c\u5305\u62ec: \u623f\u95f4\u4fe1\u606f\u3001\u5bfc\u822a\u3001\u51fa\u751f\u70b9\u7b49\u7b49\n        \"\"\"\n        return self._spatial_manager\n\n    @property\n    def trace_manager(self) -&gt; TraceManager:\n        \"\"\"\n        \u83b7\u53d6 Trace Manager\uff0c\u7528\u4e8e\u5bf9\u573a\u666f\u505a\u78b0\u649e\u68c0\u6d4b\u3002\n        \"\"\"\n        return self._trace_manager\n\n    @property\n    def context(self) -&gt; WorldContext:\n        \"\"\"\n        \u83b7\u53d6\u5f53\u524d TongSim \u5b9e\u4f8b\u7684\u8fd0\u884c\u65f6\u4e0a\u4e0b\u6587\u3002\n\n        Returns:\n            WorldContext: \u7ba1\u7406\u8fde\u63a5\u3001\u4e8b\u4ef6\u5faa\u73af\u3001\u4efb\u52a1\u6d3e\u53d1\u7b49\u7684\u4e0a\u4e0b\u6587\u8d44\u6e90\u5bf9\u8c61\u3002\n        \"\"\"\n        return self._context\n\n    def open_level(self, level_name: str) -&gt; bool:\n        \"\"\"\n        \u6253\u5f00\u4e00\u4e2a\u6307\u5b9a\u5173\u5361\u3002\n\n        Args:\n            level_name (str): \u5173\u5361\u8d44\u6e90\u540d\uff08\u652f\u6301\u81ea\u52a8\u8865\u5168 SDBP_Map_ \u524d\u7f00\uff09\n\n        Returns:\n            bool: \u662f\u5426\u6253\u5f00\u6210\u529f\n        \"\"\"\n\n        async def async_open_level():\n            await self.pg_manager.async_stop_pg_stream()\n            return await LegacyAPI.open_level(self._context.conn_legacy, level_name)\n\n        if not level_name.startswith(\"SDBP_Map_\"):\n            level_name = f\"SDBP_Map_{level_name}\"\n\n        return self._context.sync_run(async_open_level())\n\n    def spawn_entity(\n        self,\n        entity_type: type[T],\n        blueprint: str,\n        location: Vector3,\n        desired_name: str = \"\",\n        quat: Quaternion | None = None,\n        scale: Vector3 | None = None,\n        is_simulating_physics: bool = True,\n        is_vr_grippable: bool = True,\n    ) -&gt; T:\n        \"\"\"\n        \u521b\u5efa\u4e00\u4e2a\u5b9e\u4f53\u5bf9\u8c61\uff0c\u5e76\u6784\u9020\u6307\u5b9a\u7c7b\u578b\u7684 Entity\u3002\n        \u8d44\u4ea7\u540d\u79f0\u53ef\u67e5\u9605\u8d44\u4ea7\u5e93\uff1a https://asset-tongai.mybigai.ac.cn/\n\n        Args:\n            entity_type (Type[T]): \u8981\u8fd4\u56de\u7684\u5b9e\u4f53\u7c7b\u578b\uff0c\u5982 BaseObjectEntity\u3001AgentEntity\u3002\n            blueprint (str): \u4f7f\u7528\u7684\u8d44\u4ea7\u540d\u79f0\u3002\n            location (Vector3): \u5b9e\u4f53\u7684\u521d\u59cb\u4f4d\u7f6e\u3002\n            desired_name (str, optional): \u671f\u671b\u7684\u5b9e\u4f53\u540d\u79f0\u3002\n            quat (Quaternion | None, optional): \u521d\u59cb\u65cb\u8f6c\uff08\u56db\u5143\u6570\uff09\u3002\n            scale (Vector3 | None, optional): \u521d\u59cb\u7f29\u653e\u3002\n            is_simulating_physics (bool): \u662f\u5426\u542f\u7528\u7269\u7406\u6a21\u62df\u3002\n            is_vr_grippable (bool): \u662f\u5426\u5141\u8bb8 VR \u4ea4\u4e92\u3002\n\n        Returns:\n            T: \u6784\u9020\u5b8c\u6210\u7684 Entity \u5b9e\u4f8b\u3002\n        \"\"\"\n\n        async def _spawn_and_wrap() -&gt; T:\n            entity_id: str = await UnaryAPI.spawn_object(\n                self._context.conn,\n                blueprint=blueprint,\n                desired_name=desired_name,\n                location=location,\n                rotation=quat,\n                scale=scale,\n                is_simulating_physics=is_simulating_physics,\n                is_vr_grippable=is_vr_grippable,\n            )\n            return await entity_type.from_grpc(entity_id, self._context)\n\n        return self._context.sync_run(_spawn_and_wrap())\n\n    def destroy_entity(self, entity_id: str) -&gt; bool:\n        \"\"\"\n        \u9500\u6bc1\u6307\u5b9a ID \u7684\u5b9e\u4f53\u5bf9\u8c61\uff0c\u91ca\u653e\u573a\u666f\u4e2d\u7684\u8d44\u6e90\u3002\n\n        Args:\n            entity_id (str): \u5b9e\u4f53\u7684\u552f\u4e00 ID\u3002\n\n        Returns:\n            bool: \u662f\u5426\u6210\u529f\u9500\u6bc1\u5b9e\u4f53\u3002\n        \"\"\"\n        return self._context.sync_run(\n            LegacyAPI.destroy_object(self._context.conn_legacy, entity_id)\n        )\n\n    def spawn_agent(\n        self,\n        blueprint: str,\n        location: Vector3,\n        desired_name: str = \"\",\n        quat: Quaternion | None = None,\n        scale: Vector3 | None = None,\n    ) -&gt; AgentEntity:\n        \"\"\"\n        \u521b\u5efa\u4e00\u4e2a agent \u5b9e\u4f8b\u3002\n\n        Args:\n            blueprint (str): \u84dd\u56fe\u8d44\u6e90\u540d\n            location (Vector3): \u4f4d\u7f6e\u5411\u91cf\n\n        Returns:\n            str: \u65b0 agent \u7684 UE \u5b9e\u4f8b\u540d\n        \"\"\"\n\n        async def _spawn_agent_and_wrap() -&gt; AgentEntity:\n            agent_id: str = await UnaryAPI.spawn_object(\n                self._context.conn,\n                blueprint=blueprint,\n                desired_name=desired_name,\n                location=location,\n                rotation=quat,\n                scale=scale,\n                is_simulating_physics=True,\n                is_vr_grippable=False,\n            )\n            return await AgentEntity.from_grpc(agent_id, self._context)\n\n        return self._context.sync_run(_spawn_agent_and_wrap())\n\n    def spawn_camera(\n        self,\n        camera_name: str,\n        loc: Vector3,\n        quat: Quaternion,\n        fov: float = 90.0,\n        width: int = 1280,\n        height: int = 720,\n        pixel_streamer_name: str | None = None,\n    ) -&gt; CameraEntity:\n        \"\"\"\n        \u521b\u5efa\u4e00\u4e2a\u6444\u50cf\u673a\u5b9e\u4f8b\n\n        Args:\n            camera_name (str): \u6444\u50cf\u673a\u540d\u79f0\n            loc (Vector3): \u6444\u50cf\u673a\u4f4d\u7f6e\n            quat (Quaternion): \u6444\u50cf\u673a\u65cb\u8f6c\uff08\u56db\u5143\u6570\uff09\n            fov (float): \u6444\u50cf\u673a\u89c6\u91ce\u89d2\n            width (int): \u56fe\u50cf\u5bbd\u5ea6\n            height (int): \u56fe\u50cf\u9ad8\u5ea6\n            pixel_streamer_name (Optional[str]): \u8be5\u76f8\u673a\u5bf9\u5e94\u7684 PixelStreaming \u6d41\u540d\u79f0\n\n        Returns:\n            Entity: \u5c01\u88c5\u6444\u50cf\u673a\u7684 Entity \u5b9e\u4f8b\n        \"\"\"\n\n        async def _spawn_camera_and_wrap() -&gt; CameraEntity:\n            camera_id = await UnaryAPI.spawn_camera(\n                self._context.conn,\n                camera_name,\n                loc,\n                quat,\n                fov,\n                width,\n                height,\n                pixel_streamer_name,\n            )\n            return await CameraEntity.from_grpc(camera_id, self._context)\n\n        return self._context.sync_run(_spawn_camera_and_wrap())\n\n    def spawn_hf_camera(\n        self,\n        camera_name: str,\n        frequency: int,\n        socket: str,\n        attach_owner: str = \"\",\n        fov: float = 90.0,\n        width: int = 1280,\n        height: int = 720,\n    ) -&gt; HFCameraEntity:\n        \"\"\"\n        \u521b\u5efa\u4e00\u4e2a\u6444\u50cf\u673a\u5b9e\u4f8b\n\n        Args:\n            camera_name (str): \u6444\u50cf\u673a\u5728\u7cfb\u7edf\u4e2d\u7684\u552f\u4e00\u540d\u79f0/\u6807\u8bc6\u3002\n            frequency (int): \u91c7\u6837\u9891\u7387\uff08Hz\uff09\uff0c\u5373\u671f\u671b\u7684\u5e27\u7387\u3002\u5fc5\u987b\u4e3a\u6b63\u6570\u3002\n                \u6ce8\u610f\uff1a\u5b9e\u9645\u63a8\u6d41\u5e27\u7387\u53ef\u80fd\u53d7\u5f15\u64ce/\u5e26\u5bbd\u7b49\u9650\u5236\u3002\n            socket (str): \u7ed1\u5b9a\u7684socket\u540d\u79f0\u3002\n            attach_owner (str): \u8981\u6302\u8f7d/\u8ddf\u968f\u7684\u5bbf\u4e3b\u5b9e\u4f53\uff0c\u7531\u4e8e\u76ee\u524d\u6ca1\u6709\u79fb\u52a8\u80fd\u529b\uff0c\u53ea\u80fd\u4f9d\u9644\u4e8eagent\u3002\n            fov (float): \u6c34\u5e73\u89c6\u573a\u89d2\uff08\u5355\u4f4d\uff1a\u5ea6\uff09\u3002\u9ed8\u8ba4 90.0\uff0c\u5efa\u8bae\u8303\u56f4 (0, 180)\u3002\n            width (int): \u56fe\u50cf\u5bbd\u5ea6\uff08\u50cf\u7d20\uff09\uff0c\u5fc5\u987b\u4e3a\u6b63\u6570\u3002\u9ed8\u8ba4 1280\u3002\n            height (int): \u56fe\u50cf\u9ad8\u5ea6\uff08\u50cf\u7d20\uff09\uff0c\u5fc5\u987b\u4e3a\u6b63\u6570\u3002\u9ed8\u8ba4 720\u3002\n        Returns:\n            HFCameraEntity: \u5c01\u88c5\u9ad8\u901f\u6444\u50cf\u673a\u7684 HFCameraEntity \u5b9e\u4f8b\n        \"\"\"\n\n        async def _spawn_camera_and_wrap() -&gt; HFCameraEntity:\n            camera_id = camera_name + \"_\" + attach_owner\n            await UnaryAPI.spawn_hf_camera(\n                self._context.conn,\n                camera_id,\n                frequency,\n                socket,\n                True,\n                True,\n                True,\n                attach_owner,\n                fov,\n                width,\n                height,\n            )\n            return await HFCameraEntity.create(camera_id, self._context, [])\n\n        return self._context.sync_run(_spawn_camera_and_wrap())\n\n    def entity_from_id(self, entity_type: type[T], entity_id: str) -&gt; T:\n        \"\"\"\n        \u6839\u636e Entity ID \u6784\u9020\u4e00\u4e2a\u5b8c\u6574\u7684 Entity \u5b9e\u4f8b, \u8981\u6c42 id \u5b8c\u5168\u51c6\u786e\u3002\uff08\u8be5\u63a5\u53e3\u5f00\u9500\u6bd4 get_entity_by_name \u8981\u4f4e\u4e00\u4e9b\uff09\n\n        Args:\n            entity_type (Type[T]): \u8981\u6784\u9020\u7684 Entity \u7c7b\u578b\uff08\u5fc5\u987b\u4e3a MixinEntityBase \u5b50\u7c7b\uff09\n            entity_id (str): \u5b9e\u4f53\u7684\u552f\u4e00\u6807\u8bc6\u7b26\u3002\n\n        Returns:\n            T: \u6784\u9020\u5b8c\u6210\u7684\u5b9e\u4f53\u5bf9\u8c61\u3002\n        \"\"\"\n        return self._context.sync_run(\n            entity_type.from_grpc(entity_id=entity_id, world_context=self._context)\n        )\n\n    def get_closest_entity_id(\n        self, location: Vector3, max_dist: float, object_type: str | None = None\n    ) -&gt; str:\n        \"\"\"\n        \u83b7\u53d6\u8ddd\u79bb\u6307\u5b9a\u4f4d\u7f6e\u6700\u8fd1\u7684\u67d0\u7c7b\u7269\u4f53\u7684\u5b9e\u4f53 ID\u3002\n\n        Args:\n            location (Vector3): \u53c2\u8003\u4f4d\u7f6e\u3002\n            max_dist (float): \u6700\u5927\u641c\u7d22\u534a\u5f84\u3002\n            object_type (str | None): \u53ef\u9009\u7684\u76ee\u6807\u7c7b\u578b\uff08\u5982 \"cup\", \"bottle\"\uff09\uff0c\u4e3a None \u65f6\u4e0d\u533a\u5206\u7c7b\u578b\u3002\n\n        Returns:\n            str: \u6700\u8fd1\u7269\u4f53\u7684 Entity ID\uff1b\u5982\u679c\u672a\u627e\u5230\uff0c\u5c06\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002\n        \"\"\"\n        return self._context.sync_run(\n            UnaryAPI.find_closest_object_by_type(\n                self._context.conn, location, max_dist, object_type\n            )\n        )\n\n    def get_closest_agent_entity_id(self, location: Vector3, max_dist: float) -&gt; str:\n        \"\"\"\n        \u83b7\u53d6\u8ddd\u79bb\u6307\u5b9a\u4f4d\u7f6e\u6700\u8fd1\u7684 Agent\uff08\u667a\u80fd\u4f53\uff09\u5b9e\u4f53 ID\u3002\n\n        Args:\n            location (Vector3): \u641c\u7d22\u8d77\u70b9\u4f4d\u7f6e\u3002\n            max_dist (float): \u6700\u5927\u641c\u7d22\u534a\u5f84\u3002\n\n        Returns:\n            str: \u6700\u8fd1 Agent \u7684 Entity ID\uff1b\u82e5\u65e0\u7ed3\u679c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002\n        \"\"\"\n        return self._context.sync_run(\n            UnaryAPI.find_closest_agent(self._context.conn, location, max_dist)\n        )\n\n    def get_entity_by_name(self, entity_type: type[T], name: str) -&gt; T:\n        \"\"\"\n        \u57fa\u4e8e\u540d\u79f0\u6784\u9020\u4efb\u610f\u7c7b\u578b\u7684 Entity\u3002id \u652f\u6301\u6a21\u7cca\u5339\u914d\u3002\n\n        Args:\n            name (str): \u652f\u6301\u6a21\u7cca\u5339\u914d\u7684\u540d\u79f0\n            entity_type (Type[T]): \u8981\u6784\u9020\u7684 Entity \u7c7b\u578b\uff08\u5fc5\u987b\u4e3a MixinEntityBase \u5b50\u7c7b\uff09\n\n        Returns:\n            T: \u6784\u9020\u540e\u7684\u5b9e\u4f53\u5bf9\u8c61\n\n        Raises:\n            RuntimeError: \u672a\u627e\u5230\u5339\u914d\u7684\u5b9e\u4f53\n        \"\"\"\n\n        async def _get_entity_by_name() -&gt; T | None:\n            object_ids: list[str] = await LegacyAPI.get_object_ids_by_name(\n                self._context.conn_legacy, name\n            )\n            if not object_ids:\n                return None\n\n            return await entity_type.from_grpc(\n                entity_id=object_ids[0], world_context=self._context\n            )\n\n        entity = self._context.sync_run(_get_entity_by_name())\n        if entity is None:\n            raise RuntimeError(f\"{entity_type.__name__} with name '{name}' not found.\")\n        return entity\n\n    def get_entities_by_rdf_type(self, entity_type: type[T], rdf_type: str) -&gt; list[T]:\n        \"\"\"\n        \u83b7\u53d6\u6240\u6709 RDF \u7c7b\u578b\u5339\u914d\u7684\u5b9e\u4f53\u3002\n\n        Args:\n            rdf_type (str): RDF \u7c7b\u578b\uff0c\u5982 \"cup\"\n            entity_type (Type[T]): \u8981\u6784\u9020\u7684 Entity \u7c7b\u578b\n\n        Returns:\n            list[T]: \u5339\u914d\u5230\u7684\u5b9e\u4f53\u5bf9\u8c61\u5217\u8868\n        \"\"\"\n\n        async def _get_entities() -&gt; list[T]:\n            object_ids: list[str] = await UnaryAPI.get_object_by_rdf(\n                self._context.conn, rdf_type\n            )\n            return [\n                await entity_type.from_grpc(object_id, self._context)\n                for object_id in object_ids\n            ]\n\n        return self._context.sync_run(_get_entities())\n\n    def get_asset_file_content(self, asset_path: str) -&gt; tuple[str, str]:\n        \"\"\"\n        \u83b7\u53d6\u6307\u5b9a\u8d44\u4ea7\u6587\u4ef6\u7684\u5185\u5bb9\u548c\u6700\u540e\u4fee\u6539\u65f6\u95f4\uff08\u81ea\u52a8\u8f6c\u4e3a\u5317\u4eac\u65f6\u95f4\uff09\u3002\n\n        Args:\n            asset_path (str): Unreal \u4e2d\u7684\u8d44\u6e90\u8def\u5f84\uff08\u5982 \"/Game/Config/xxx.json\"\uff09\n\n        Returns:\n            tuple[str, str]:\n                - \u5317\u4eac\u65f6\u95f4\u683c\u5f0f\u7684\u6700\u540e\u4fee\u6539\u65f6\u95f4\uff08ISO \u683c\u5f0f\u5b57\u7b26\u4e32\uff09\n                - \u6587\u4ef6\u5185\u5bb9\u7684\u539f\u59cb JSON \u5b57\u7b26\u4e32\n        \"\"\"\n        from datetime import datetime, timedelta, timezone\n\n        last_modified_time_str, file_content_json_str = self._context.sync_run(\n            UnaryAPI.get_asset_file_content(self._context.conn, asset_path)\n        )\n\n        dt_utc = datetime.fromisoformat(last_modified_time_str.replace(\"Z\", \"+00:00\"))\n        dt_china = dt_utc.astimezone(timezone(timedelta(hours=8)))\n        return dt_china.isoformat(), file_content_json_str\n\n    def change_view_mode(self, new_view_mode: ViewModeType) -&gt; bool:\n        \"\"\"\n        \u5207\u6362 TongSim \u4e3b\u76f8\u673a\u7684\u89c6\u89d2\u6a21\u5f0f\u3002\n\n        Args:\n            new_view_mode (ViewModeType): \u76ee\u6807\u89c6\u89d2\u6a21\u5f0f\u3002\n\n        Returns:\n            bool: \u5207\u6362\u662f\u5426\u6210\u529f\u3002\n        \"\"\"\n\n        return self._context.sync_run(\n            UnaryAPI.switch_camera_mode(self._context.conn, new_view_mode)\n        )\n\n    def change_view_target(self, new_view_agent_id: str) -&gt; bool:\n        \"\"\"\n        \u5207\u6362 TongSim \u76f8\u673a\u8ddf\u968f\u76ee\u6807\uff0c\u5fc5\u987b\u4f20\u5165agent_id\n\n        Args:\n            new_view_agent_id (ViewModeType): \u76ee\u6807\u89d2\u8272ID\u3002\n\n        Returns:\n            bool: \u5207\u6362\u662f\u5426\u6210\u529f\u3002\n        \"\"\"\n\n        return self._context.sync_run(\n            UnaryAPI.camera_switch_character(self._context.conn, new_view_agent_id)\n        )\n\n    def exec_console_command(self, console_command: str) -&gt; bool:\n        \"\"\"\n        \u6267\u884c\u63a7\u5236\u53f0\u6307\u4ee4\uff0c\u7528\u4e8e\u52a8\u6001\u8c03\u6574\u5f15\u64ce\u53c2\u6570\u3001\u8c03\u8bd5\u6216\u6267\u884c\u7279\u5b9a\u6307\u4ee4\u3002\n\n        Args:\n            console_command (str): \u9700\u8981\u6267\u884c\u7684\u63a7\u5236\u53f0\u6307\u4ee4\u5b57\u7b26\u4e32\u3002\n\n        Returns:\n            bool: \u6307\u4ee4\u662f\u5426\u6210\u529f\u53d1\u9001\u5230 TongSim\n        \"\"\"\n        return self._context.sync_run(\n            UnaryAPI.exec_console_command(self._context.conn, console_command)\n        )\n\n    def save_scene(self, path: str, file_name: str, overwrite: bool = True) -&gt; bool:\n        \"\"\"\n        \u4fdd\u5b58\u573a\u666f\u5230\u6307\u5b9a\u7684\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u9ed8\u8ba4\u4fdd\u5b58\u4e3a.pkl\u683c\u5f0f\u3002\n\n        Args:\n            path (str): \u4fdd\u5b58\u6587\u4ef6\u7684\u76ee\u5f55\u8def\u5f84\uff0c\u652f\u6301\u76f8\u5bf9\u8def\u5f84\u548c\u7edd\u5bf9\u8def\u5f84\u3002\n            file_name (str): \u4fdd\u5b58\u7684\u6587\u4ef6\u540d\n            overwrite (bool): \u662f\u5426\u8986\u76d6\u5df2\u5b58\u5728\u7684\u6587\u4ef6\u3002\u5982\u679c\u4e3a False \u4e14\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u8fd4\u56de False\u3002\n\n        Returns:\n            bool: \u5982\u679c\u4fdd\u5b58\u6210\u529f\uff0c\u8fd4\u56de True\uff1b\u5426\u5219\u8fd4\u56de False\u3002\n        \"\"\"\n        if not os.path.isdir(path):\n            _logger.warning(f\"The directory {path} does not exist.\")\n            return False\n\n        response = self._context.sync_run(UnaryAPI.save_game(self._context.conn))\n        file_dir = os.path.join(path, file_name) + \".pkl\"\n\n        # \u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5df2\u7ecf\u5b58\u5728\n        if os.path.isfile(file_dir):\n            if not overwrite:\n                _logger.warning(\n                    f\"The file {file_dir} already exists and overwrite is set to False.\"\n                )\n                return False\n            _logger.info(\n                f\"The file {file_dir} already exists, but will be overwritten.\"\n            )\n\n        try:\n            with open(file_dir, \"wb\") as file:\n                pickle.dump(response, file)\n            return True\n        except Exception as e:\n            _logger.warning(f\"Error in saving scene: {e}\")\n            return False\n\n    def load_scene(self, path: str, file_name: str) -&gt; bool:\n        \"\"\"\n        \u4ece\u6307\u5b9a\u8def\u5f84\u52a0\u8f7d\u573a\u666f\u3002\n\n        Args:\n            path (str): \u573a\u666f\u6587\u4ef6\u7684\u76ee\u5f55\u8def\u5f84\u3002\n            file_name (str): \u9700\u8981\u52a0\u8f7d\u7684\u6587\u4ef6\u540d\uff0c\u652f\u6301 .pkl \u683c\u5f0f\u3002\n\n        Returns:\n            bool: \u5982\u679c\u52a0\u8f7d\u6210\u529f\uff0c\u8fd4\u56de True\uff1b\u5426\u5219\u8fd4\u56de False\u3002\n        \"\"\"\n        return self._load_scene(path, file_name)\n\n    def _load_scene(self, path: str, file_name: str) -&gt; bool:\n        if not os.path.isdir(path):\n            _logger.warning(f\"The directory {path} does not exist.\")\n            return False\n\n        file_dir = os.path.join(path, file_name)\n\n        if os.path.isfile(file_dir):\n            file_dir = file_dir\n        elif os.path.isfile(file_dir + \".pkl\"):\n            file_dir = file_dir + \".pkl\"\n        elif os.path.isfile(file_dir + \".pb\"):\n            file_dir = file_dir + \".pb\"\n        else:\n            _logger.warning(f\"The file {file_dir} does not exist.\")\n            return False\n\n        try:\n            file_extension = os.path.splitext(file_dir)[1].lower()\n\n            with open(file_dir, \"rb\") as file:\n                if file_extension == \".pkl\":\n                    self._context.sync_run(\n                        UnaryAPI.load_game(self._context.conn, pickle.load(file))\n                    )\n                elif file_extension == \".pb\":\n                    self._context.sync_run(\n                        UnaryAPI.load_game(self._context.conn, file.read())\n                    )\n                else:\n                    _logger.warning(f\"Unsupported file format for {file_dir}.\")\n                    return False\n\n            _logger.info(f\"Scene loaded successfully from {file_dir}.\")\n            return True\n\n        except Exception as e:\n            _logger.warning(f\"There are Error in loading scene: {e}\")\n            return False\n\n    def close(self):\n        \"\"\"\u5173\u95ed\u5f53\u524d\u5b9e\u4f8b\u5e76\u91ca\u653e\u8d44\u6e90\"\"\"\n        self._context.release()\n\n    def __enter__(self):\n        \"\"\"\u652f\u6301 with \u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\"\"\"\n        return self\n\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        \"\"\"\u652f\u6301 with \u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\"\"\"\n        self.close()\n</code></pre>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim.utils","title":"utils  <code>property</code>","text":"<pre><code>utils: UtilFuncs\n</code></pre> <p>\u83b7\u53d6\u5c01\u88c5\u7684\u5b9e\u7528\u5de5\u5177\u51fd\u6570\u63a5\u53e3\u3002</p> <p>Returns:</p> Name Type Description <code>UtilFuncs</code> <code>UtilFuncs</code> <p>\u63d0\u4f9b\u5b9e\u7528\u5de5\u5177\u51fd\u6570\u65b9\u6cd5\u3002</p>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim.debug_draw","title":"debug_draw  <code>property</code>","text":"<pre><code>debug_draw: DebugDraw\n</code></pre> <p>\u83b7\u53d6 DebugDraw \u8c03\u8bd5\u7ed8\u56fe\u63a5\u53e3\u5bf9\u8c61\u3002</p> <p>Returns:</p> Name Type Description <code>DebugDraw</code> <code>DebugDraw</code> <p>\u63d0\u4f9b\u8c03\u8bd5\u7ed8\u5236\u65b9\u6cd5\uff08\u5982\u5750\u6807\u7cfb\u3001\u7ebf\u6bb5\u3001\u76d2\u5b50\uff09\u7684\u7ba1\u7406\u7c7b\u3002</p>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim.pg_manager","title":"pg_manager  <code>property</code>","text":"<pre><code>pg_manager: PGManager\n</code></pre> <p>\u83b7\u53d6 PG \u7ba1\u7406\u5668\uff0c\u7528\u4e8e\u8bbf\u95ee\u548c\u64cd\u4f5c\u5f53\u524d\u573a\u666f\u7684 Parsing-Graph\uff08PG\uff09\u3002 Returns:     PGManager: \u5f53\u524d\u8fde\u63a5\u4e0a\u4e0b\u6587\u4e2d\u7684 PG \u7ba1\u7406\u5668\u5b9e\u4f8b\u3002</p>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim.spatial_manager","title":"spatial_manager  <code>property</code>","text":"<pre><code>spatial_manager: SpatialManager\n</code></pre> <p>\u83b7\u53d6 spatial manager\uff0c\u7528\u4e8e\u5bf9\u573a\u666f\u7a7a\u95f4\u7ed3\u6784\u7684\u8bbf\u95ee\u80fd\u529b\uff0c\u5305\u62ec: \u623f\u95f4\u4fe1\u606f\u3001\u5bfc\u822a\u3001\u51fa\u751f\u70b9\u7b49\u7b49</p>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim.trace_manager","title":"trace_manager  <code>property</code>","text":"<pre><code>trace_manager: TraceManager\n</code></pre> <p>\u83b7\u53d6 Trace Manager\uff0c\u7528\u4e8e\u5bf9\u573a\u666f\u505a\u78b0\u649e\u68c0\u6d4b\u3002</p>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim.context","title":"context  <code>property</code>","text":"<pre><code>context: WorldContext\n</code></pre> <p>\u83b7\u53d6\u5f53\u524d TongSim \u5b9e\u4f8b\u7684\u8fd0\u884c\u65f6\u4e0a\u4e0b\u6587\u3002</p> <p>Returns:</p> Name Type Description <code>WorldContext</code> <code>WorldContext</code> <p>\u7ba1\u7406\u8fde\u63a5\u3001\u4e8b\u4ef6\u5faa\u73af\u3001\u4efb\u52a1\u6d3e\u53d1\u7b49\u7684\u4e0a\u4e0b\u6587\u8d44\u6e90\u5bf9\u8c61\u3002</p>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim.open_level","title":"open_level","text":"<pre><code>open_level(level_name: str) -&gt; bool\n</code></pre> <p>\u6253\u5f00\u4e00\u4e2a\u6307\u5b9a\u5173\u5361\u3002</p> <p>Parameters:</p> Name Type Description Default <code>level_name</code> <code>str</code> <p>\u5173\u5361\u8d44\u6e90\u540d\uff08\u652f\u6301\u81ea\u52a8\u8865\u5168 SDBP_Map_ \u524d\u7f00\uff09</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u662f\u5426\u6253\u5f00\u6210\u529f</p> Source code in <code>src\\tongsim\\tongsim.py</code> <pre><code>def open_level(self, level_name: str) -&gt; bool:\n    \"\"\"\n    \u6253\u5f00\u4e00\u4e2a\u6307\u5b9a\u5173\u5361\u3002\n\n    Args:\n        level_name (str): \u5173\u5361\u8d44\u6e90\u540d\uff08\u652f\u6301\u81ea\u52a8\u8865\u5168 SDBP_Map_ \u524d\u7f00\uff09\n\n    Returns:\n        bool: \u662f\u5426\u6253\u5f00\u6210\u529f\n    \"\"\"\n\n    async def async_open_level():\n        await self.pg_manager.async_stop_pg_stream()\n        return await LegacyAPI.open_level(self._context.conn_legacy, level_name)\n\n    if not level_name.startswith(\"SDBP_Map_\"):\n        level_name = f\"SDBP_Map_{level_name}\"\n\n    return self._context.sync_run(async_open_level())\n</code></pre>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim.spawn_entity","title":"spawn_entity","text":"<pre><code>spawn_entity(\n    entity_type: type[T],\n    blueprint: str,\n    location: Vector3,\n    desired_name: str = \"\",\n    quat: Quaternion | None = None,\n    scale: Vector3 | None = None,\n    is_simulating_physics: bool = True,\n    is_vr_grippable: bool = True,\n) -&gt; T\n</code></pre> <p>\u521b\u5efa\u4e00\u4e2a\u5b9e\u4f53\u5bf9\u8c61\uff0c\u5e76\u6784\u9020\u6307\u5b9a\u7c7b\u578b\u7684 Entity\u3002 \u8d44\u4ea7\u540d\u79f0\u53ef\u67e5\u9605\u8d44\u4ea7\u5e93\uff1a https://asset-tongai.mybigai.ac.cn/</p> <p>Parameters:</p> Name Type Description Default <code>entity_type</code> <code>Type[T]</code> <p>\u8981\u8fd4\u56de\u7684\u5b9e\u4f53\u7c7b\u578b\uff0c\u5982 BaseObjectEntity\u3001AgentEntity\u3002</p> required <code>blueprint</code> <code>str</code> <p>\u4f7f\u7528\u7684\u8d44\u4ea7\u540d\u79f0\u3002</p> required <code>location</code> <code>Vector3</code> <p>\u5b9e\u4f53\u7684\u521d\u59cb\u4f4d\u7f6e\u3002</p> required <code>desired_name</code> <code>str</code> <p>\u671f\u671b\u7684\u5b9e\u4f53\u540d\u79f0\u3002</p> <code>''</code> <code>quat</code> <code>Quaternion | None</code> <p>\u521d\u59cb\u65cb\u8f6c\uff08\u56db\u5143\u6570\uff09\u3002</p> <code>None</code> <code>scale</code> <code>Vector3 | None</code> <p>\u521d\u59cb\u7f29\u653e\u3002</p> <code>None</code> <code>is_simulating_physics</code> <code>bool</code> <p>\u662f\u5426\u542f\u7528\u7269\u7406\u6a21\u62df\u3002</p> <code>True</code> <code>is_vr_grippable</code> <code>bool</code> <p>\u662f\u5426\u5141\u8bb8 VR \u4ea4\u4e92\u3002</p> <code>True</code> <p>Returns:</p> Name Type Description <code>T</code> <code>T</code> <p>\u6784\u9020\u5b8c\u6210\u7684 Entity \u5b9e\u4f8b\u3002</p> Source code in <code>src\\tongsim\\tongsim.py</code> <pre><code>def spawn_entity(\n    self,\n    entity_type: type[T],\n    blueprint: str,\n    location: Vector3,\n    desired_name: str = \"\",\n    quat: Quaternion | None = None,\n    scale: Vector3 | None = None,\n    is_simulating_physics: bool = True,\n    is_vr_grippable: bool = True,\n) -&gt; T:\n    \"\"\"\n    \u521b\u5efa\u4e00\u4e2a\u5b9e\u4f53\u5bf9\u8c61\uff0c\u5e76\u6784\u9020\u6307\u5b9a\u7c7b\u578b\u7684 Entity\u3002\n    \u8d44\u4ea7\u540d\u79f0\u53ef\u67e5\u9605\u8d44\u4ea7\u5e93\uff1a https://asset-tongai.mybigai.ac.cn/\n\n    Args:\n        entity_type (Type[T]): \u8981\u8fd4\u56de\u7684\u5b9e\u4f53\u7c7b\u578b\uff0c\u5982 BaseObjectEntity\u3001AgentEntity\u3002\n        blueprint (str): \u4f7f\u7528\u7684\u8d44\u4ea7\u540d\u79f0\u3002\n        location (Vector3): \u5b9e\u4f53\u7684\u521d\u59cb\u4f4d\u7f6e\u3002\n        desired_name (str, optional): \u671f\u671b\u7684\u5b9e\u4f53\u540d\u79f0\u3002\n        quat (Quaternion | None, optional): \u521d\u59cb\u65cb\u8f6c\uff08\u56db\u5143\u6570\uff09\u3002\n        scale (Vector3 | None, optional): \u521d\u59cb\u7f29\u653e\u3002\n        is_simulating_physics (bool): \u662f\u5426\u542f\u7528\u7269\u7406\u6a21\u62df\u3002\n        is_vr_grippable (bool): \u662f\u5426\u5141\u8bb8 VR \u4ea4\u4e92\u3002\n\n    Returns:\n        T: \u6784\u9020\u5b8c\u6210\u7684 Entity \u5b9e\u4f8b\u3002\n    \"\"\"\n\n    async def _spawn_and_wrap() -&gt; T:\n        entity_id: str = await UnaryAPI.spawn_object(\n            self._context.conn,\n            blueprint=blueprint,\n            desired_name=desired_name,\n            location=location,\n            rotation=quat,\n            scale=scale,\n            is_simulating_physics=is_simulating_physics,\n            is_vr_grippable=is_vr_grippable,\n        )\n        return await entity_type.from_grpc(entity_id, self._context)\n\n    return self._context.sync_run(_spawn_and_wrap())\n</code></pre>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim.destroy_entity","title":"destroy_entity","text":"<pre><code>destroy_entity(entity_id: str) -&gt; bool\n</code></pre> <p>\u9500\u6bc1\u6307\u5b9a ID \u7684\u5b9e\u4f53\u5bf9\u8c61\uff0c\u91ca\u653e\u573a\u666f\u4e2d\u7684\u8d44\u6e90\u3002</p> <p>Parameters:</p> Name Type Description Default <code>entity_id</code> <code>str</code> <p>\u5b9e\u4f53\u7684\u552f\u4e00 ID\u3002</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u662f\u5426\u6210\u529f\u9500\u6bc1\u5b9e\u4f53\u3002</p> Source code in <code>src\\tongsim\\tongsim.py</code> <pre><code>def destroy_entity(self, entity_id: str) -&gt; bool:\n    \"\"\"\n    \u9500\u6bc1\u6307\u5b9a ID \u7684\u5b9e\u4f53\u5bf9\u8c61\uff0c\u91ca\u653e\u573a\u666f\u4e2d\u7684\u8d44\u6e90\u3002\n\n    Args:\n        entity_id (str): \u5b9e\u4f53\u7684\u552f\u4e00 ID\u3002\n\n    Returns:\n        bool: \u662f\u5426\u6210\u529f\u9500\u6bc1\u5b9e\u4f53\u3002\n    \"\"\"\n    return self._context.sync_run(\n        LegacyAPI.destroy_object(self._context.conn_legacy, entity_id)\n    )\n</code></pre>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim.spawn_agent","title":"spawn_agent","text":"<pre><code>spawn_agent(\n    blueprint: str,\n    location: Vector3,\n    desired_name: str = \"\",\n    quat: Quaternion | None = None,\n    scale: Vector3 | None = None,\n) -&gt; AgentEntity\n</code></pre> <p>\u521b\u5efa\u4e00\u4e2a agent \u5b9e\u4f8b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>blueprint</code> <code>str</code> <p>\u84dd\u56fe\u8d44\u6e90\u540d</p> required <code>location</code> <code>Vector3</code> <p>\u4f4d\u7f6e\u5411\u91cf</p> required <p>Returns:</p> Name Type Description <code>str</code> <code>AgentEntity</code> <p>\u65b0 agent \u7684 UE \u5b9e\u4f8b\u540d</p> Source code in <code>src\\tongsim\\tongsim.py</code> <pre><code>def spawn_agent(\n    self,\n    blueprint: str,\n    location: Vector3,\n    desired_name: str = \"\",\n    quat: Quaternion | None = None,\n    scale: Vector3 | None = None,\n) -&gt; AgentEntity:\n    \"\"\"\n    \u521b\u5efa\u4e00\u4e2a agent \u5b9e\u4f8b\u3002\n\n    Args:\n        blueprint (str): \u84dd\u56fe\u8d44\u6e90\u540d\n        location (Vector3): \u4f4d\u7f6e\u5411\u91cf\n\n    Returns:\n        str: \u65b0 agent \u7684 UE \u5b9e\u4f8b\u540d\n    \"\"\"\n\n    async def _spawn_agent_and_wrap() -&gt; AgentEntity:\n        agent_id: str = await UnaryAPI.spawn_object(\n            self._context.conn,\n            blueprint=blueprint,\n            desired_name=desired_name,\n            location=location,\n            rotation=quat,\n            scale=scale,\n            is_simulating_physics=True,\n            is_vr_grippable=False,\n        )\n        return await AgentEntity.from_grpc(agent_id, self._context)\n\n    return self._context.sync_run(_spawn_agent_and_wrap())\n</code></pre>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim.spawn_camera","title":"spawn_camera","text":"<pre><code>spawn_camera(\n    camera_name: str,\n    loc: Vector3,\n    quat: Quaternion,\n    fov: float = 90.0,\n    width: int = 1280,\n    height: int = 720,\n    pixel_streamer_name: str | None = None,\n) -&gt; CameraEntity\n</code></pre> <p>\u521b\u5efa\u4e00\u4e2a\u6444\u50cf\u673a\u5b9e\u4f8b</p> <p>Parameters:</p> Name Type Description Default <code>camera_name</code> <code>str</code> <p>\u6444\u50cf\u673a\u540d\u79f0</p> required <code>loc</code> <code>Vector3</code> <p>\u6444\u50cf\u673a\u4f4d\u7f6e</p> required <code>quat</code> <code>Quaternion</code> <p>\u6444\u50cf\u673a\u65cb\u8f6c\uff08\u56db\u5143\u6570\uff09</p> required <code>fov</code> <code>float</code> <p>\u6444\u50cf\u673a\u89c6\u91ce\u89d2</p> <code>90.0</code> <code>width</code> <code>int</code> <p>\u56fe\u50cf\u5bbd\u5ea6</p> <code>1280</code> <code>height</code> <code>int</code> <p>\u56fe\u50cf\u9ad8\u5ea6</p> <code>720</code> <code>pixel_streamer_name</code> <code>Optional[str]</code> <p>\u8be5\u76f8\u673a\u5bf9\u5e94\u7684 PixelStreaming \u6d41\u540d\u79f0</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Entity</code> <code>CameraEntity</code> <p>\u5c01\u88c5\u6444\u50cf\u673a\u7684 Entity \u5b9e\u4f8b</p> Source code in <code>src\\tongsim\\tongsim.py</code> <pre><code>def spawn_camera(\n    self,\n    camera_name: str,\n    loc: Vector3,\n    quat: Quaternion,\n    fov: float = 90.0,\n    width: int = 1280,\n    height: int = 720,\n    pixel_streamer_name: str | None = None,\n) -&gt; CameraEntity:\n    \"\"\"\n    \u521b\u5efa\u4e00\u4e2a\u6444\u50cf\u673a\u5b9e\u4f8b\n\n    Args:\n        camera_name (str): \u6444\u50cf\u673a\u540d\u79f0\n        loc (Vector3): \u6444\u50cf\u673a\u4f4d\u7f6e\n        quat (Quaternion): \u6444\u50cf\u673a\u65cb\u8f6c\uff08\u56db\u5143\u6570\uff09\n        fov (float): \u6444\u50cf\u673a\u89c6\u91ce\u89d2\n        width (int): \u56fe\u50cf\u5bbd\u5ea6\n        height (int): \u56fe\u50cf\u9ad8\u5ea6\n        pixel_streamer_name (Optional[str]): \u8be5\u76f8\u673a\u5bf9\u5e94\u7684 PixelStreaming \u6d41\u540d\u79f0\n\n    Returns:\n        Entity: \u5c01\u88c5\u6444\u50cf\u673a\u7684 Entity \u5b9e\u4f8b\n    \"\"\"\n\n    async def _spawn_camera_and_wrap() -&gt; CameraEntity:\n        camera_id = await UnaryAPI.spawn_camera(\n            self._context.conn,\n            camera_name,\n            loc,\n            quat,\n            fov,\n            width,\n            height,\n            pixel_streamer_name,\n        )\n        return await CameraEntity.from_grpc(camera_id, self._context)\n\n    return self._context.sync_run(_spawn_camera_and_wrap())\n</code></pre>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim.spawn_hf_camera","title":"spawn_hf_camera","text":"<pre><code>spawn_hf_camera(\n    camera_name: str,\n    frequency: int,\n    socket: str,\n    attach_owner: str = \"\",\n    fov: float = 90.0,\n    width: int = 1280,\n    height: int = 720,\n) -&gt; HFCameraEntity\n</code></pre> <p>\u521b\u5efa\u4e00\u4e2a\u6444\u50cf\u673a\u5b9e\u4f8b</p> <p>Parameters:</p> Name Type Description Default <code>camera_name</code> <code>str</code> <p>\u6444\u50cf\u673a\u5728\u7cfb\u7edf\u4e2d\u7684\u552f\u4e00\u540d\u79f0/\u6807\u8bc6\u3002</p> required <code>frequency</code> <code>int</code> <p>\u91c7\u6837\u9891\u7387\uff08Hz\uff09\uff0c\u5373\u671f\u671b\u7684\u5e27\u7387\u3002\u5fc5\u987b\u4e3a\u6b63\u6570\u3002 \u6ce8\u610f\uff1a\u5b9e\u9645\u63a8\u6d41\u5e27\u7387\u53ef\u80fd\u53d7\u5f15\u64ce/\u5e26\u5bbd\u7b49\u9650\u5236\u3002</p> required <code>socket</code> <code>str</code> <p>\u7ed1\u5b9a\u7684socket\u540d\u79f0\u3002</p> required <code>attach_owner</code> <code>str</code> <p>\u8981\u6302\u8f7d/\u8ddf\u968f\u7684\u5bbf\u4e3b\u5b9e\u4f53\uff0c\u7531\u4e8e\u76ee\u524d\u6ca1\u6709\u79fb\u52a8\u80fd\u529b\uff0c\u53ea\u80fd\u4f9d\u9644\u4e8eagent\u3002</p> <code>''</code> <code>fov</code> <code>float</code> <p>\u6c34\u5e73\u89c6\u573a\u89d2\uff08\u5355\u4f4d\uff1a\u5ea6\uff09\u3002\u9ed8\u8ba4 90.0\uff0c\u5efa\u8bae\u8303\u56f4 (0, 180)\u3002</p> <code>90.0</code> <code>width</code> <code>int</code> <p>\u56fe\u50cf\u5bbd\u5ea6\uff08\u50cf\u7d20\uff09\uff0c\u5fc5\u987b\u4e3a\u6b63\u6570\u3002\u9ed8\u8ba4 1280\u3002</p> <code>1280</code> <code>height</code> <code>int</code> <p>\u56fe\u50cf\u9ad8\u5ea6\uff08\u50cf\u7d20\uff09\uff0c\u5fc5\u987b\u4e3a\u6b63\u6570\u3002\u9ed8\u8ba4 720\u3002</p> <code>720</code> <p>Returns:     HFCameraEntity: \u5c01\u88c5\u9ad8\u901f\u6444\u50cf\u673a\u7684 HFCameraEntity \u5b9e\u4f8b</p> Source code in <code>src\\tongsim\\tongsim.py</code> <pre><code>def spawn_hf_camera(\n    self,\n    camera_name: str,\n    frequency: int,\n    socket: str,\n    attach_owner: str = \"\",\n    fov: float = 90.0,\n    width: int = 1280,\n    height: int = 720,\n) -&gt; HFCameraEntity:\n    \"\"\"\n    \u521b\u5efa\u4e00\u4e2a\u6444\u50cf\u673a\u5b9e\u4f8b\n\n    Args:\n        camera_name (str): \u6444\u50cf\u673a\u5728\u7cfb\u7edf\u4e2d\u7684\u552f\u4e00\u540d\u79f0/\u6807\u8bc6\u3002\n        frequency (int): \u91c7\u6837\u9891\u7387\uff08Hz\uff09\uff0c\u5373\u671f\u671b\u7684\u5e27\u7387\u3002\u5fc5\u987b\u4e3a\u6b63\u6570\u3002\n            \u6ce8\u610f\uff1a\u5b9e\u9645\u63a8\u6d41\u5e27\u7387\u53ef\u80fd\u53d7\u5f15\u64ce/\u5e26\u5bbd\u7b49\u9650\u5236\u3002\n        socket (str): \u7ed1\u5b9a\u7684socket\u540d\u79f0\u3002\n        attach_owner (str): \u8981\u6302\u8f7d/\u8ddf\u968f\u7684\u5bbf\u4e3b\u5b9e\u4f53\uff0c\u7531\u4e8e\u76ee\u524d\u6ca1\u6709\u79fb\u52a8\u80fd\u529b\uff0c\u53ea\u80fd\u4f9d\u9644\u4e8eagent\u3002\n        fov (float): \u6c34\u5e73\u89c6\u573a\u89d2\uff08\u5355\u4f4d\uff1a\u5ea6\uff09\u3002\u9ed8\u8ba4 90.0\uff0c\u5efa\u8bae\u8303\u56f4 (0, 180)\u3002\n        width (int): \u56fe\u50cf\u5bbd\u5ea6\uff08\u50cf\u7d20\uff09\uff0c\u5fc5\u987b\u4e3a\u6b63\u6570\u3002\u9ed8\u8ba4 1280\u3002\n        height (int): \u56fe\u50cf\u9ad8\u5ea6\uff08\u50cf\u7d20\uff09\uff0c\u5fc5\u987b\u4e3a\u6b63\u6570\u3002\u9ed8\u8ba4 720\u3002\n    Returns:\n        HFCameraEntity: \u5c01\u88c5\u9ad8\u901f\u6444\u50cf\u673a\u7684 HFCameraEntity \u5b9e\u4f8b\n    \"\"\"\n\n    async def _spawn_camera_and_wrap() -&gt; HFCameraEntity:\n        camera_id = camera_name + \"_\" + attach_owner\n        await UnaryAPI.spawn_hf_camera(\n            self._context.conn,\n            camera_id,\n            frequency,\n            socket,\n            True,\n            True,\n            True,\n            attach_owner,\n            fov,\n            width,\n            height,\n        )\n        return await HFCameraEntity.create(camera_id, self._context, [])\n\n    return self._context.sync_run(_spawn_camera_and_wrap())\n</code></pre>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim.entity_from_id","title":"entity_from_id","text":"<pre><code>entity_from_id(entity_type: type[T], entity_id: str) -&gt; T\n</code></pre> <p>\u6839\u636e Entity ID \u6784\u9020\u4e00\u4e2a\u5b8c\u6574\u7684 Entity \u5b9e\u4f8b, \u8981\u6c42 id \u5b8c\u5168\u51c6\u786e\u3002\uff08\u8be5\u63a5\u53e3\u5f00\u9500\u6bd4 get_entity_by_name \u8981\u4f4e\u4e00\u4e9b\uff09</p> <p>Parameters:</p> Name Type Description Default <code>entity_type</code> <code>Type[T]</code> <p>\u8981\u6784\u9020\u7684 Entity \u7c7b\u578b\uff08\u5fc5\u987b\u4e3a MixinEntityBase \u5b50\u7c7b\uff09</p> required <code>entity_id</code> <code>str</code> <p>\u5b9e\u4f53\u7684\u552f\u4e00\u6807\u8bc6\u7b26\u3002</p> required <p>Returns:</p> Name Type Description <code>T</code> <code>T</code> <p>\u6784\u9020\u5b8c\u6210\u7684\u5b9e\u4f53\u5bf9\u8c61\u3002</p> Source code in <code>src\\tongsim\\tongsim.py</code> <pre><code>def entity_from_id(self, entity_type: type[T], entity_id: str) -&gt; T:\n    \"\"\"\n    \u6839\u636e Entity ID \u6784\u9020\u4e00\u4e2a\u5b8c\u6574\u7684 Entity \u5b9e\u4f8b, \u8981\u6c42 id \u5b8c\u5168\u51c6\u786e\u3002\uff08\u8be5\u63a5\u53e3\u5f00\u9500\u6bd4 get_entity_by_name \u8981\u4f4e\u4e00\u4e9b\uff09\n\n    Args:\n        entity_type (Type[T]): \u8981\u6784\u9020\u7684 Entity \u7c7b\u578b\uff08\u5fc5\u987b\u4e3a MixinEntityBase \u5b50\u7c7b\uff09\n        entity_id (str): \u5b9e\u4f53\u7684\u552f\u4e00\u6807\u8bc6\u7b26\u3002\n\n    Returns:\n        T: \u6784\u9020\u5b8c\u6210\u7684\u5b9e\u4f53\u5bf9\u8c61\u3002\n    \"\"\"\n    return self._context.sync_run(\n        entity_type.from_grpc(entity_id=entity_id, world_context=self._context)\n    )\n</code></pre>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim.get_closest_entity_id","title":"get_closest_entity_id","text":"<pre><code>get_closest_entity_id(\n    location: Vector3,\n    max_dist: float,\n    object_type: str | None = None,\n) -&gt; str\n</code></pre> <p>\u83b7\u53d6\u8ddd\u79bb\u6307\u5b9a\u4f4d\u7f6e\u6700\u8fd1\u7684\u67d0\u7c7b\u7269\u4f53\u7684\u5b9e\u4f53 ID\u3002</p> <p>Parameters:</p> Name Type Description Default <code>location</code> <code>Vector3</code> <p>\u53c2\u8003\u4f4d\u7f6e\u3002</p> required <code>max_dist</code> <code>float</code> <p>\u6700\u5927\u641c\u7d22\u534a\u5f84\u3002</p> required <code>object_type</code> <code>str | None</code> <p>\u53ef\u9009\u7684\u76ee\u6807\u7c7b\u578b\uff08\u5982 \"cup\", \"bottle\"\uff09\uff0c\u4e3a None \u65f6\u4e0d\u533a\u5206\u7c7b\u578b\u3002</p> <code>None</code> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>\u6700\u8fd1\u7269\u4f53\u7684 Entity ID\uff1b\u5982\u679c\u672a\u627e\u5230\uff0c\u5c06\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002</p> Source code in <code>src\\tongsim\\tongsim.py</code> <pre><code>def get_closest_entity_id(\n    self, location: Vector3, max_dist: float, object_type: str | None = None\n) -&gt; str:\n    \"\"\"\n    \u83b7\u53d6\u8ddd\u79bb\u6307\u5b9a\u4f4d\u7f6e\u6700\u8fd1\u7684\u67d0\u7c7b\u7269\u4f53\u7684\u5b9e\u4f53 ID\u3002\n\n    Args:\n        location (Vector3): \u53c2\u8003\u4f4d\u7f6e\u3002\n        max_dist (float): \u6700\u5927\u641c\u7d22\u534a\u5f84\u3002\n        object_type (str | None): \u53ef\u9009\u7684\u76ee\u6807\u7c7b\u578b\uff08\u5982 \"cup\", \"bottle\"\uff09\uff0c\u4e3a None \u65f6\u4e0d\u533a\u5206\u7c7b\u578b\u3002\n\n    Returns:\n        str: \u6700\u8fd1\u7269\u4f53\u7684 Entity ID\uff1b\u5982\u679c\u672a\u627e\u5230\uff0c\u5c06\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002\n    \"\"\"\n    return self._context.sync_run(\n        UnaryAPI.find_closest_object_by_type(\n            self._context.conn, location, max_dist, object_type\n        )\n    )\n</code></pre>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim.get_closest_agent_entity_id","title":"get_closest_agent_entity_id","text":"<pre><code>get_closest_agent_entity_id(\n    location: Vector3, max_dist: float\n) -&gt; str\n</code></pre> <p>\u83b7\u53d6\u8ddd\u79bb\u6307\u5b9a\u4f4d\u7f6e\u6700\u8fd1\u7684 Agent\uff08\u667a\u80fd\u4f53\uff09\u5b9e\u4f53 ID\u3002</p> <p>Parameters:</p> Name Type Description Default <code>location</code> <code>Vector3</code> <p>\u641c\u7d22\u8d77\u70b9\u4f4d\u7f6e\u3002</p> required <code>max_dist</code> <code>float</code> <p>\u6700\u5927\u641c\u7d22\u534a\u5f84\u3002</p> required <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>\u6700\u8fd1 Agent \u7684 Entity ID\uff1b\u82e5\u65e0\u7ed3\u679c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002</p> Source code in <code>src\\tongsim\\tongsim.py</code> <pre><code>def get_closest_agent_entity_id(self, location: Vector3, max_dist: float) -&gt; str:\n    \"\"\"\n    \u83b7\u53d6\u8ddd\u79bb\u6307\u5b9a\u4f4d\u7f6e\u6700\u8fd1\u7684 Agent\uff08\u667a\u80fd\u4f53\uff09\u5b9e\u4f53 ID\u3002\n\n    Args:\n        location (Vector3): \u641c\u7d22\u8d77\u70b9\u4f4d\u7f6e\u3002\n        max_dist (float): \u6700\u5927\u641c\u7d22\u534a\u5f84\u3002\n\n    Returns:\n        str: \u6700\u8fd1 Agent \u7684 Entity ID\uff1b\u82e5\u65e0\u7ed3\u679c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002\n    \"\"\"\n    return self._context.sync_run(\n        UnaryAPI.find_closest_agent(self._context.conn, location, max_dist)\n    )\n</code></pre>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim.get_entity_by_name","title":"get_entity_by_name","text":"<pre><code>get_entity_by_name(entity_type: type[T], name: str) -&gt; T\n</code></pre> <p>\u57fa\u4e8e\u540d\u79f0\u6784\u9020\u4efb\u610f\u7c7b\u578b\u7684 Entity\u3002id \u652f\u6301\u6a21\u7cca\u5339\u914d\u3002</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>\u652f\u6301\u6a21\u7cca\u5339\u914d\u7684\u540d\u79f0</p> required <code>entity_type</code> <code>Type[T]</code> <p>\u8981\u6784\u9020\u7684 Entity \u7c7b\u578b\uff08\u5fc5\u987b\u4e3a MixinEntityBase \u5b50\u7c7b\uff09</p> required <p>Returns:</p> Name Type Description <code>T</code> <code>T</code> <p>\u6784\u9020\u540e\u7684\u5b9e\u4f53\u5bf9\u8c61</p> <p>Raises:</p> Type Description <code>RuntimeError</code> <p>\u672a\u627e\u5230\u5339\u914d\u7684\u5b9e\u4f53</p> Source code in <code>src\\tongsim\\tongsim.py</code> <pre><code>def get_entity_by_name(self, entity_type: type[T], name: str) -&gt; T:\n    \"\"\"\n    \u57fa\u4e8e\u540d\u79f0\u6784\u9020\u4efb\u610f\u7c7b\u578b\u7684 Entity\u3002id \u652f\u6301\u6a21\u7cca\u5339\u914d\u3002\n\n    Args:\n        name (str): \u652f\u6301\u6a21\u7cca\u5339\u914d\u7684\u540d\u79f0\n        entity_type (Type[T]): \u8981\u6784\u9020\u7684 Entity \u7c7b\u578b\uff08\u5fc5\u987b\u4e3a MixinEntityBase \u5b50\u7c7b\uff09\n\n    Returns:\n        T: \u6784\u9020\u540e\u7684\u5b9e\u4f53\u5bf9\u8c61\n\n    Raises:\n        RuntimeError: \u672a\u627e\u5230\u5339\u914d\u7684\u5b9e\u4f53\n    \"\"\"\n\n    async def _get_entity_by_name() -&gt; T | None:\n        object_ids: list[str] = await LegacyAPI.get_object_ids_by_name(\n            self._context.conn_legacy, name\n        )\n        if not object_ids:\n            return None\n\n        return await entity_type.from_grpc(\n            entity_id=object_ids[0], world_context=self._context\n        )\n\n    entity = self._context.sync_run(_get_entity_by_name())\n    if entity is None:\n        raise RuntimeError(f\"{entity_type.__name__} with name '{name}' not found.\")\n    return entity\n</code></pre>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim.get_entities_by_rdf_type","title":"get_entities_by_rdf_type","text":"<pre><code>get_entities_by_rdf_type(\n    entity_type: type[T], rdf_type: str\n) -&gt; list[T]\n</code></pre> <p>\u83b7\u53d6\u6240\u6709 RDF \u7c7b\u578b\u5339\u914d\u7684\u5b9e\u4f53\u3002</p> <p>Parameters:</p> Name Type Description Default <code>rdf_type</code> <code>str</code> <p>RDF \u7c7b\u578b\uff0c\u5982 \"cup\"</p> required <code>entity_type</code> <code>Type[T]</code> <p>\u8981\u6784\u9020\u7684 Entity \u7c7b\u578b</p> required <p>Returns:</p> Type Description <code>list[T]</code> <p>list[T]: \u5339\u914d\u5230\u7684\u5b9e\u4f53\u5bf9\u8c61\u5217\u8868</p> Source code in <code>src\\tongsim\\tongsim.py</code> <pre><code>def get_entities_by_rdf_type(self, entity_type: type[T], rdf_type: str) -&gt; list[T]:\n    \"\"\"\n    \u83b7\u53d6\u6240\u6709 RDF \u7c7b\u578b\u5339\u914d\u7684\u5b9e\u4f53\u3002\n\n    Args:\n        rdf_type (str): RDF \u7c7b\u578b\uff0c\u5982 \"cup\"\n        entity_type (Type[T]): \u8981\u6784\u9020\u7684 Entity \u7c7b\u578b\n\n    Returns:\n        list[T]: \u5339\u914d\u5230\u7684\u5b9e\u4f53\u5bf9\u8c61\u5217\u8868\n    \"\"\"\n\n    async def _get_entities() -&gt; list[T]:\n        object_ids: list[str] = await UnaryAPI.get_object_by_rdf(\n            self._context.conn, rdf_type\n        )\n        return [\n            await entity_type.from_grpc(object_id, self._context)\n            for object_id in object_ids\n        ]\n\n    return self._context.sync_run(_get_entities())\n</code></pre>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim.get_asset_file_content","title":"get_asset_file_content","text":"<pre><code>get_asset_file_content(asset_path: str) -&gt; tuple[str, str]\n</code></pre> <p>\u83b7\u53d6\u6307\u5b9a\u8d44\u4ea7\u6587\u4ef6\u7684\u5185\u5bb9\u548c\u6700\u540e\u4fee\u6539\u65f6\u95f4\uff08\u81ea\u52a8\u8f6c\u4e3a\u5317\u4eac\u65f6\u95f4\uff09\u3002</p> <p>Parameters:</p> Name Type Description Default <code>asset_path</code> <code>str</code> <p>Unreal \u4e2d\u7684\u8d44\u6e90\u8def\u5f84\uff08\u5982 \"/Game/Config/xxx.json\"\uff09</p> required <p>Returns:</p> Type Description <code>tuple[str, str]</code> <p>tuple[str, str]: - \u5317\u4eac\u65f6\u95f4\u683c\u5f0f\u7684\u6700\u540e\u4fee\u6539\u65f6\u95f4\uff08ISO \u683c\u5f0f\u5b57\u7b26\u4e32\uff09 - \u6587\u4ef6\u5185\u5bb9\u7684\u539f\u59cb JSON \u5b57\u7b26\u4e32</p> Source code in <code>src\\tongsim\\tongsim.py</code> <pre><code>def get_asset_file_content(self, asset_path: str) -&gt; tuple[str, str]:\n    \"\"\"\n    \u83b7\u53d6\u6307\u5b9a\u8d44\u4ea7\u6587\u4ef6\u7684\u5185\u5bb9\u548c\u6700\u540e\u4fee\u6539\u65f6\u95f4\uff08\u81ea\u52a8\u8f6c\u4e3a\u5317\u4eac\u65f6\u95f4\uff09\u3002\n\n    Args:\n        asset_path (str): Unreal \u4e2d\u7684\u8d44\u6e90\u8def\u5f84\uff08\u5982 \"/Game/Config/xxx.json\"\uff09\n\n    Returns:\n        tuple[str, str]:\n            - \u5317\u4eac\u65f6\u95f4\u683c\u5f0f\u7684\u6700\u540e\u4fee\u6539\u65f6\u95f4\uff08ISO \u683c\u5f0f\u5b57\u7b26\u4e32\uff09\n            - \u6587\u4ef6\u5185\u5bb9\u7684\u539f\u59cb JSON \u5b57\u7b26\u4e32\n    \"\"\"\n    from datetime import datetime, timedelta, timezone\n\n    last_modified_time_str, file_content_json_str = self._context.sync_run(\n        UnaryAPI.get_asset_file_content(self._context.conn, asset_path)\n    )\n\n    dt_utc = datetime.fromisoformat(last_modified_time_str.replace(\"Z\", \"+00:00\"))\n    dt_china = dt_utc.astimezone(timezone(timedelta(hours=8)))\n    return dt_china.isoformat(), file_content_json_str\n</code></pre>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim.change_view_mode","title":"change_view_mode","text":"<pre><code>change_view_mode(new_view_mode: ViewModeType) -&gt; bool\n</code></pre> <p>\u5207\u6362 TongSim \u4e3b\u76f8\u673a\u7684\u89c6\u89d2\u6a21\u5f0f\u3002</p> <p>Parameters:</p> Name Type Description Default <code>new_view_mode</code> <code>ViewModeType</code> <p>\u76ee\u6807\u89c6\u89d2\u6a21\u5f0f\u3002</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u5207\u6362\u662f\u5426\u6210\u529f\u3002</p> Source code in <code>src\\tongsim\\tongsim.py</code> <pre><code>def change_view_mode(self, new_view_mode: ViewModeType) -&gt; bool:\n    \"\"\"\n    \u5207\u6362 TongSim \u4e3b\u76f8\u673a\u7684\u89c6\u89d2\u6a21\u5f0f\u3002\n\n    Args:\n        new_view_mode (ViewModeType): \u76ee\u6807\u89c6\u89d2\u6a21\u5f0f\u3002\n\n    Returns:\n        bool: \u5207\u6362\u662f\u5426\u6210\u529f\u3002\n    \"\"\"\n\n    return self._context.sync_run(\n        UnaryAPI.switch_camera_mode(self._context.conn, new_view_mode)\n    )\n</code></pre>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim.change_view_target","title":"change_view_target","text":"<pre><code>change_view_target(new_view_agent_id: str) -&gt; bool\n</code></pre> <p>\u5207\u6362 TongSim \u76f8\u673a\u8ddf\u968f\u76ee\u6807\uff0c\u5fc5\u987b\u4f20\u5165agent_id</p> <p>Parameters:</p> Name Type Description Default <code>new_view_agent_id</code> <code>ViewModeType</code> <p>\u76ee\u6807\u89d2\u8272ID\u3002</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u5207\u6362\u662f\u5426\u6210\u529f\u3002</p> Source code in <code>src\\tongsim\\tongsim.py</code> <pre><code>def change_view_target(self, new_view_agent_id: str) -&gt; bool:\n    \"\"\"\n    \u5207\u6362 TongSim \u76f8\u673a\u8ddf\u968f\u76ee\u6807\uff0c\u5fc5\u987b\u4f20\u5165agent_id\n\n    Args:\n        new_view_agent_id (ViewModeType): \u76ee\u6807\u89d2\u8272ID\u3002\n\n    Returns:\n        bool: \u5207\u6362\u662f\u5426\u6210\u529f\u3002\n    \"\"\"\n\n    return self._context.sync_run(\n        UnaryAPI.camera_switch_character(self._context.conn, new_view_agent_id)\n    )\n</code></pre>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim.exec_console_command","title":"exec_console_command","text":"<pre><code>exec_console_command(console_command: str) -&gt; bool\n</code></pre> <p>\u6267\u884c\u63a7\u5236\u53f0\u6307\u4ee4\uff0c\u7528\u4e8e\u52a8\u6001\u8c03\u6574\u5f15\u64ce\u53c2\u6570\u3001\u8c03\u8bd5\u6216\u6267\u884c\u7279\u5b9a\u6307\u4ee4\u3002</p> <p>Parameters:</p> Name Type Description Default <code>console_command</code> <code>str</code> <p>\u9700\u8981\u6267\u884c\u7684\u63a7\u5236\u53f0\u6307\u4ee4\u5b57\u7b26\u4e32\u3002</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u6307\u4ee4\u662f\u5426\u6210\u529f\u53d1\u9001\u5230 TongSim</p> Source code in <code>src\\tongsim\\tongsim.py</code> <pre><code>def exec_console_command(self, console_command: str) -&gt; bool:\n    \"\"\"\n    \u6267\u884c\u63a7\u5236\u53f0\u6307\u4ee4\uff0c\u7528\u4e8e\u52a8\u6001\u8c03\u6574\u5f15\u64ce\u53c2\u6570\u3001\u8c03\u8bd5\u6216\u6267\u884c\u7279\u5b9a\u6307\u4ee4\u3002\n\n    Args:\n        console_command (str): \u9700\u8981\u6267\u884c\u7684\u63a7\u5236\u53f0\u6307\u4ee4\u5b57\u7b26\u4e32\u3002\n\n    Returns:\n        bool: \u6307\u4ee4\u662f\u5426\u6210\u529f\u53d1\u9001\u5230 TongSim\n    \"\"\"\n    return self._context.sync_run(\n        UnaryAPI.exec_console_command(self._context.conn, console_command)\n    )\n</code></pre>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim.save_scene","title":"save_scene","text":"<pre><code>save_scene(\n    path: str, file_name: str, overwrite: bool = True\n) -&gt; bool\n</code></pre> <p>\u4fdd\u5b58\u573a\u666f\u5230\u6307\u5b9a\u7684\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u9ed8\u8ba4\u4fdd\u5b58\u4e3a.pkl\u683c\u5f0f\u3002</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>str</code> <p>\u4fdd\u5b58\u6587\u4ef6\u7684\u76ee\u5f55\u8def\u5f84\uff0c\u652f\u6301\u76f8\u5bf9\u8def\u5f84\u548c\u7edd\u5bf9\u8def\u5f84\u3002</p> required <code>file_name</code> <code>str</code> <p>\u4fdd\u5b58\u7684\u6587\u4ef6\u540d</p> required <code>overwrite</code> <code>bool</code> <p>\u662f\u5426\u8986\u76d6\u5df2\u5b58\u5728\u7684\u6587\u4ef6\u3002\u5982\u679c\u4e3a False \u4e14\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u8fd4\u56de False\u3002</p> <code>True</code> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u5982\u679c\u4fdd\u5b58\u6210\u529f\uff0c\u8fd4\u56de True\uff1b\u5426\u5219\u8fd4\u56de False\u3002</p> Source code in <code>src\\tongsim\\tongsim.py</code> <pre><code>def save_scene(self, path: str, file_name: str, overwrite: bool = True) -&gt; bool:\n    \"\"\"\n    \u4fdd\u5b58\u573a\u666f\u5230\u6307\u5b9a\u7684\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u9ed8\u8ba4\u4fdd\u5b58\u4e3a.pkl\u683c\u5f0f\u3002\n\n    Args:\n        path (str): \u4fdd\u5b58\u6587\u4ef6\u7684\u76ee\u5f55\u8def\u5f84\uff0c\u652f\u6301\u76f8\u5bf9\u8def\u5f84\u548c\u7edd\u5bf9\u8def\u5f84\u3002\n        file_name (str): \u4fdd\u5b58\u7684\u6587\u4ef6\u540d\n        overwrite (bool): \u662f\u5426\u8986\u76d6\u5df2\u5b58\u5728\u7684\u6587\u4ef6\u3002\u5982\u679c\u4e3a False \u4e14\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u8fd4\u56de False\u3002\n\n    Returns:\n        bool: \u5982\u679c\u4fdd\u5b58\u6210\u529f\uff0c\u8fd4\u56de True\uff1b\u5426\u5219\u8fd4\u56de False\u3002\n    \"\"\"\n    if not os.path.isdir(path):\n        _logger.warning(f\"The directory {path} does not exist.\")\n        return False\n\n    response = self._context.sync_run(UnaryAPI.save_game(self._context.conn))\n    file_dir = os.path.join(path, file_name) + \".pkl\"\n\n    # \u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5df2\u7ecf\u5b58\u5728\n    if os.path.isfile(file_dir):\n        if not overwrite:\n            _logger.warning(\n                f\"The file {file_dir} already exists and overwrite is set to False.\"\n            )\n            return False\n        _logger.info(\n            f\"The file {file_dir} already exists, but will be overwritten.\"\n        )\n\n    try:\n        with open(file_dir, \"wb\") as file:\n            pickle.dump(response, file)\n        return True\n    except Exception as e:\n        _logger.warning(f\"Error in saving scene: {e}\")\n        return False\n</code></pre>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim.load_scene","title":"load_scene","text":"<pre><code>load_scene(path: str, file_name: str) -&gt; bool\n</code></pre> <p>\u4ece\u6307\u5b9a\u8def\u5f84\u52a0\u8f7d\u573a\u666f\u3002</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>str</code> <p>\u573a\u666f\u6587\u4ef6\u7684\u76ee\u5f55\u8def\u5f84\u3002</p> required <code>file_name</code> <code>str</code> <p>\u9700\u8981\u52a0\u8f7d\u7684\u6587\u4ef6\u540d\uff0c\u652f\u6301 .pkl \u683c\u5f0f\u3002</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>\u5982\u679c\u52a0\u8f7d\u6210\u529f\uff0c\u8fd4\u56de True\uff1b\u5426\u5219\u8fd4\u56de False\u3002</p> Source code in <code>src\\tongsim\\tongsim.py</code> <pre><code>def load_scene(self, path: str, file_name: str) -&gt; bool:\n    \"\"\"\n    \u4ece\u6307\u5b9a\u8def\u5f84\u52a0\u8f7d\u573a\u666f\u3002\n\n    Args:\n        path (str): \u573a\u666f\u6587\u4ef6\u7684\u76ee\u5f55\u8def\u5f84\u3002\n        file_name (str): \u9700\u8981\u52a0\u8f7d\u7684\u6587\u4ef6\u540d\uff0c\u652f\u6301 .pkl \u683c\u5f0f\u3002\n\n    Returns:\n        bool: \u5982\u679c\u52a0\u8f7d\u6210\u529f\uff0c\u8fd4\u56de True\uff1b\u5426\u5219\u8fd4\u56de False\u3002\n    \"\"\"\n    return self._load_scene(path, file_name)\n</code></pre>"},{"location":"api/tongsim/#tongsim.tongsim.TongSim.close","title":"close","text":"<pre><code>close()\n</code></pre> <p>\u5173\u95ed\u5f53\u524d\u5b9e\u4f8b\u5e76\u91ca\u653e\u8d44\u6e90</p> Source code in <code>src\\tongsim\\tongsim.py</code> <pre><code>def close(self):\n    \"\"\"\u5173\u95ed\u5f53\u524d\u5b9e\u4f8b\u5e76\u91ca\u653e\u8d44\u6e90\"\"\"\n    self._context.release()\n</code></pre>"},{"location":"api/type/","title":"\ud83c\udfa8 TongSim \u4e2d\u4e00\u4e9b\u81ea\u5b9a\u4e49\u7684 Type","text":""},{"location":"api/type/#tongsim.type.anim","title":"tongsim.type.anim","text":"<p>tongsim.type.anim</p> <p>\u5b9a\u4e49\u4e0e\u52a8\u753b\u6267\u884c\u7ed3\u679c\u76f8\u5173\u7684\u6570\u636e\u7ed3\u6784\u548c\u5e38\u91cf\uff0c\u5305\u62ec AnimResultInfo \u6570\u636e\u7c7b\u548c HandType \u679a\u4e3e\u7c7b\u578b\u3002</p>"},{"location":"api/type/#tongsim.type.anim.AnimResultInfo","title":"AnimResultInfo  <code>dataclass</code>","text":"<p>\u52a8\u753b\u6267\u884c\u7ed3\u679c\u4fe1\u606f\u3002</p> <p>Attributes:</p> Name Type Description <code>command_id</code> <code>int</code> <p>\u52a8\u753b\u547d\u4ee4\u7684\u552f\u4e00\u6807\u8bc6\u7b26\u3002</p> <code>unreal_frame</code> <code>int</code> <p>Unreal \u5f15\u64ce\u4e2d\u7684\u5e27\u7f16\u53f7\u3002</p> <code>status</code> <code>Literal['begin', 'end', 'error']</code> <p>\u52a8\u753b\u72b6\u6001\uff0c\u53ef\u4e3a \"begin\"\u3001\"end\" \u6216 \"error\"\u3002</p> <code>error_code</code> <code>int</code> <p>\u9519\u8bef\u4ee3\u7801\uff0c\u9ed8\u8ba4\u4e3a 0 \u8868\u793a\u65e0\u9519\u8bef\u3002</p> <code>error_animation_code</code> <code>int</code> <p>\u51fa\u9519\u52a8\u753b\u4ee3\u7801\uff0c\u9ed8\u8ba4\u4e3a 0 \u8868\u793a\u65e0\u9519\u8bef\u3002</p> Source code in <code>src\\tongsim\\type\\anim.py</code> <pre><code>@dataclass(slots=True)\nclass AnimResultInfo:\n    \"\"\"\n    \u52a8\u753b\u6267\u884c\u7ed3\u679c\u4fe1\u606f\u3002\n\n    Attributes:\n        command_id (int): \u52a8\u753b\u547d\u4ee4\u7684\u552f\u4e00\u6807\u8bc6\u7b26\u3002\n        unreal_frame (int): Unreal \u5f15\u64ce\u4e2d\u7684\u5e27\u7f16\u53f7\u3002\n        status (Literal[\"begin\", \"end\", \"error\"]): \u52a8\u753b\u72b6\u6001\uff0c\u53ef\u4e3a \"begin\"\u3001\"end\" \u6216 \"error\"\u3002\n        error_code (int): \u9519\u8bef\u4ee3\u7801\uff0c\u9ed8\u8ba4\u4e3a 0 \u8868\u793a\u65e0\u9519\u8bef\u3002\n        error_animation_code (int): \u51fa\u9519\u52a8\u753b\u4ee3\u7801\uff0c\u9ed8\u8ba4\u4e3a 0 \u8868\u793a\u65e0\u9519\u8bef\u3002\n    \"\"\"\n\n    command_id: int\n    unreal_frame: int\n    status: Literal[\"begin\", \"end\", \"error\"]\n    error_code: int = 0\n    error_animation_code: int = 0\n</code></pre>"},{"location":"api/type/#tongsim.type.anim.AnimCmdHandType","title":"AnimCmdHandType","text":"<p>               Bases: <code>IntEnum</code></p> <p>\u624b\u90e8\u52a8\u4f5c\u7c7b\u578b\uff0c\u7528\u4e8e\u6807\u8bc6\u52a8\u753b\u4e2d\u4f7f\u7528\u7684\u624b\u90e8\u3002 (\u6ce8\u610f\u503c\u548c proto \u4e2d EWhichHandAction \u5f3a\u5bf9\u5e94\uff01)</p> <p>Attributes:</p> Name Type Description <code>RIGHT</code> <code>int</code> <p>\u53f3\u624b\u3002</p> <code>LEFT</code> <code>int</code> <p>\u5de6\u624b\u3002</p> <code>BOTH</code> <code>int</code> <p>\u53cc\u624b\u3002</p> Source code in <code>src\\tongsim\\type\\anim.py</code> <pre><code>class AnimCmdHandType(IntEnum):\n    \"\"\"\n    \u624b\u90e8\u52a8\u4f5c\u7c7b\u578b\uff0c\u7528\u4e8e\u6807\u8bc6\u52a8\u753b\u4e2d\u4f7f\u7528\u7684\u624b\u90e8\u3002\n    (\u6ce8\u610f\u503c\u548c proto \u4e2d EWhichHandAction \u5f3a\u5bf9\u5e94\uff01)\n\n    Attributes:\n        RIGHT (int): \u53f3\u624b\u3002\n        LEFT (int): \u5de6\u624b\u3002\n        BOTH (int): \u53cc\u624b\u3002\n    \"\"\"\n\n    RIGHT = 0\n    LEFT = 1\n    BOTH = 2\n</code></pre>"},{"location":"api/type/#tongsim.type.anim.AnimationExecutionType","title":"AnimationExecutionType","text":"<p>               Bases: <code>IntEnum</code></p> <p>\u52a8\u753b\u6267\u884c\u7c7b\u578b\uff0c\u7528\u4e8e\u6807\u8bc6\u52a8\u753b\u6267\u884c\u65b9\u5f0f\u3002 (\u6ce8\u610f\u503c\u548c proto \u4e2d EAnimationExecutionType \u5f3a\u5bf9\u5e94\uff01)</p> <p>Attributes:</p> Name Type Description <code>ENQUEUE</code> <code>int</code> <p>\u5165\u961f\u6267\u884c\u3002</p> <code>EXECUTE_IMMEDIATELY</code> <code>int</code> <p>\u7acb\u5373\u6267\u884c\uff08\u76ee\u524d\u4ec5\u5bf9\u90e8\u5206\u52a8\u753b\u6709\u6548\uff09</p> <code>OVERRIDE_PARAMS</code> <code>int</code> <p>\u8986\u76d6\u52a8\u4f5c\u53c2\u6570</p> Source code in <code>src\\tongsim\\type\\anim.py</code> <pre><code>class AnimationExecutionType(IntEnum):\n    \"\"\"\n    \u52a8\u753b\u6267\u884c\u7c7b\u578b\uff0c\u7528\u4e8e\u6807\u8bc6\u52a8\u753b\u6267\u884c\u65b9\u5f0f\u3002\n    (\u6ce8\u610f\u503c\u548c proto \u4e2d EAnimationExecutionType \u5f3a\u5bf9\u5e94\uff01)\n\n    Attributes:\n        ENQUEUE (int): \u5165\u961f\u6267\u884c\u3002\n        EXECUTE_IMMEDIATELY (int): \u7acb\u5373\u6267\u884c\uff08\u76ee\u524d\u4ec5\u5bf9\u90e8\u5206\u52a8\u753b\u6709\u6548\uff09\n        OVERRIDE_PARAMS (int): \u8986\u76d6\u52a8\u4f5c\u53c2\u6570\n    \"\"\"\n\n    ENQUEUE = 0\n    EXECUTE_IMMEDIATELY = 1\n    OVERRIDE_PARAMS = 3\n</code></pre>"},{"location":"api/type/#tongsim.type.camera","title":"tongsim.type.camera","text":"<p>tongsim.type.camera</p>"},{"location":"api/type/#tongsim.type.camera.CameraIntrinsic","title":"CameraIntrinsic","text":"<p>               Bases: <code>NamedTuple</code></p> <p>\u76f8\u673a\u5185\u53c2\u7ed3\u6784\u3002</p> Source code in <code>src\\tongsim\\type\\camera.py</code> <pre><code>class CameraIntrinsic(NamedTuple):\n    \"\"\"\n    \u76f8\u673a\u5185\u53c2\u7ed3\u6784\u3002\n    \"\"\"\n\n    fov: float\n    width: int\n    height: int\n</code></pre>"},{"location":"api/type/#tongsim.type.camera.VisibleObjectInfo","title":"VisibleObjectInfo","text":"<p>               Bases: <code>NamedTuple</code></p> <p>\u5355\u4e2a\u53ef\u89c1\u7269\u4f53\u4fe1\u606f</p> Source code in <code>src\\tongsim\\type\\camera.py</code> <pre><code>class VisibleObjectInfo(NamedTuple):\n    \"\"\"\n    \u5355\u4e2a\u53ef\u89c1\u7269\u4f53\u4fe1\u606f\n    \"\"\"\n\n    object_id: str\n    segmentation_id: int\n    distance_square: float\n</code></pre>"},{"location":"api/type/#tongsim.type.view","title":"tongsim.type.view","text":""},{"location":"api/type/#tongsim.type.view.ViewModeType","title":"ViewModeType","text":"<p>               Bases: <code>IntEnum</code></p> <p>\u6444\u50cf\u673a\u89c6\u89d2\u6a21\u5f0f\uff0c\u7528\u4e8e\u63a7\u5236\u6444\u50cf\u673a\u89c6\u89d2\u548c\u79fb\u52a8\u65b9\u5f0f\u3002</p> <p>Attributes:</p> Name Type Description <code>FIRST_PERSON_VIEW</code> <code>int</code> <p>\u7b2c\u4e00\u4eba\u79f0\u89c6\u89d2\uff0c\u8ddf\u968f\u5bf9\u8c61\u89c6\u89d2\u3002</p> <code>SURVEILLANCE_VIEW</code> <code>int</code> <p>\u76d1\u89c6\u5668\u89c6\u89d2\uff0c\u7528\u4e8e\u9759\u6001\u76d1\u63a7\u573a\u666f\u4e2d\u7684\u7279\u5b9a\u533a\u57df\u3002</p> <code>THIRD_PERSON_VIEW</code> <code>int</code> <p>\u7b2c\u4e09\u4eba\u79f0\u89c6\u89d2\uff0c\u8ddf\u968f\u5bf9\u8c61\u4f46\u4fdd\u6301\u4e00\u5b9a\u8ddd\u79bb\u3002</p> <code>ANCHOR_VIEW</code> <code>int</code> <p>\u951a\u5b9a\u5728\u56fa\u5b9a\u4f4d\u7f6e\u7684\u89c6\u89d2\uff0c\u6ca1\u6709\u4efb\u4f55\u81ea\u52a8\u5316\u63a7\u5236\u903b\u8f91\uff0c\u53ef\u901a\u8fc7\u5916\u90e8\u63a5\u53e3\u8bbe\u5b9a\u4f4d\u59ff\u3002</p> <code>MANUAL_CONTROL_VIEW</code> <code>int</code> <p>\u81ea\u7531\u76f8\u673a\u89c6\u89d2\uff0c\u53ef\u4ee5\u901a\u8fc7 WASD\u3001\u7a7a\u683c\u3001Ctrl \u7b49\u952e\u4f4d\u63a7\u5236\u79fb\u52a8\u3002</p> <code>TONG_RECON_NAISSANCE_VIEW</code> <code>int</code> <p>TongRecon \u9879\u76ee\u5b9a\u5236\u5316\u89c6\u89d2\u6a21\u5f0f\uff0c\u7528\u4e8e\u7279\u6b8a\u4fa6\u5bdf\u4efb\u52a1\u3002</p> <code>FACE_TO_FACE_VIEW</code> <code>int</code> <p>\u548c\u667a\u80fd\u4f53\u9762\u5bf9\u9762\u76f8\u673a\u7684\u89c6\u89d2\u3002</p> Source code in <code>src\\tongsim\\type\\view.py</code> <pre><code>class ViewModeType(IntEnum):\n    \"\"\"\n    \u6444\u50cf\u673a\u89c6\u89d2\u6a21\u5f0f\uff0c\u7528\u4e8e\u63a7\u5236\u6444\u50cf\u673a\u89c6\u89d2\u548c\u79fb\u52a8\u65b9\u5f0f\u3002\n\n    Attributes:\n        FIRST_PERSON_VIEW (int): \u7b2c\u4e00\u4eba\u79f0\u89c6\u89d2\uff0c\u8ddf\u968f\u5bf9\u8c61\u89c6\u89d2\u3002\n        SURVEILLANCE_VIEW (int): \u76d1\u89c6\u5668\u89c6\u89d2\uff0c\u7528\u4e8e\u9759\u6001\u76d1\u63a7\u573a\u666f\u4e2d\u7684\u7279\u5b9a\u533a\u57df\u3002\n        THIRD_PERSON_VIEW (int): \u7b2c\u4e09\u4eba\u79f0\u89c6\u89d2\uff0c\u8ddf\u968f\u5bf9\u8c61\u4f46\u4fdd\u6301\u4e00\u5b9a\u8ddd\u79bb\u3002\n        ANCHOR_VIEW (int): \u951a\u5b9a\u5728\u56fa\u5b9a\u4f4d\u7f6e\u7684\u89c6\u89d2\uff0c\u6ca1\u6709\u4efb\u4f55\u81ea\u52a8\u5316\u63a7\u5236\u903b\u8f91\uff0c\u53ef\u901a\u8fc7\u5916\u90e8\u63a5\u53e3\u8bbe\u5b9a\u4f4d\u59ff\u3002\n        MANUAL_CONTROL_VIEW (int): \u81ea\u7531\u76f8\u673a\u89c6\u89d2\uff0c\u53ef\u4ee5\u901a\u8fc7 WASD\u3001\u7a7a\u683c\u3001Ctrl \u7b49\u952e\u4f4d\u63a7\u5236\u79fb\u52a8\u3002\n        TONG_RECON_NAISSANCE_VIEW (int): TongRecon \u9879\u76ee\u5b9a\u5236\u5316\u89c6\u89d2\u6a21\u5f0f\uff0c\u7528\u4e8e\u7279\u6b8a\u4fa6\u5bdf\u4efb\u52a1\u3002\n        FACE_TO_FACE_VIEW (int): \u548c\u667a\u80fd\u4f53\u9762\u5bf9\u9762\u76f8\u673a\u7684\u89c6\u89d2\u3002\n    \"\"\"\n\n    FIRST_PERSON_VIEW = 0\n    SURVEILLANCE_VIEW = 1\n    THIRD_PERSON_VIEW = 2\n    ANCHOR_VIEW = 3\n    MANUAL_CONTROL_VIEW = 4\n    TONG_RECON_NAISSANCE_VIEW = 5\n    FACE_TO_FACE_VIEW = 6\n</code></pre>"},{"location":"concepts/ability/","title":"\ud83e\udde9 Ability\uff1a\u5b9e\u4f53\u80fd\u529b\u7684\u89e3\u8026\u5c01\u88c5\u673a\u5236","text":"<p>Ability \u662f TongSim SDK \u4e2d\u5bf9\u865a\u62df\u4e16\u754c\u5bf9\u8c61\u529f\u80fd\u7684\u62bd\u8c61\uff0c\u5b83\u5141\u8bb8\u5f00\u53d1\u8005\u4ee5\u6a21\u5757\u5316\u3001\u53ef\u7ec4\u5408\u7684\u65b9\u5f0f\uff0c\u8bbf\u95ee\u548c\u63a7\u5236\u573a\u666f\u4e2d\u5b9e\u4f53\u7684\u5404\u79cd\u884c\u4e3a\u4e0e\u5c5e\u6027\u3002</p>"},{"location":"concepts/ability/#ability_1","title":"\u8c01\u6765\u5b9e\u73b0 Ability\uff1f","text":"<p>Ability \u7684\u5b9e\u73b0\u7c7b\u7531 SDK \u5185\u90e8\u81ea\u52a8\u6ce8\u518c\uff0c\u7edf\u4e00\u7ee7\u627f\u81ea\u57fa\u7c7b <code>AbilityImplBase</code>\uff0c\u8be5\u7c7b\u5177\u5907\u5982\u4e0b\u7279\u6027\uff1a</p> <ul> <li>\u6301\u6709\u5bf9\u5e94\u5b9e\u4f53\u7684 entity ID \u548c world context</li> <li>\u53ef\u8bbf\u95ee\u7ec4\u4ef6 ID \u4e0e\u8fde\u63a5\u4fe1\u606f\uff08gRPC / stream\uff09</li> <li>\u53ef\u901a\u8fc7\u5f02\u6b65\u6216\u540c\u6b65\u65b9\u5f0f\u53d1\u8d77\u5e95\u5c42\u901a\u4fe1\u8c03\u7528</li> </ul>"},{"location":"concepts/ability/#_1","title":"\u80fd\u529b\u7684\u8c03\u7528\u6d41\u7a0b","text":"<p>\u8c03\u7528\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ol> <li>\u4ece <code>Entity</code> \u5b9e\u4f8b\u4e2d\u8c03\u7528 <code>as_()</code> \u65b9\u6cd5\u83b7\u53d6\u80fd\u529b\u63a5\u53e3\uff08\u5982 <code>CameraAbility</code>\uff09</li> <li>SDK \u81ea\u52a8\u68c0\u6d4b\u80fd\u529b\u662f\u5426\u53ef\u7528\uff08\u8c03\u7528 <code>is_applicable</code>\uff09</li> <li>\u52a8\u6001\u52a0\u8f7d\u5b9e\u73b0\u7c7b\uff08\u5982 <code>CameraAbilityImpl</code>\uff09\u5e76\u7ed1\u5b9a\u4e0a\u4e0b\u6587</li> <li>\u8c03\u7528\u80fd\u529b\u65b9\u6cd5\uff0c\u5373\u5b8c\u6210\u529f\u80fd\u8c03\u7528</li> </ol> <pre><code>if entity.has_ability(ConsumableEnergyAbility):\n    energy = entity.as_(ConsumableEnergyAbility).get_consumable_energy()\n</code></pre> <p>\u652f\u6301\u540c\u6b65\u548c\u5f02\u6b65\u7248\u672c\uff0c\u63a8\u8350\u540c\u6b65\u63a5\u53e3\u7528\u4e8e\u4e3b\u7ebf\u7a0b\u63a7\u5236\uff0c\u5f02\u6b65\u63a5\u53e3\u7528\u4e8e\u9ad8\u6027\u80fd\u573a\u666f\u3002</p>"},{"location":"concepts/ability/#api","title":"API \u53c2\u8003","text":""},{"location":"concepts/ability/#action","title":"Action","text":"<p>Action \u80fd\u529b API</p> <p>\u5b9a\u4e49\u4e86\u89d2\u8272\u52a8\u753b\u6267\u884c\u7684\u76f8\u5173\u63a5\u53e3\u3002</p>"},{"location":"concepts/ability/#asset","title":"Asset","text":"<p>Asset \u80fd\u529b API</p> <p>\u63d0\u4f9b\u5bf9\u8c61\u7684\u8d44\u4ea7\u914d\u7f6e\u4fe1\u606f\u7684\u83b7\u53d6\u63a5\u53e3\u3002</p>"},{"location":"concepts/ability/#camera","title":"Camera","text":"<p>Camera \u80fd\u529b API</p> <p>\u76f8\u673a\u80fd\u529b\u63a5\u53e3\u5b9a\u4e49\u3002</p>"},{"location":"concepts/ability/#consumableenergy","title":"ConsumableEnergy","text":"<p>ConsumableEnergy \u80fd\u529b API</p> <p>\u5b9a\u4e49\u4e86\u98df\u7269\u4e0e\u996e\u54c1\u80fd\u91cf\u7ba1\u7406\u7684\u63a5\u53e3\u3002</p>"},{"location":"concepts/ability/#interactable","title":"Interactable","text":"<p>Interactable \u80fd\u529b API</p> <p>\u5b9a\u4e49\u4e86\u652f\u6301\u4ea4\u4e92\u63a7\u5236\u7684\u5b9e\u4f53\u80fd\u529b\u63a5\u53e3\u3002</p>"},{"location":"concepts/ability/#powerable","title":"Powerable","text":"<p>Powerable \u80fd\u529b API</p> <p>\u5b9a\u4e49\u4e86\u5177\u5907\u901a\u7535\u72b6\u6001\u7ba1\u7406\u7684\u5b9e\u4f53\u80fd\u529b\u63a5\u53e3\u3002</p>"},{"location":"concepts/ability/#scene","title":"Scene","text":"<p>Scene \u80fd\u529b API</p> <p>\u7a7a\u95f4\u80fd\u529b\u63a5\u53e3\uff0c\u63d0\u4f9b Entity \u7684\u4f4d\u7f6e\u3001\u65cb\u8f6c\u3001\u671d\u5411\u5411\u91cf\u7b49\u80fd\u529b\u3002</p>"},{"location":"concepts/action/","title":"\ud83e\udde0 Agent \u52a8\u4f5c\u7cfb\u7edf\uff08Action System\uff09","text":"<p>TongSim SDK \u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u300cAgent \u52a8\u4f5c\u7cfb\u7edf\u300d\uff0c\u7528\u4e8e\u63a7\u5236\u667a\u80fd\u4f53\u6267\u884c\u5177\u6709\u8bed\u4e49\u7684\u884c\u4e3a\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u9ad8\u5c42\u80fd\u529b\u63a5\u53e3 <code>AgentActionAbility</code>\uff0c\u5feb\u901f\u8c03\u5ea6\u5df2\u6709\u6216\u81ea\u5b9a\u4e49\u7684 Action\uff0c\u5e76\u83b7\u5f97\u7ed3\u6784\u5316\u7684\u6267\u884c\u7ed3\u679c\u3002</p>"},{"location":"concepts/action/#agentactionability","title":"\ud83c\udf1f \u6838\u5fc3\u80fd\u529b\uff1aAgentActionAbility","text":"<p>\u6240\u6709\u652f\u6301\u52a8\u753b\u63a7\u5236\u7684\u5b9e\u4f53\uff08Agent\uff09\u5747\u5177\u5907 <code>AgentActionAbility</code> \u63a5\u53e3\uff0c\u5176\u63d0\u4f9b\u7edf\u4e00\u7684\u65b9\u6cd5\u6765\uff1a</p> <ul> <li>\u63d0\u4ea4\u4e00\u4e2a\u52a8\u4f5c\u5230 Agent \u7684\u6267\u884c\u961f\u5217\uff1b</li> <li>\u540c\u6b65\u6216\u5f02\u6b65\u6267\u884c\u52a8\u4f5c\u5e76\u6536\u96c6\u7ed3\u679c\uff1b</li> <li>\u67e5\u8be2\u5f53\u524d\u72b6\u6001\u6216\u52a8\u4f5c\u6267\u884c\u60c5\u51b5\uff1b</li> <li>\u63a7\u5236\u667a\u80fd\u4f53\u7684\u52a8\u753b\u884c\u4e3a\uff08\u5982\u542f\u7528\u95f2\u7f6e\u968f\u673a\u52a8\u753b\u3001\u67e5\u8be2\u53ef\u64ad\u653e\u52a8\u753b\u7b49\uff09\uff1b</li> </ul> <p>API \u53c2\u8003</p>"},{"location":"concepts/action/#_1","title":"\ud83c\udfd7\ufe0f \u6838\u5fc3\u7ed3\u6784\u8bf4\u660e","text":""},{"location":"concepts/action/#action","title":"\u2705 Action \u5c01\u88c5\u673a\u5236","text":"<ul> <li>\u6bcf\u4e2a <code>Action</code> \u7c7b\u7ee7\u627f\u81ea <code>ActionBase</code>\uff0c\u5185\u90e8\u901a\u8fc7\u591a\u4e2a Animation \u6307\u4ee4\u5b8c\u6210\u5177\u4f53\u884c\u4e3a(\u4e5f\u53ef\u4ee5\u652f\u6301\u5176\u4ed6 gRPC \u8c03\u7528)\uff1b</li> <li>\u7cfb\u7edf\u63d0\u4f9b\u4e30\u5bcc\u7684\u5185\u7f6e Action\uff0c\u5982 <code>WaveHand</code>, <code>ShakeHead</code>, <code>EatOrDrink</code> \u7b49\u7b49\uff1b</li> <li>\u7528\u6237\u4e5f\u53ef\u4ee5\u7ee7\u627f <code>ActionBase</code> \u6765\u5b9e\u73b0\u81ea\u5b9a\u4e49\u52a8\u4f5c\u7ec4\u5408\u3002</li> </ul> <p>ActionBase API \u53c2\u8003 ActionImpl API \u53c2\u8003</p>"},{"location":"concepts/action/#animresultinfo","title":"\ud83c\udfaf \u52a8\u4f5c\u7ed3\u679c\u8bf4\u660e\uff1aAnimResultInfo","text":"<p>\u6bcf\u4e2a Action \u4f1a\u62c6\u89e3\u4e3a\u82e5\u5e72 Animation\uff0c\u6bcf\u4e2a Animation \u7684\u6267\u884c\u5c06\u8fd4\u56de\u4e00\u4e2a <code>AnimResultInfo</code>\uff0c\u5b57\u6bb5\u5982\u4e0b\uff1a</p> <pre><code>@dataclass\nclass AnimResultInfo:\n    command_id: int                 # \u552f\u4e00 ID\n    unreal_frame: int               # UE \u89e6\u53d1\u8be5\u4e8b\u4ef6\u7684\u5e27\u53f7\n    error_code: int                 # \u9519\u8bef\u7801\uff08\u82e5\u5931\u8d25\uff09\n    error_animation_code: int      # \u9519\u8bef\u7684\u52a8\u753b\u6807\u8bc6\n    status: Literal[\"begin\", \"end\", \"error\"]  # \u5f53\u524d\u9636\u6bb5\n</code></pre>"},{"location":"concepts/action/#_2","title":"\ud83e\uddbe \u52a8\u4f5c\u961f\u5217\u4e0e\u6267\u884c\u673a\u5236","text":"<p>\u5728 TongSim \u4e2d\uff0c\u6bcf\u4e2a Agent\uff08\u667a\u80fd\u4f53\uff09\u7ef4\u62a4\u4e00\u5957\u72ec\u7acb\u7684\u52a8\u4f5c\u961f\u5217\u7cfb\u7edf\uff0c\u7528\u4e8e\u7ec4\u7ec7\u591a\u4e2a\u52a8\u4f5c\uff08Action\uff09\u7684\u6267\u884c\u8fc7\u7a0b\u3002\u6574\u4e2a\u673a\u5236\u901a\u8fc7\u4ee5\u4e0b\u51e0\u4e2a\u6838\u5fc3\u8bbe\u8ba1\u5b9e\u73b0\uff1a</p>"},{"location":"concepts/action/#action_1","title":"\u6bcf\u4e2a\u667a\u80fd\u4f53\u6301\u6709\u72ec\u7acb\u7684 Action \u961f\u5217","text":"<ul> <li>\u6bcf\u4e2a Agent \u5185\u90e8\u7ef4\u62a4\u4e00\u4e2a\u961f\u5217\uff08FIFO\uff09\uff0c\u7528\u4e8e\u5b58\u653e\u7b49\u5f85\u6267\u884c\u7684 Action, \u8fde\u7eed\u63d0\u4ea4\u591a\u4e2a\u52a8\u4f5c\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u6392\u961f\u6267\u884c\uff0c\u65e0\u9700\u7528\u6237\u663e\u5f0f\u7b49\u5f85\u4e0a\u4e00\u4e2a\u5b8c\u6210\u3002</li> <li>\u6240\u6709\u52a8\u4f5c\u6309\u63d0\u4ea4\u987a\u5e8f\u9010\u4e00\u6267\u884c\uff0c\u4e25\u683c\u987a\u5e8f\uff0c\u4e92\u4e0d\u62a2\u5360\u3002</li> </ul>"},{"location":"concepts/action/#_3","title":"\u63d0\u4ea4\u52a8\u4f5c\u7684\u65b9\u5f0f","text":"<p>\u52a8\u4f5c\u63d0\u4ea4\u63d0\u4f9b\u4e24\u79cd\u65b9\u5f0f\uff0c\u5206\u522b\u5bf9\u5e94\u662f\u5426\u7acb\u5373\u5f00\u59cb\u6267\u884c\uff1a</p> \u65b9\u6cd5\u540d \u63cf\u8ff0 <code>enqueue_action()</code> \u4ec5\u5c06\u52a8\u4f5c\u52a0\u5165\u961f\u5217\uff0c\u4e0d\u7acb\u5373\u6267\u884c\uff08\u540c\u6b65\uff09 <code>async_enqueue_action()</code> \u5f02\u6b65\u7248\u672c\uff0c\u652f\u6301\u5f02\u6b65\u4e0a\u4e0b\u6587 <code>do_action()</code> \u52a0\u5165\u961f\u5217\u5e76\u7acb\u5373\u89e6\u53d1\u6267\u884c\uff08\u540c\u6b65\uff09 <code>async_do_action()</code> \u5f02\u6b65\u7248\u672c\uff0c\u63a8\u8350\u5728\u534f\u7a0b\u4e2d\u4f7f\u7528 <p>\u793a\u4f8b\uff1a</p> <pre><code>agent.enqueue_action(ts.WaveHand())     # \u52a0\u5165\u961f\u5217\nagent.do_action()                       # \u6267\u884c\u5f53\u524d\u961f\u5217\u4e2d\u7684\u6240\u6709\u52a8\u4f5c\n</code></pre> <p>\u4f60\u4e5f\u53ef\u4ee5\u5c06\u52a8\u4f5c\u7ec4\u5408\u4f7f\u7528\uff1a</p> <pre><code>agent.enqueue_action(ts.WaveHand())\nagent.enqueue_action(ts.ShakeHeadWithDuration(2.0))\nagent.do_action()  # \u987a\u5e8f\u4f9d\u6b21\u6267\u884c Wave -&gt; ShakeHead\n</code></pre>"},{"location":"concepts/action/#grpc","title":"\u52a8\u4f5c\u6267\u884c\u8fc7\u7a0b\uff1agRPC \u53cc\u5411\u6d41","text":"<p>\u5f53 <code>do_action()</code> \u88ab\u8c03\u7528\u540e\uff0cTongSim SDK \u4f1a\u5b8c\u6210\u4ee5\u4e0b\u6d41\u7a0b\uff1a</p> <ol> <li>\u5c06\u6307\u5b9a Action \u62c6\u89e3\u4e3a\u591a\u4e2a Animation \u547d\u4ee4\uff1b</li> <li>\u901a\u8fc7\u5e95\u5c42 gRPC \u53cc\u5411\u6d41\uff08<code>AnimationStreamer</code>\uff09\u5c06\u6bcf\u4e2a\u547d\u4ee4\u53d1\u9001\u81f3\u670d\u52a1\u5668\uff1b</li> <li>\u6bcf\u4e2a Animation \u4f1a\u6536\u5230\u4e24\u7c7b\u54cd\u5e94\u4e8b\u4ef6\uff1a</li> <li>BEGIN\uff1a\u8868\u793a\u5df2\u6210\u529f\u5728\u670d\u52a1\u5668\u7aef\u542f\u52a8\u6267\u884c\uff1b</li> <li>END\uff1a\u8868\u793a\u8be5 Animation \u5df2\u7ed3\u675f\uff1b</li> <li>ERROR\uff08\u53ef\u9009\uff09\uff1a\u82e5\u6267\u884c\u4e2d\u51fa\u9519\uff0c\u5c06\u6536\u5230\u9519\u8bef\u62a5\u544a\u3002</li> </ol> <p>\u6240\u6709\u54cd\u5e94\u4e8b\u4ef6\u90fd\u5c06\u88ab\u5c01\u88c5\u4e3a <code>AnimResultInfo</code> \u5e76\u8fd4\u56de\uff0c\u7528\u6237\u53ef\u6839\u636e <code>status</code> \u5b57\u6bb5\u5224\u5b9a\u6bcf\u6b65\u6267\u884c\u72b6\u6001\u3002</p>"},{"location":"concepts/action/#_4","title":"\u72b6\u6001\u67e5\u8be2\u65b9\u6cd5","text":"<p>\u4ee5\u4e0b\u65b9\u6cd5\u53ef\u7528\u4e8e\u67e5\u8be2\u5f53\u524d Agent \u7684\u52a8\u4f5c\u72b6\u6001\uff1a</p> \u65b9\u6cd5\u540d \u8bf4\u660e <code>is_action_queue_empty()</code> \u5224\u65ad\u5f53\u524d\u961f\u5217\u662f\u5426\u4e3a\u7a7a <code>get_agent_action_status()</code> \u8fd4\u56de\u5f53\u524d Agent \u7684\u6267\u884c\u72b6\u6001\u6458\u8981 <code>get_taking_entity_id()</code> \u83b7\u53d6\u89d2\u8272\u624b\u4e0a\u62ff\u7740\u7684\u5b9e\u4f53 ID\uff08\u5de6/\u53f3\u624b\uff09"},{"location":"concepts/camera/","title":"\ud83d\udcf7 Camera","text":"<p>Camera \u662f TongSim \u4e2d\u6a21\u62df\u89c6\u89c9\u611f\u77e5\u80fd\u529b\u7684\u6838\u5fc3\u7ec4\u4ef6\u3002\u5b83\u63d0\u4f9b\u4e00\u5957\u7528\u4e8e\u540c\u6b65/\u975e\u540c\u6b65\u83b7\u53d6\u56fe\u50cf\u6570\u636e\u7684\u63a5\u53e3\uff0c\u5305\u62ec RGB \u56fe\u50cf\u3001\u6df1\u5ea6\u56fe\u3001\u5206\u5272\u56fe\u3001\u955c\u5b50\u4e2d\u7684\u5206\u5272\u56fe\uff0c\u4ee5\u53ca\u53ef\u89c1\u7269\u4f53\u5217\u8868\u7b49\u3002</p> <p>API \u53c2\u8003</p>"},{"location":"concepts/camera/#_1","title":"\u6d41\u5f0f\u901a\u4fe1 &amp; \u57fa\u51c6\u9891\u7387\u8bf4\u660e","text":"<p>Camera \u56fe\u50cf\u901a\u4fe1\u57fa\u4e8e gRPC Stream \u5b9e\u73b0\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 <code>start_imagedata_streaming()</code> \u542f\u52a8\u56fe\u50cf\u6570\u636e\u6d41\u63a5\u6536\uff0c\u5728\u540e\u53f0\u6301\u7eed\u83b7\u53d6\u6765\u81ea Unreal \u573a\u666f\u7684\u56fe\u50cf\u5e27\u3002</p> <p>Unreal \u6e32\u67d3\u56fe\u50cf\u4ee3\u4ef7\u8f83\u9ad8\uff0c\u56e0\u6b64\u5efa\u8bae\u63a7\u5236\u53d6\u56fe\u9891\u7387\uff0c\u907f\u514d\u8d44\u6e90\u6d6a\u8d39\u3002\u5ba2\u6237\u7aef\u9891\u7e41\u8bf7\u6c42\u4e0d\u4f1a\u5e26\u6765\u66f4\u9ad8\u7684\u5237\u65b0\u901f\u7387\uff0c\u53cd\u800c\u53ef\u80fd\u53cd\u590d\u83b7\u53d6\u540c\u4e00\u5e27\u56fe\u50cf\u3002</p> <p>\u6700\u9ad8\u5237\u65b0\u9891\u7387</p> <p>\u56fe\u50cf\u5237\u65b0\u5b58\u5728\u670d\u52a1\u5668\u4fa7\u7684\u57fa\u51c6\u9891\u7387\u3002\u5982\u679c\u5ba2\u6237\u7aef\u8bf7\u6c42\u9891\u7387\u8d85\u8fc7\u8be5\u57fa\u51c6\u9891\u7387\uff0c\u6700\u7ec8\u5c06\u4f1a\u9891\u7e41\u63a5\u6536\u5230\u91cd\u590d\u56fe\u50cf\u5e27\u3002</p>"},{"location":"concepts/camera/#id","title":"\u5206\u5272\u56fe &amp; \u5206\u5272 ID \u7ba1\u7406","text":"<p>\u5206\u5272\u56fe\u7684\u83b7\u53d6\u4f9d\u8d56 PG \u7cfb\u7edf\u8fd0\u884c\u3002</p> <ul> <li>\u542f\u52a8 <code>pg_manager.start_pg_stream()</code> \u540e\uff0cTongSim \u4f1a\u81ea\u52a8\u4e3a\u6bcf\u4e2a\u7269\u4f53\u5206\u914d\u552f\u4e00\u7684\u5206\u5272\u56fe ID</li> <li>\u56fe\u50cf\u4e2d\u7684\u6bcf\u4e2a\u50cf\u7d20\u989c\u8272\u503c\u7f16\u7801\u4e3a 4 \u901a\u9053\uff0c\u4ee3\u8868\u4e00\u4e2a <code>uint32_t</code> \u7c7b\u578b\u7684\u5bf9\u8c61 ID</li> <li>\u53ef\u5728 PG \u67e5\u8be2\u4e2d\u83b7\u53d6\u5bf9\u5e94\u7269\u4f53\u7684\u5206\u5272 ID</li> </ul> <pre><code>\u5206\u5272\u56fe\u50cf\u7d20 \u2192 \u5206\u5272 ID \u7684\u8f6c\u6362\u516c\u5f0f\uff1a\n    id = R + G * 256 + B * 256\u00b2 + A * 256\u00b3\n</code></pre> <p>PG \u4f9d\u8d56\u63d0\u9192</p> <p>\u5206\u5272\u56fe\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u7684\u5bf9\u8c61\u5f52\u5c5e\u4f9d\u8d56 PG \u4e2d\u7684\u5206\u5272 ID \u8bbe\u5b9a\u3002\u672a\u8bbe\u7f6e PG \u6d41\u65f6\uff0c\u5206\u5272\u56fe\u50cf\u7d20\u65e0\u8bed\u4e49\u610f\u4e49\u3002</p>"},{"location":"concepts/camera/#_2","title":"\u6df1\u5ea6\u56fe\u538b\u7f29\u4e0e\u89e3\u538b","text":"<p>\u4e3a\u4e86\u8282\u7701\u4f20\u8f93\u5e26\u5bbd\uff0c\u76f8\u673a\u83b7\u53d6\u5230\u7684\u6df1\u5ea6\u56fe\u662f\u7ecf\u8fc7\u538b\u7f29\u5904\u7406\u7684\u3002</p> <p>\u6df1\u5ea6\u56fe\u89e3\u538b</p> <p>\u89e3\u538b\u540e\u6bcf\u4e2a\u50cf\u7d20\u70b9\u5355\u4f4d\u4e3a cm\uff0c\u4ee5\u4e0b\u4e3a\u793a\u4f8b\u5904\u7406\u65b9\u6cd5\uff1a</p> <pre><code>def hdr_2_npy(self, binary_data, from_eye=False):\n    data = imageio.imread(binary_data)\n    h_, w_ = data.shape[:2]\n    red, green, blue = data[:,:,0], data[:,:,1], data[:,:,2]\n    tmp2 = np.hstack((red, green, blue)).reshape(h_ * 3, w_)\n    zero_index = np.where(tmp2 == 0)\n    tmp2[zero_index] = 1 / 10000\n    depth = 10 / (tmp2 * 0.09998)\n\n    if from_eye:\n        depth = depth.reshape((h_ * 3, w_))\n        depth = depth.T\n        depth = np.flip(depth, axis=1)\n    depth = depth.reshape((h_ * 3, w_, 1))\n    depth = depth[0:-1, :, :]\n    return depth\n</code></pre>"},{"location":"concepts/camera/#_3","title":"\u7cbe\u786e\u7684\u53ef\u89c1\u6027\u7ed3\u679c","text":"<p>Camera \u7ec4\u4ef6\u652f\u6301\u8fd4\u56de\u5f53\u524d\u5e27\u4e2d\u56fe\u50cf\u201c\u771f\u6b63\u770b\u5f97\u89c1\u201d\u7684\u6240\u6709\u5bf9\u8c61\u5217\u8868\u3002\u8fd9\u5728\u672a\u96c6\u6210\u771f\u5b9e CV \u611f\u77e5\u6a21\u5757\u65f6\uff0c\u53ef\u7528\u4e8e\u6a21\u62df\u667a\u80fd\u4f53\u611f\u77e5\u3002</p> <p>Visible Object List</p> <p>\u8be5\u5217\u8868\u6a21\u62df\u201c\u56fe\u50cf\u4e2d\u6bcf\u4e00\u4e2a\u51fa\u73b0\u5728\u53ef\u89c6\u8303\u56f4\u5185\u7684\u7269\u4f53\u201d\u3002\u53ea\u8981\u7269\u4f53\u5728\u56fe\u4e2d\u5360\u636e\u4e86\u4efb\u610f\u4e00\u4e2a\u50cf\u7d20\uff0c\u5c31\u4f1a\u88ab\u52a0\u5165\u8be5\u5217\u8868\u3002</p>"},{"location":"concepts/camera/#_4","title":"\u591a\u667a\u80fd\u4f53","text":"<p>\u591a\u667a\u80fd\u4f53\u573a\u666f\u4e0b\u82e5\u5f00\u542f\u591a\u4e2a\u76f8\u673a\u8fdb\u884c\u56fe\u50cf\u8f93\u51fa\uff0cUnreal \u4fa7\u8d1f\u8f7d\u5c06\u663e\u8457\u4e0a\u5347\u3002</p> <p>\u5206\u5e03\u5f0f\u63a8\u8350</p> <p>\u82e5\u9700\u8981\u5927\u89c4\u6a21\u5e76\u53d1\u53d6\u56fe\uff08\u5982\uff1a20 \u4e2a\u76f8\u673a\u540c\u65f6\u8f93\u51fa 10FPS \u56fe\u50cf\uff09\uff0c\u5efa\u8bae\u542f\u7528 TongSim \u63d0\u4f9b\u7684\u5206\u5e03\u5f0f\u89c6\u89c9\u652f\u6301\uff0c\u5c06\u56fe\u50cf\u6e32\u67d3\u4efb\u52a1\u5206\u644a\u81f3\u591a\u4e2a\u670d\u52a1\u8282\u70b9\u3002</p>"},{"location":"concepts/context/","title":"\ud83e\udde0 WorldContext\uff1a\u8fd0\u884c\u65f6\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668","text":"<p>WorldContext \u662f TongSim Python SDK \u7684\u6838\u5fc3\u6a21\u5757\u4e4b\u4e00\uff0c\u8d1f\u8d23\u7ba1\u7406\u4e0e\u4e00\u4e2a TongSim Unreal \u5b9e\u4f8b\u7ed1\u5b9a\u7684\u6240\u6709\u8fd0\u884c\u65f6\u8d44\u6e90\u3002</p> <p>\u5b83\u7edf\u4e00\u5c01\u88c5\u4e86\uff1a</p> <ul> <li>\u5f02\u6b65\u4e8b\u4ef6\u5faa\u73af\uff08AsyncLoop\uff09</li> <li>gRPC \u901a\u4fe1\u8fde\u63a5\uff08\u4e3b\u8fde\u63a5\u548c legacy \u8fde\u63a5\uff09</li> </ul>"},{"location":"concepts/context/#worldcontext_1","title":"\u4e3a\u4ec0\u4e48\u9700\u8981 WorldContext\uff1f","text":"<p>\u5728 TongSim \u4e2d\uff0c\u667a\u80fd\u4f53\u884c\u4e3a\u63a7\u5236\u3001\u56fe\u50cf\u6d41\u91c7\u96c6\u3001PG \u6570\u636e\u8ba2\u9605\u7b49\u5927\u91cf\u64cd\u4f5c\uff0c\u90fd\u662f\u57fa\u4e8e gRPC \u534f\u8bae\u7684 I/O \u5bc6\u96c6\u578b\u8c03\u7528\uff0c\u800c\u975e\u8ba1\u7b97\u5bc6\u96c6\u578b\u3002\u4f20\u7edf\u7684\u591a\u7ebf\u7a0b\u65b9\u6848\u4e0d\u4ec5\u590d\u6742\u3001\u5bb9\u6613\u5f15\u53d1\u540c\u6b65\u95ee\u9898\uff0c\u5e76\u4e14\u5bb9\u6613\u589e\u52a0\u4e0a\u4e0b\u6587\u5207\u6362\u5f00\u9500\u3002</p> <p>\u4e3a\u4e86\u63d0\u5347\u6027\u80fd\u5e76\u964d\u4f4e\u5e76\u53d1\u8bbf\u95ee\u51b2\u7a81\uff0cTongSim \u91c7\u7528\u4ee5\u4e0b\u8bbe\u8ba1\u7406\u5ff5\uff1a</p> <p>\u6240\u6709\u4e0e\u4e00\u4e2a TongSim \u5b9e\u4f8b\u76f8\u5173\u7684\u5f02\u6b65\u4efb\u52a1\uff0c\u7edf\u4e00\u8c03\u5ea6\u5230\u4e00\u4e2a\u72ec\u7acb\u7ebf\u7a0b\u4e2d\u7684\u4e8b\u4ef6\u5faa\u73af\uff08\u5373 AsyncLoop\uff09\u6267\u884c\u3002</p> <p>\u8fd9\u4e00\u673a\u5236\u786e\u4fdd\u4e86\uff1a</p> <ul> <li>\u6240\u6709 gRPC \u8c03\u7528\u5728\u4e8b\u4ef6\u5faa\u73af\u5185\u8c03\u5ea6\uff0c\u907f\u514d\u591a\u7ebf\u7a0b\u9501\u7ade\u4e89</li> <li>\u7528\u6237\u540c\u6b65\u4ee3\u7801\u53ef\u901a\u8fc7 <code>sync_run()</code> \u5b89\u5168\u5730\u963b\u585e\u7b49\u5f85\u5f02\u6b65\u4efb\u52a1\u7ed3\u679c</li> <li>WorldContext \u4f1a\u81ea\u52a8\u6e05\u7406\u672a\u5b8c\u6210\u7684\u4efb\u52a1\u548c\u8fde\u63a5\uff0c\u786e\u4fdd\u8d44\u6e90\u91ca\u653e\u5e72\u51c0</li> </ul> <p>\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u7684\u6ce8\u610f\u4e8b\u9879</p> <p><code>AsyncLoop</code> \u4e3b\u8981\u9002\u7528\u4e8e I/O \u5bc6\u96c6\u578b\u64cd\u4f5c\uff08\u5982 gRPC\u3001\u8ba2\u9605\u56fe\u50cf\u7b49\uff09\u3002 \u5982\u679c\u4f60\u9700\u8981\u6267\u884c \u8ba1\u7b97\u5bc6\u96c6\u578b\u903b\u8f91\uff08\u5982\u56fe\u50cf\u5904\u7406\u3001\u8def\u5f84\u89c4\u5212\uff09\uff0c\u8bf7\u5c06\u5176 offload \u5230\u4e13\u7528\u7684\u7ebf\u7a0b\u6c60\u6216\u8fdb\u7a0b\u6c60\u4e2d\uff0c\u907f\u514d\u963b\u585e\u5f02\u6b65\u8c03\u5ea6\u7ebf\u7a0b\u3002</p>"},{"location":"concepts/context/#asyncloop","title":"AsyncLoop\uff1a\u6302\u8f7d\u6240\u6709\u534f\u7a0b\u7684\u4e13\u5c5e\u7ebf\u7a0b","text":"<p>TongSim \u7684 <code>AsyncLoop</code> \u662f\u4e00\u4e2a\u5c01\u88c5\u597d\u7684\u540e\u53f0\u7ebf\u7a0b\uff0c\u5b83\u5728\u5185\u90e8\u7ef4\u62a4\uff1a</p> <ul> <li>\u4e00\u4e2a\u72ec\u7acb\u7684 asyncio \u4e8b\u4ef6\u5faa\u73af</li> <li>\u4e00\u4e2a\u4e3b\u4efb\u52a1\u7ec4\uff08TaskGroup\uff09\uff0c\u7528\u4e8e\u6302\u8f7d\u7528\u6237\u6216\u7cfb\u7edf\u7ea7\u7684\u5f02\u6b65\u4efb\u52a1</li> <li>\u4efb\u52a1\u5d29\u6e83\u65f6\u81ea\u52a8\u4f20\u64ad\u5f02\u5e38\u3001\u53d6\u6d88\u6240\u6709\u76f8\u5173\u534f\u7a0b</li> </ul>"},{"location":"concepts/context/#_1","title":"\u2705 \u5bf9\u7528\u6237\u610f\u5473\u7740\u4ec0\u4e48\uff1f","text":"<p>\u5bf9\u7528\u6237\u800c\u8a00</p> <ul> <li>\u4f60\u65e0\u9700\u624b\u52a8\u7ba1\u7406\u7ebf\u7a0b\u6216\u4e8b\u4ef6\u5faa\u73af</li> <li>\u6240\u6709\u5f02\u6b65\u4efb\u52a1\u90fd\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u8fd0\u884c\uff0c\u5929\u7136\u907f\u514d\u9501\u7ade\u4e89</li> <li>\u4f60\u53ea\u9700\u8c03\u7528 <code>context.sync_run(...)</code> \u63d0\u4ea4\u534f\u7a0b\uff0c\u5373\u53ef\u540c\u6b65\u7b49\u5f85\u5176\u6267\u884c\u5b8c\u6210</li> <li>\u82e5\u4f60\u9700\u8981\u975e\u963b\u585e\u5f0f\u7684\u63d0\u4ea4\u5f02\u6b65\u4efb\u52a1\uff0c\u53ef\u4ee5\u8c03\u7528 <code>context.async_task(...)</code> \u5c06\u4efb\u52a1\u63d0\u4ea4\u5230\u4e13\u5c5e\u7ebf\u7a0b\u6267\u884c</li> </ul> <p>TongSim SDK \u5373\u517c\u5bb9 \u540c\u6b65\u963b\u585e\u8c03\u7528\uff0c\u4e5f\u9002\u914d \u5f02\u6b65\u9ad8\u5e76\u53d1\u7ba1\u63a7\uff0c\u65e0\u9700\u7528\u6237\u663e\u5f0f\u5207\u6362\u4e0a\u4e0b\u6587\u3002</p>"},{"location":"concepts/context/#_2","title":"\u5e38\u7528\u63a5\u53e3","text":"\u529f\u80fd \u63a5\u53e3\u540d \u8bf4\u660e \u63d0\u4ea4\u534f\u7a0b\u5e76\u540c\u6b65\u7b49\u5f85\u7ed3\u679c <code>context.sync_run(coro)</code> \u5f53\u524d\u7ebf\u7a0b\u4e2d\u963b\u585e\u7b49\u5f85\u5f02\u6b65\u4efb\u52a1\u5b8c\u6210 \u63d0\u4ea4\u534f\u7a0b\u4e3a\u540e\u53f0\u4efb\u52a1 <code>context.async_task(coro, name)</code> \u975e\u963b\u585e\u540e\u53f0\u8fd0\u884c\uff0c\u8fd4\u56de <code>Future</code> \u83b7\u53d6 gRPC \u4e3b\u8fde\u63a5 <code>context.conn</code> \u7528\u4e8e\u7edd\u5927\u591a\u6570\u6570\u636e\u63a5\u53e3 \u83b7\u53d6 legacy gRPC \u8fde\u63a5 <code>context.conn_legacy</code> \u4e00\u4e2a\u9057\u7559\u7684gRPC\u94fe\u63a5\uff0c\u7ef4\u62a4\u4e00\u4e9b\u6bd4\u8f83\u65e7\u7684\u901a\u4fe1\u529f\u80fd"},{"location":"concepts/entity/","title":"\ud83e\uddf1 Entity\uff1a\u7edf\u4e00\u7684\u5b9e\u4f53\u8868\u793a","text":"<p>TongSim \u4e2d\u7684 <code>Entity</code> \u662f\u5bf9 TongSim \u4e16\u754c\u4e2d\u5bf9\u8c61\uff08\u5982\u667a\u80fd\u4f53\u3001\u5bb6\u5177\u3001\u76f8\u673a\u4f20\u611f\u5668\u3001\u4e00\u4e9b\u5168\u5c40\u7ba1\u7406\u5668\u5bf9\u8c61\u7b49\uff09\u7684\u7edf\u4e00\u62bd\u8c61\u3002\u5b83\u7ee7\u627f Unreal \u4e2d <code>Actor + Component</code> \u7684\u7ec4\u5408\u7ed3\u6784\uff0c\u5e76\u5728 Python SDK \u4e2d\u901a\u8fc7\u80fd\u529b\u7ec4\u5408\uff08Ability\uff09\u6784\u5efa\u9ad8\u53ef\u62d3\u5c55\u7684\u5b9e\u4f53\u8868\u793a\u3002</p> <p>API \u53c2\u8003</p>"},{"location":"concepts/entity/#unreal","title":"Unreal \u7684\u7ed3\u6784\u80cc\u666f","text":"<p>\u5728 Unreal \u4e2d\uff0c\u6240\u6709\u573a\u666f\u5bf9\u8c61\u90fd\u662f <code>Actor</code>\uff0c\u5176\u884c\u4e3a\u548c\u5c5e\u6027\u7531\u6302\u8f7d\u7684 <code>Component</code> \u51b3\u5b9a\u3002\u7406\u8bba\u4e0a\uff0c\u4e0d\u540c\u5bf9\u8c61\u5e94\u7ec4\u5408\u4e0d\u540c\u7684\u7ec4\u4ef6\u4ee5\u8868\u73b0\u5176\u529f\u80fd\u3002</p> <p>TongSim Unreal \u4e2d\u4e3a\u4e86\u5feb\u901f\u652f\u6301\u5404\u79cd\u4ea4\u4e92\u903b\u8f91\uff0c\u51e0\u4e4e\u6240\u6709\u7c7b\u578b\u7684 Actor \u90fd\u9ed8\u8ba4\u6302\u8f7d\u4e86\u7edd\u5927\u90e8\u5206\u7c7b\u578b\u7684 Component\uff0c\u5373\u4f7f\u8fd9\u4e9b\u7ec4\u4ef6\u5728\u5b9e\u9645\u8fd0\u884c\u4e2d\u6beb\u65e0\u610f\u4e49\u3002\u5bfc\u81f4\u5982\u4e0b\u95ee\u9898\uff1a</p> <p>\u4f8b\u5982\uff1a</p> <p>\u4e00\u4e2a\u7a7a\u8c03\uff08AirConditioner\uff09Actor \u5185\u4e5f\u53ef\u80fd\u6302\u8f7d\u4e86 <code>FoodComponent</code>\uff0c\u5bfc\u81f4\u5b83\u5728\u63a5\u53e3\u5c42\u4e5f\u201c\u53ef\u4ee5\u88ab\u5403\u6389\u201d\u3002</p> <p>\u8fd9\u7c7b\u201c\u65e0\u610f\u4e49\u80fd\u529b\u201d\u7684\u6df7\u6742\u8ba9\u901a\u4fe1\u5c42\u7684 Actor \u8868\u8fbe\u53d8\u5f97\u81c3\u80bf\u3001\u6a21\u7cca\uff0c\u4e5f\u8ba9 Python \u7aef\u96be\u4ee5\u7cbe\u51c6\u5730\u8868\u8fbe\u4e00\u4e2a\u5bf9\u8c61\u201c\u80fd\u505a\u4ec0\u4e48\u201d\u3002</p>"},{"location":"concepts/entity/#entity-ability","title":"\u2705 Entity + Ability","text":"<p>\u4e3a\u4e86\u91cd\u6784\u5b9e\u4f53\u903b\u8f91\uff0cTongSim Python SDK \u5f15\u5165 Ability \u91cd\u7ec4 Entity\uff1a</p>"},{"location":"concepts/entity/#entity_1","title":"Entity \u7684\u804c\u8d23","text":"<ul> <li>\u6301\u6709 Entity ID \u4e0e\u6240\u6709\u7ec4\u4ef6 ID</li> <li>\u63d0\u4f9b\u80fd\u529b\u5224\u65ad\u4e0e\u8bbf\u95ee\uff08Ability\uff09</li> <li>\u4e0d\u5305\u542b\u5b9e\u9645\u7ec4\u4ef6\u6570\u636e\uff0c\u4ec5\u4f5c\u4e3a\u884c\u4e3a\u8def\u7531\u4e2d\u5fc3</li> </ul>"},{"location":"concepts/entity/#ability","title":"Ability \u662f\u4ec0\u4e48\uff1f","text":"<p>Ability \u662f\u4e00\u7ec4\u63a5\u53e3\u534f\u8bae\uff08Protocol\uff09\uff0c\u4ee3\u8868\u67d0\u79cd\u529f\u80fd\u80fd\u529b\uff1a</p> <ul> <li><code>CameraAbility</code>\uff1a\u56fe\u50cf\u91c7\u96c6\u80fd\u529b</li> <li><code>AssetAbility</code>\uff1a\u8d44\u4ea7\u4fe1\u606f\u80fd\u529b</li> </ul> <p>\u6bcf\u79cd Ability \u5747\u5bf9\u5e94\u4e00\u4e2a\u5b9e\u73b0\u7c7b\uff08Impl\uff09\uff0c\u7531 SDK \u5185\u90e8\u6839\u636e\u7ec4\u4ef6\u914d\u7f6e\u81ea\u52a8\u5339\u914d\u751f\u6210\u3002</p>"},{"location":"concepts/entity/#_1","title":"\u4f7f\u7528\u65b9\u5f0f\u793a\u4f8b","text":"<pre><code>if entity.has_ability(CameraAbility):\n    camera = entity.as_(CameraAbility)\n    camera.start_imagedata_streaming(rgb=True)\n</code></pre> <p>SDK \u4f1a\u6839\u636e\u7ec4\u4ef6\u7ed3\u6784\uff0c\u81ea\u52a8\u5224\u65ad\u662f\u5426\u652f\u6301\u8be5\u80fd\u529b\u5e76\u7ed1\u5b9a\u5b9e\u73b0\u3002</p> <p>\u63a8\u8350\u4f7f\u7528\u7ec4\u5408\u5b9e\u4f53\u7c7b\u578b</p> <p>\u9664\u4e86 <code>as_(Ability)</code> \u7684\u65b9\u5f0f\uff0c\u6211\u4eec\u66f4\u63a8\u8350\u4f7f\u7528\u7ec4\u5408\u597d\u7684\u5b9e\u4f53\u7c7b\uff08\u5982 <code>AgentEntity</code>, <code>CameraEntity</code>\uff09\uff0c\u8fd9\u4e9b\u7c7b\u5728\u5b9a\u4e49\u65f6\u5df2\u7ed1\u5b9a\u597d\u5e38\u7528\u80fd\u529b\uff0c\u5e76\u63d0\u4f9b\u66f4\u6e05\u6670\u7684\u4ee3\u7801\u63d0\u793a\u4e0e\u5c01\u88c5\u3002 </p>"},{"location":"concepts/entity/#entity_2","title":"\u83b7\u53d6 Entity \u7684\u65b9\u5f0f","text":"<p>\u4f60\u53ef\u4ee5\u901a\u8fc7\u591a\u79cd\u65b9\u5f0f\u521b\u5efa\u6216\u83b7\u53d6 Entity\uff1a</p>"},{"location":"concepts/entity/#spawn_entity","title":"\ud83c\udd95 spawn_entity()","text":"<p>\u521b\u5efa\u65b0\u7684\u5b9e\u4f53\u5bf9\u8c61\uff08\u5982\u653e\u7f6e\u4e00\u4e2a\u7269\u54c1\u3001\u751f\u6210\u4e00\u4e2a agent \u7b49\uff09\uff1a</p> <pre><code>entity = ue.spawn_entity(\n    entity_type=ts.BaseObjectEntity,\n    blueprint=\"BP_Cup\",\n    location=Vector3(0.0, 0.0, 100.0),\n)\n</code></pre> <p>\u82e5\u4f60\u5df2\u5b9a\u4e49\u597d\u81ea\u5b9a\u4e49 Entity \u7c7b\uff08\u5982 <code>MyCustomEntity</code>\uff09\uff0c\u53ef\u4f20\u5165 <code>entity_type=MyCustomEntity</code> \u5b9e\u73b0\u5c01\u88c5\u3002</p> <ul> <li>blueprint \u540d\u79f0\u53ef\u4ee5\u53c2\u8003 TongAI \u8d44\u4ea7\u5e93</li> </ul>"},{"location":"concepts/entity/#entity_from_id","title":"\ud83d\udccc entity_from_id()","text":"<p>\u82e5\u4f60\u5df2\u77e5\u5b9e\u4f53\u7684\u552f\u4e00 ID\uff0c\u53ef\u901a\u8fc7\u6b64\u65b9\u6cd5\u5feb\u901f\u6062\u590d\u5b9e\u4f53\u5bf9\u8c61\uff1a</p> <pre><code>entity = ue.entity_from_id(ts.BaseObjectEntity, entity_id=\"BP_Cup_C_1\")\n</code></pre> <p>\u76f8\u6bd4 <code>get_entity_by_name</code>\uff0c\u8be5\u63a5\u53e3\u6027\u80fd\u66f4\u4f18\u3002</p>"},{"location":"concepts/entity/#get_entity_by_name","title":"\ud83d\udd0d get_entity_by_name()","text":"<p>\u53ef\u901a\u8fc7\u5b9e\u4f53\u540d\u79f0\u6a21\u7cca\u641c\u7d22\u5e76\u6062\u590d\u5b9e\u4f53\uff1a</p> <pre><code>entity = ue.get_entity_by_name(ts.BaseObjectEntity, name=\"Cup\")\n</code></pre> <p>\u5185\u90e8\u57fa\u4e8e UE \u7684 object \u540d\u79f0\u8fdb\u884c\u5339\u914d\uff0c\u9002\u5408\u6d4b\u8bd5\u548c\u975e\u7cbe\u786e\u573a\u666f\u3002</p>"},{"location":"concepts/entity/#get_entities_by_rdf_type","title":"\ud83d\udce6 get_entities_by_rdf_type()","text":"<p>\u6839\u636e\u7c7b\u578b\uff08\u5982 <code>\"cup\"</code>, <code>\"tv\"</code>\uff09\u6279\u91cf\u83b7\u53d6\u4e00\u4e2a\u573a\u666f\u4e2d\u6240\u6709\u8be5\u7c7b\u578b\u7684\u5b9e\u4f53\uff1a</p> <pre><code>cups = ue.get_entities_by_rdf_type(ts.BaseObjectEntity, rdf_type=\"cup\")\n</code></pre> <p>\u9002\u7528\u4e8e\u6cdb\u5316\u4efb\u52a1\u6267\u884c\u6216\u8bed\u4e49\u4efb\u52a1\u89c4\u5212\u3002</p>"},{"location":"concepts/level/","title":"\ud83d\uddfa\ufe0f \u5173\u5361\uff08Level\uff09","text":""},{"location":"concepts/level/#level_1","title":"\ud83d\udcd6 \u4ec0\u4e48\u662f Level\uff1f","text":"<p>\u5728 Unreal Engine \u4e2d\uff0cLevel \u662f\u865a\u62df\u4e16\u754c\u7684\u57fa\u672c\u6784\u5efa\u5355\u5143\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4eff\u771f\u573a\u666f\u7684\u7a7a\u95f4\u5e03\u5c40\u3001\u5bf9\u8c61\u3001\u5149\u7167\u3001\u73af\u5883\u97f3\u6548\u7b49\u3002TongSim \u7ee7\u627f\u4e86\u8fd9\u4e00\u8bbe\u8ba1\u7406\u5ff5\uff0c\u6bcf\u4e00\u4e2a\u5173\u5361\u90fd\u662f\u4e00\u4e2a\u667a\u80fd\u4f53\u751f\u6d3b\u4eff\u771f\u73af\u5883\u7684\u8f7d\u4f53\u3002</p> <p>\u5728 TongSim \u4e2d\uff0c\u6240\u6709\u7684\u884c\u4e3a\u6a21\u62df\u90fd\u5fc5\u987b\u53d1\u751f\u5728\u4e00\u4e2a\u5df2\u52a0\u8f7d\u7684 Level \u4e2d\u3002\u56e0\u6b64\uff0c\u7406\u89e3\u548c\u6b63\u786e\u4f7f\u7528\u5173\u5361\u7cfb\u7edf\u662f\u5b9e\u73b0\u4eff\u771f\u4efb\u52a1\u7684\u7b2c\u4e00\u6b65\u3002</p>"},{"location":"concepts/level/#_1","title":"\ud83d\udd01 \u5173\u5361\u5207\u6362\u673a\u5236","text":"<p>TongSim Python SDK \u63d0\u4f9b\u4e86 \u540c\u6b65/\u5f02\u6b65 \u63a5\u53e3 <code>open_level(level_name: str)</code> \u7528\u4e8e\u52a0\u8f7d\u5e76\u5207\u6362\u573a\u666f\u3002</p> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u672c\u8d28\u4e0a\u662f\u5f02\u6b65\u7684\uff0c\u5305\u542b\u4e24\u4e2a\u5173\u952e\u9636\u6bb5\uff1a</p> <ol> <li>UE \u7aef\u8d44\u6e90\u7ba1\u7406\uff1a</li> <li>\u5378\u8f7d\u5f53\u524d Level\uff08\u91ca\u653e\u5185\u5b58\uff09</li> <li> <p>\u52a0\u8f7d\u65b0 Level\uff08\u91cd\u65b0\u6784\u5efa\u5bfc\u822a\u3001\u5bf9\u8c61\u7b49\u8d44\u6e90\uff09</p> </li> <li> <p>Python SDK \u7aef\u8d44\u6e90\u6e05\u7406\u4e0e\u521d\u59cb\u5316\uff1a</p> </li> <li>\u81ea\u52a8\u5173\u95ed\u6240\u6709\u4e0e\u65e7 Level \u76f8\u5173\u7684\u5f02\u6b65\u4efb\u52a1\u4e0e gRPC \u6d41\uff08\u5982 PG \u6d41\u3001\u56fe\u50cf\u6d41\uff09</li> <li>await \u7b49\u5f85 UE \u4fa7 gRPC\u6d88\u606f\u5199\u56de</li> </ol> <p>\u5207\u6362\u5173\u5361\u4f1a\u89e6\u53d1\u73af\u5883\u91cd\u7f6e</p> <p>\u6bcf\u6b21\u8c03\u7528 <code>open_level()</code>\uff0c\u90fd\u7b49\u4ef7\u4e8e\u5c06\u6574\u4e2a\u4eff\u771f\u73af\u5883\u8fdb\u884c\u4e00\u6b21\u91cd\u7f6e\u3002\u4efb\u4f55Entitiy(\u5b9e\u4f53)\u5bf9\u8c61\u7684\u5f15\u7528\u3001gRPC\u6d41\u5f0f\u8fde\u63a5\u6216\u72b6\u6001\u7f13\u5b58\u90fd\u4f1a\u5931\u6548\u3002\u4f60\u9700\u8981\u91cd\u65b0\u8c03\u7528\u5982 <code>pg_manager.start_pg_stream()</code> \u7b49\u63a5\u53e3\u91cd\u65b0\u8ba2\u9605\u6240\u9700\u4fe1\u606f\u3002</p>"},{"location":"concepts/level/#_2","title":"\u2705 \u63a8\u8350\u5b9e\u8df5","text":"<p>\u53ef\u53c2\u8003 example \u4e2d\u7684 TODO.</p>"},{"location":"concepts/overview/","title":"\ud83c\udf10 TongSim \u67b6\u6784\u6982\u89c8","text":"<p>TongSim \u662f\u4e00\u4e2a\u865a\u62df\u667a\u80fd\u4f53\u4eff\u771f\u5e73\u53f0\uff0c\u4e3b\u8981\u7531\u4ee5\u4e0b\u6838\u5fc3\u7ec4\u4ef6\u6784\u6210\uff1a</p> <ul> <li>TongSim Unreal</li> <li>TongSim Python SDK</li> <li>TongSim WebSignalServer (\u4fe1\u4ee4\u670d\u52a1\u5668)</li> <li>TongSim Audio2Face (\u53e3\u578b\u7b97\u6cd5\u670d\u52a1)</li> </ul> <p>\u8fd9\u51e0\u4e2a\u7ec4\u4ef6\u534f\u540c\u6784\u5efa\u4e86\u4e00\u4e2a\u53ef\u4ea4\u4e92\u3001\u53ef\u6269\u5c55\u7684\u865a\u62df\u4e16\u754c\u4eff\u771f\u6846\u67b6\u3002</p> <p></p>"},{"location":"concepts/overview/#tongsim-unreal","title":"\ud83d\udd79\ufe0f TongSim Unreal","text":"<p>TongSim Unreal \u4f7f\u7528 Unreal Engine (UE) \u7814\u53d1\uff0c\u662f\u865a\u62df\u667a\u80fd\u4f53\u751f\u6d3b\u4eff\u771f\u7684\u6838\u5fc3\u8fd0\u884c\u73af\u5883\u3002</p> <p>\u5b83\u4e3b\u8981\u5177\u5907\u4ee5\u4e0b\u7279\u6027\u548c\u8bbe\u8ba1\uff1a</p> <ul> <li> <p>3D \u4eff\u771f\u73af\u5883\u4e0e\u667a\u80fd\u4f53\u884c\u4e3a\u652f\u6301</p> <ul> <li>\u53ef\u52a0\u8f7d\u548c\u914d\u7f6e\u591a\u6837\u5316\u4efb\u52a1\u573a\u666f\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u6269\u5c55\u3002</li> <li>\u63d0\u4f9b\u56fe\u50cf\u3001\u58f0\u97f3\u3001\u70b9\u4e91\u7b49\u591a\u7ef4\u5ea6\u611f\u77e5\u6570\u636e\u83b7\u53d6\uff0c\u6ee1\u8db3\u667a\u80fd\u4f53\u611f\u77e5\u548c\u63a8\u7406\u9700\u6c42\u3002</li> <li>\u652f\u6301\u901a\u8fc7\u52a8\u4f5c\u63a5\u53e3\u9a71\u52a8\u667a\u80fd\u4f53\u5b8c\u6210\u79fb\u52a8\u3001\u4ea4\u4e92\u3001\u7269\u4f53\u64cd\u4f5c\u7b49\u4efb\u52a1\u3002</li> <li>\u63d0\u4f9b\u4e24\u7c7b\u4eff\u771f\u673a\u5236\uff1a<ul> <li>\u7269\u7406\u4eff\u771f\uff1a\u57fa\u4e8e\u521a\u4f53\u3001\u6d41\u4f53\u3001\u8f6f\u4f53\u7b49\u7b97\u6cd5\u5b9e\u73b0\u9ad8\u7cbe\u5ea6\u7269\u7406\u72b6\u6001\u4eff\u771f\u3002</li> <li>\u56e0\u679c\u903b\u8f91\u4eff\u771f\uff1a\u7528\u4e8e\u7269\u7406\u4eff\u771f\u96be\u4ee5\u9ad8\u6548\u8986\u76d6\u7684\u590d\u6742\u73b0\u8c61\uff0c\u4ee5\u7b80\u5316\u56e0\u679c\u903b\u8f91\u9ad8\u6548\u6a21\u62df\u4efb\u52a1\u903b\u8f91\u3002</li> </ul> </li> </ul> </li> <li> <p>\u5206\u5e03\u5f0f\u67b6\u6784\u8bbe\u8ba1   \u53ef\u901a\u8fc7\u52a0\u5165\u591a\u4e2a TongSim UE Client \u5206\u62c5\u4eff\u771f\u8ba1\u7b97\u538b\u529b\uff0c\u5b9e\u73b0\u591a\u673a\u534f\u540c\u7684\u5e76\u53d1\u73af\u5883\u4eff\u771f\uff0c\u76ee\u524d\u4e3b\u8981\u7528\u4e8e\u591a\u667a\u80fd\u4f53\u73af\u5883\u3002</p> </li> <li> <p>VR \u4ea4\u4e92\u652f\u6301   \u53ef\u8fde\u63a5 TongSim VR Client\uff0c\u652f\u6301\u7528\u6237\u901a\u8fc7 VR \u8bbe\u5907\u4ee5\u6295\u5f71\u8fdb\u5165\u865a\u62df\u4e16\u754c\uff0c\u4e0e\u573a\u666f\u6216\u667a\u80fd\u4f53\u4ea4\u4e92\u3002</p> </li> <li> <p>\u9ad8\u6548\u63a5\u53e3\u901a\u4fe1   \u542f\u52a8\u65f6\u81ea\u52a8\u542f\u52a8 gRPC Server\uff0c\u652f\u6301 TongSim Python SDK \u7b49\u5916\u90e8\u6a21\u5757\u901a\u8fc7 gRPC \u901a\u4fe1\u5b9e\u73b0\u573a\u666f\u63a7\u5236\u3001\u6570\u636e\u91c7\u96c6\u3001\u667a\u80fd\u4f53\u9a71\u52a8\u548c\u52a8\u4f5c\u5206\u53d1\u3002</p> </li> </ul>"},{"location":"concepts/overview/#tongsim-python-sdk","title":"\ud83e\udde0 TongSim Python SDK","text":"<p>TongSim Python SDK \u662f TongSim \u7684\u5b98\u65b9\u5ba2\u6237\u7aef\u5f00\u53d1\u5de5\u5177\u5305\u3002\u5b83\u4f5c\u4e3a gRPC Client \u4e0e TongSim Unreal \u4ea4\u4e92\uff0c\u901a\u8fc7 gRPC \u901a\u4fe1\u5b9e\u73b0\uff1a</p> <ul> <li>\u5b9a\u4e49\u73af\u5883\u548c\u573a\u666f</li> <li>\u83b7\u53d6\u89c2\u6d4b\u4fe1\u606f\uff08\u5982\u573a\u666f\u72b6\u6001\u3001\u667a\u80fd\u4f53\u72b6\u6001\uff09</li> <li>\u9a71\u52a8\u667a\u80fd\u4f53\u884c\u4e3a\uff0c\u6267\u884c\u4efb\u52a1</li> </ul> <p>\u5f00\u53d1\u8005\u53ef\u4ee5\u57fa\u4e8e TongSim Python SDK \u5feb\u901f\u6784\u5efa\u5404\u7c7b\u667a\u80fd\u4f53\u4ea4\u4e92\u903b\u8f91\u3001\u4efb\u52a1\u89c4\u5212\u3001\u884c\u4e3a\u63a7\u5236\u7b49\u3002</p>"},{"location":"concepts/overview/#tongsim-websignalserver","title":"\ud83d\udce1 TongSim WebSignalServer\uff08\u4fe1\u4ee4\u670d\u52a1\u5668\uff09","text":"<p>TongSim WebSignalServer \u662f TongSim \u7684\u6d41\u5a92\u4f53\u670d\u52a1\u7ec4\u4ef6\uff0c\u8d1f\u8d23\uff1a</p> <ul> <li>\u4e0e TongSim Unreal \u901a\u8fc7 Pixel Streaming\uff08\u5e95\u5c42\u901a\u4fe1\u534f\u8bae\u4e3a WebRTC\uff09\u5bf9\u63a5</li> <li>\u5b9e\u73b0\u4e91\u6e38\u620f\u5f0f\u7684\u89c6\u9891\u6d41\u3001\u97f3\u9891\u6d41\u8ba2\u9605</li> <li>\u5b9e\u73b0\u8f93\u5165\u8bbe\u5907\u4ea4\u4e92\u7684\u8fdc\u7a0b\u4f20\u9012\uff08\u5982\u7f51\u9875\u7aef\u8f93\u5165\u8bbe\u5907\u7684\u952e\u9f20\u3001\u624b\u67c4\u6307\u4ee4\uff09</li> </ul> <p>\u501f\u52a9 WebSignalServer\uff0c\u7528\u6237\u53ef\u4ee5\u65e0\u9700\u672c\u5730\u5b89\u88c5\u590d\u6742\u5ba2\u6237\u7aef\uff0c\u901a\u8fc7\u6d4f\u89c8\u5668\u5373\u53ef\u8bbf\u95ee\u865a\u62df\u4e16\u754c\u3002</p>"},{"location":"concepts/overview/#tongsim-audio2face","title":"\ud83d\udc44 TongSim Audio2Face","text":"<p>TongSim Audio2Face \u662f TongSim \u63d0\u4f9b\u7684\u53e3\u578b\u7b97\u6cd5\u670d\u52a1\uff0c\u4e3b\u8981\u529f\u80fd\u5305\u62ec\uff1a</p> <ul> <li>\u63a5\u6536\u6d41\u5f0f\u6587\u672c\u8f93\u51fa\u6216\u97f3\u9891 buffer</li> <li>\u5b9e\u65f6\u751f\u6210\u667a\u80fd\u4f53\u53e3\u578b\u52a8\u753b</li> <li>\u81ea\u52a8\u9a71\u52a8\u667a\u80fd\u4f53\u5634\u90e8\u52a8\u4f5c\u4ee5\u5339\u914d\u8bed\u97f3\u6216\u6587\u672c</li> </ul> <p>\u8be5\u6a21\u5757\u53ef\u4e0e TongSim Unreal \u667a\u80fd\u4f53\u8868\u60c5\u7cfb\u7edf\u65e0\u7f1d\u5bf9\u63a5\uff0c\u4e3a\u865a\u62df\u89d2\u8272\u63d0\u4f9b\u66f4\u52a0\u751f\u52a8\u7684\u53e3\u578b\u8868\u73b0\u3002</p> <p>\ud83d\udca1 \u540e\u7eed\u6587\u6863\u5c06\u8be6\u7ec6\u4ecb\u7ecd TongSim Python SDK \u6a21\u5757\u7684\u5de5\u4f5c\u539f\u7406\u4e0e\u63a5\u53e3\u8bbe\u8ba1\u3002</p>"},{"location":"concepts/pg/","title":"\ud83d\udcd8 TongSim Parsing Graph (PG) \u6587\u6863","text":""},{"location":"concepts/pg/#_1","title":"\u2728 \u7b80\u4ecb","text":"<p>TongSim \u7684 Parsing Graph\uff08PG\uff09\u662f\u73af\u5883\u4e2d\u6240\u6709\u5bf9\u8c61\u72b6\u6001\u7684\u7ed3\u6784\u5316\u8868\u793a\u3002\u9ed8\u8ba4\u7684 PG \u6570\u636e\u901a\u8fc7 gRPC \u534f\u8bae\u6d41\u5f0f\u63a8\u9001\uff0c\u91c7\u7528 \u589e\u91cf\u66f4\u65b0\u673a\u5236 \u2014\u2014 \u4ec5\u5f53\u5b57\u6bb5\u503c\u53d1\u751f\u53d8\u5316\u65f6\u624d\u5199\u51fa\u6570\u636e\uff0c\u4ee5\u63d0\u5347\u6027\u80fd\u4e0e\u6548\u7387\u3002</p> <p>PG \u7ed3\u6784\u7531\u591a\u4e2a <code>Subject</code>\uff08\u5b9e\u4f53\uff09\u7ec4\u6210\uff0c\u6bcf\u4e2a\u4e3b\u4f53\u5305\u542b\u591a\u4e2a <code>Component</code>\uff08\u7ec4\u4ef6\uff09\uff0c\u6bcf\u4e2a component \u8d1f\u8d23 subject \u5bf9\u5e94\u6a21\u5757\u7684\u529f\u80fd\u3001\u72b6\u6001\u6216\u5c5e\u6027\u3002</p>"},{"location":"concepts/pg/#pg","title":"\ud83d\udd0d PG \u683c\u5f0f\u8be6\u89e3","text":"<p>TongSim \u7684 Parsing Graph\uff08PG\uff09\u4ee5\u5e27\u4e3a\u5355\u4f4d\u63a8\u9001\uff0c\u662f\u4e00\u4e2a\u5d4c\u5957\u7684\u7ed3\u6784\u6570\u636e\uff0c\u63cf\u8ff0\u4e86\u573a\u666f\u4e2d\u6240\u6709\u5bf9\u8c61\u53ca\u5176\u7ec4\u4ef6\u7684\u72b6\u6001\u4fe1\u606f\u3002\u7ed3\u6784\u7531 <code>PGResponse</code> \u9876\u5c42\u6d88\u606f\u5f00\u59cb\uff0c\u5305\u542b\u591a\u4e2a <code>SubjectPG</code>\uff0c\u6bcf\u4e2a\u4e3b\u4f53\u53c8\u5305\u542b\u591a\u4e2a <code>ComponentPG</code>\u3002</p>"},{"location":"concepts/pg/#subjectpg","title":"\ud83e\uddcd \u6bcf\u4e2a\u5bf9\u8c61\u63cf\u8ff0\uff1a<code>SubjectPG</code>","text":"<pre><code>message SubjectPG {\n  Subject subject = 1;\n  repeated ComponentPG component_pg = 2;\n  bool subject_destroyed = 3;\n}\n</code></pre> \u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>subject</code> <code>Subject</code> \u5bf9\u8c61\u7684\u552f\u4e00\u6807\u8bc6\uff0c\u5305\u542b name / id \u7b49\u4fe1\u606f <code>component_pg</code> <code>repeated ComponentPG</code> \u5bf9\u8c61\u4e0a\u6302\u8f7d\u7684\u6240\u6709\u7ec4\u4ef6\u7684\u72b6\u6001\u6570\u636e <code>subject_destroyed</code> <code>bool</code> \u5bf9\u8c61\u662f\u5426\u5df2\u9500\u6bc1"},{"location":"concepts/pg/#_2","title":"\ud83d\udccc \u8bf4\u660e","text":"<ul> <li>\u4e00\u4e2a subject \u88ab\u9500\u6bc1\u540e\uff0c\u5728 PG \u5b57\u5178\u4e2d\u5c06\u5e26\u6709\u5b57\u6bb5 <code>is_subject_destroyed: true</code>   \uff08\u4f8b\u5982\uff1a\u9762\u5305 A \u88ab\u5207\u6210\u4e86\u9762\u5305 B \u548c C\uff0cPG \u4e2d\u4fdd\u7559\u9762\u5305 A \u7684\u4fe1\u606f\uff0c\u7528\u4e8e\u63a8\u65ad B \u548c C \u7684\u6765\u6e90\uff09</li> </ul>"},{"location":"concepts/pg/#componentpg","title":"\ud83e\udde9 \u6bcf\u4e2a\u7ec4\u4ef6\u63cf\u8ff0\uff1a<code>ComponentPG</code>","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>component</code> <code>Component</code> \u7ec4\u4ef6\u552f\u4e00\u6807\u8bc6 <code>component_destroyed</code> <code>bool</code> \u7ec4\u4ef6\u662f\u5426\u5df2\u88ab\u9500\u6bc1 <code>pose</code> <code>Pose</code> \u4e16\u754c\u5750\u6807\u7cfb\u4e2d\u7684\u7ec4\u4ef6\u4f4d\u7f6e\u548c\u671d\u5411 <code>scale</code> <code>Vector3</code> \u7ec4\u4ef6\u7684\u7f29\u653e\u6bd4\u4f8b <code>aabb</code> <code>AABB</code> \u7ec4\u4ef6\u7684\u5305\u56f4\u76d2\u4fe1\u606f ... ... \u4ee5\u4e0b\u4e3a\u5b9e\u9645\u6302\u8f7d\u7684\u7ec4\u4ef6\u6570\u636e\u7ed3\u6784\uff08\u8be6\u89c1\u4e0b\u6587\uff09 <p>\u2139\ufe0f \u6ce8\u610f\uff1a\u6bcf\u4e2a\u7ec4\u4ef6\u7ed3\u6784\u4ec5\u5728\u5176\u6709\u5b9e\u9645\u6570\u636e\u65f6\u624d\u4f1a\u88ab\u586b\u5145\uff0cPG \u91c7\u7528 \u589e\u91cf\u66f4\u65b0\u673a\u5236\uff0c\u672a\u53d8\u5316\u5b57\u6bb5\u4e0d\u4f1a\u91cd\u65b0\u63a8\u9001\u3002</p> <p>\u63a5\u4e0b\u6765\u7684\u7ae0\u8282\u5c06\u6309 <code>ComponentPG</code> \u4e2d\u7684\u5404\u7c7b\u7ec4\u4ef6 \u9010\u6761\u8be6\u7ec6\u8bf4\u660e\u5176\u5b57\u6bb5\u5185\u5bb9\u3002</p>"},{"location":"concepts/pg/#_3","title":"\ud83d\udd0d \u5404\u5c5e\u6027\u8be6\u89e3","text":""},{"location":"concepts/pg/#_4","title":"\ud83e\uddf1 \u901a\u7528\u5b57\u6bb5\uff08\u6240\u6709\u7ec4\u4ef6\u5171\u4eab\uff09","text":"<p>\u4ee5\u4e0b\u5b57\u6bb5\u5728\u6240\u6709 <code>ComponentPG</code> \u4e2d\u5747\u53ef\u7528\uff0c\u7528\u4e8e\u8868\u793a\u7ec4\u4ef6\u7684\u7a7a\u95f4\u72b6\u6001\u4e0e\u751f\u547d\u5468\u671f\u72b6\u6001\u3002</p>"},{"location":"concepts/pg/#_5","title":"\ud83d\udcd1 \u5b57\u6bb5\u5b9a\u4e49","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>component</code> <code>Component</code> \u7ec4\u4ef6\u7684\u552f\u4e00\u6807\u8bc6\u4fe1\u606f\uff08\u5305\u542b\u7ec4\u4ef6\u540d\u3001\u7c7b\u578b\u7b49\uff09 <code>component_destroyed</code> <code>bool</code> \u8be5\u7ec4\u4ef6\u662f\u5426\u5df2\u88ab\u9500\u6bc1\uff0c<code>true</code> \u8868\u793a\u4e0d\u518d\u6709\u6548 <code>pose</code> <code>Pose</code> \u7ec4\u4ef6\u5728\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\u7684\u4f4d\u7f6e\u4e0e\u671d\u5411 <code>scale</code> <code>Vector3</code> \u7ec4\u4ef6\u7684\u7f29\u653e\u56e0\u5b50\uff08x, y, z\uff09 <code>aabb</code> <code>AABB</code> \u7ec4\u4ef6\u7684\u8f74\u5bf9\u9f50\u5305\u56f4\u76d2"},{"location":"concepts/pg/#ue_collision_vertexes","title":"<code>ue_collision_vertexes</code>","text":"<p>\u8be5\u7ec4\u4ef6\u63d0\u4f9b\u4e86\u5b9e\u4f53\u7b80\u5355\u78b0\u649e\u4f53\u76f8\u5173\u7684\u51e0\u4f55\u4fe1\u606f\uff0c\u4e3b\u8981\u7528\u4e8e\u8868\u793a Mesh \u6216\u7269\u7406\u5b9e\u4f53\u7684\u9876\u70b9\u6570\u636e\u3002</p>"},{"location":"concepts/pg/#_6","title":"\ud83d\udcd1 \u5b57\u6bb5\u5b9a\u4e49","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>vertexes</code> <code>repeated Vector3</code> \u8be5\u7ec4\u4ef6\u5bf9\u5e94\u7684\u7b80\u5355\u78b0\u649e\u9876\u70b9\uff0c\u901a\u5e38\u6765\u81ea\u6a21\u578b\u7684\u78b0\u649e\u6570\u636e\u3002 <p>\u6bcf\u4e2a <code>Vector3</code> \u8868\u793a\u4e00\u4e2a\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\uff0c\u5177\u6709 <code>x, y, z</code> \u4e09\u4e2a\u6d6e\u70b9\u5750\u6807\u3002</p>"},{"location":"concepts/pg/#character_energy","title":"<code>character_energy</code>","text":"<p>\u8be5\u7ec4\u4ef6\u7ef4\u62a4\u4e86\u667a\u80fd\u4f53\u81ea\u8eab\u7684\u80fd\u91cf\u5c5e\u6027\u3002\u5176\u4e2d\u7684\u5c5e\u6027\u5f53\u667a\u80fd\u4f53\u4ea4\u4e92\u65f6\u4f1a\u81ea\u52a8\u53d8\u5316\uff0c\u4f8b\u5982\u5403\u4e1c\u897f\u65f6\u89d2\u8272\u4f1a\u6062\u590d\u9965\u997f\u503c\uff0c\u79fb\u52a8\u65f6\u4f1a\u6d88\u8017\u4f53\u529b</p>"},{"location":"concepts/pg/#_7","title":"\ud83d\udcd1 \u5b57\u6bb5\u5b9a\u4e49","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>energy.hungry</code> <code>float</code> \u5f53\u524d\u9965\u997f\u503c <code>energy.thirsty</code> <code>float</code> \u5f53\u524d\u9965\u6e34\u503c <code>energy.stamina</code> <code>bool</code> \u5f53\u524d\u4f53\u529b\u503c <code>max_walk_distance</code> <code>float</code> \u5f53\u524d\u4f53\u529b\u4e0b\u53ef\u4ee5\u79fb\u52a8\u7684\u8ddd\u79bb\u4e0a\u9650"},{"location":"concepts/pg/#food_energy","title":"<code>food_energy</code>","text":"<p>\u8be5\u7ec4\u4ef6\u63cf\u8ff0\u4e86\u4e00\u4e2a\u7269\u4f53\u4f5c\u4e3a\u98df\u7269\u6216\u996e\u54c1\u65f6\u7684\u8425\u517b\u4e0e\u6d88\u8017\u5c5e\u6027\uff0c\u5e38\u7528\u4e8e\u80fd\u91cf\u8865\u5145\u673a\u5236\u4e2d\uff0c\u4f8b\u5982\u89d2\u8272\u8fdb\u98df/\u996e\u6c34\u540e\u6062\u590d\u4f53\u529b\u3001\u51cf\u5c11\u9965\u6e34\u503c\u7b49\u3002</p>"},{"location":"concepts/pg/#_8","title":"\ud83d\udcd1 \u5b57\u6bb5\u5b9a\u4e49","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>edible_category</code> <code>enum EEdibleCategory</code> \u53ef\u98df\u7528\u7c7b\u522b\uff0c\u652f\u6301\u4e09\u7c7b\uff1a<code>EATABLE</code>, <code>DRINKABLE</code>, <code>NONE</code> <code>anti_hungry</code> <code>float</code> \u51cf\u5c11\u9965\u997f\u503c\u7684\u80fd\u529b\uff08\u901a\u5e38\u7528\u4e8e\u56fa\u4f53\u98df\u7269\uff09 <code>anti_thirsty</code> <code>float</code> \u51cf\u5c11\u53e3\u6e34\u503c\u7684\u80fd\u529b\uff08\u901a\u5e38\u7528\u4e8e\u996e\u54c1\uff09 <code>cubage</code> <code>float</code> \u98df\u7269/\u996e\u54c1\u7684\u603b\u4f53\u79ef <code>residue_volume</code> <code>float</code> \u5f53\u524d\u5269\u4f59\u4f53\u79ef\uff0c\u52a8\u6001\u53d8\u5316 <p><code>edible_category</code> \u7684\u53d6\u503c\uff1a - <code>EATABLE</code>: \u56fa\u4f53\u98df\u7269\uff08\u4f8b\u5982\u82f9\u679c\uff09 - <code>DRINKABLE</code>: \u6db2\u4f53\u996e\u54c1\uff08\u4f8b\u5982\u6c34\uff09 - <code>NONE</code>: \u4e0d\u53ef\u98df\u7528</p>"},{"location":"concepts/pg/#capsule","title":"<code>capsule</code>","text":"<p>\u8be5\u7ec4\u4ef6\u8868\u793a\u4e00\u4e2a\u80f6\u56ca\u4f53\u78b0\u649e\u7ed3\u6784\uff0c\u7528\u4e8e\u4eba\u578b\u89d2\u8272\u78b0\u649e\u68c0\u6d4b\u3002\u80f6\u56ca\u4f53\u7531\u4e00\u4e2a\u5706\u67f1\u4f53\u4e0e\u4e24\u4e2a\u534a\u7403\u7ec4\u6210\uff0c\u662f\u865a\u5e7b\u5f15\u64ce\u4e2d\u5e38\u7528\u7684\u78b0\u649e\u4f53\u5f62\u72b6\u3002</p>"},{"location":"concepts/pg/#_9","title":"\ud83d\udcd1 \u5b57\u6bb5\u5b9a\u4e49","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>radius</code> <code>float</code> \u80f6\u56ca\u4f53\u7684\u534a\u5f84 <code>half_height</code> <code>float</code> \u80f6\u56ca\u4f53\u7684\u534a\u9ad8"},{"location":"concepts/pg/#dirts","title":"<code>dirts</code>","text":"<p>\u8be5\u7ec4\u4ef6\u8868\u793a\u7269\u4f53\u4e0a\u7684\u6c61\u6e0d\uff0c\u5e38\u7528\u4e8e\u6e05\u6d01\u7c7b\u4efb\u52a1\u73af\u5883\u4ea4\u4e92\u4e2d\u3002\u6bcf\u4e2a\u6c61\u6e0d\u7ed3\u6784\u5305\u542b\u5176\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u4f4d\u7f6e\u3001\u5927\u5c0f\u3001\u65cb\u8f6c\u7b49\u4fe1\u606f\u3002</p>"},{"location":"concepts/pg/#_10","title":"\ud83d\udcd1 \u5b57\u6bb5\u5b9a\u4e49","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>dirt_name</code> <code>string</code> \u6c61\u6e0d\u540d\u79f0\u6216\u7c7b\u578b\u6807\u8bc6\uff08\u5982 <code>\"milk\"</code>\uff09 <code>location</code> <code>Vector3</code> \u6c61\u6e0d\u5728\u7ec4\u4ef6\u5c40\u90e8\u5750\u6807\u7cfb\u4e2d\u7684\u4f4d\u7f6e <code>rotation</code> <code>Quaternion</code> \u6c61\u6e0d\u7684\u65b9\u5411\uff08\u56db\u5143\u6570\u8868\u793a\uff09 <code>size</code> <code>Vector3</code> \u6c61\u6e0d\u7684\u5c3a\u5bf8\uff08\u5bbd\u9ad8\u6df1\uff09 <code>b_dirt_destroyed</code> <code>bool</code> \u662f\u5426\u8be5\u6c61\u6e0d\u5df2\u88ab\u79fb\u9664 <p>\u6bcf\u4e2a <code>ComponentPG</code> \u4e2d\u53ef\u5305\u542b\u591a\u4e2a <code>Dirts</code> \u9879\uff0c\u8868\u793a\u590d\u6570\u4e2a\u6c61\u6e0d\u5b9e\u4f8b\u3002</p>"},{"location":"concepts/pg/#object_in_hand","title":"<code>object_in_hand</code>","text":"<p>\u8be5\u7ec4\u4ef6\u8868\u793a\u667a\u80fd\u4f53\u5f53\u524d\u624b\u4e2d\u6240\u6301\u6709\u7684\u5bf9\u8c61\u72b6\u6001\uff0c\u533a\u5206\u5de6\u624b\u3001\u53f3\u624b\u4ee5\u53ca\u53cc\u624b\u3002</p>"},{"location":"concepts/pg/#_11","title":"\ud83d\udcd1 \u5b57\u6bb5\u5b9a\u4e49","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>left</code> <code>string</code> \u5de6\u624b\u6301\u6709\u7269\u4f53\u7684\u540d\u79f0 <code>right</code> <code>string</code> \u53f3\u624b\u6301\u6709\u7269\u4f53\u7684\u540d\u79f0 <code>two</code> <code>string</code> \u53cc\u624b\u6301\u6709\u7684\u7269\u4f53\u540d\u79f0 <p>\u5f53\u67d0\u4e2a\u5b57\u6bb5\u4e3a\u7a7a\u5b57\u7b26\u4e32\u65f6\u8868\u793a\u5bf9\u5e94\u624b\u90e8\u672a\u6301\u6709\u4efb\u4f55\u7269\u4f53\u3002</p>"},{"location":"concepts/pg/#object_state","title":"<code>object_state</code>","text":"<p>\u8be5\u7ec4\u4ef6\u7528\u4e8e\u8868\u8fbe\u7269\u4f53\u7684\u901a\u7528\u72b6\u6001\u3002(\u5f88\u591a\u4fe1\u606f\u90fd\u5305\u542b\u5728\u5176\u4e2d~)</p>"},{"location":"concepts/pg/#_12","title":"\ud83d\udcd1 \u5b57\u6bb5\u5b9a\u4e49","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>b_state_active</code> <code>bool</code> \u7269\u4f53\u72b6\u6001\u662f\u5426\u6fc0\u6d3b\uff08\u6bd4\u5982\u7a7a\u8c03\u662f\u5426\u6253\u5f00\uff09 <code>group_id</code> <code>string</code> \u6240\u5c5e\u7684Group\u903b\u8f91\u5206\u7ec4\u6807\u8bc6\u7b26 <code>object_type</code> <code>string</code> \u7269\u4f53\u7684Rdf Type\u6807\u7b7e <code>place_object</code> <code>repeated string</code> \u8be5\u7269\u4f53\u4e0a\u653e\u7f6e\u4e86\u54ea\u4e9b\u5176\u4ed6\u7269\u4f53\uff08ID \u5217\u8868\uff09 <code>control_object</code> <code>repeated string</code> \u8be5\u7269\u4f53\u53ef\u4ee5\u63a7\u5236\u54ea\u4e9b\u5bf9\u8c61\uff08\u548c\u5176\u4ed6\u5bf9\u8c61\u6709\u76f8\u540c\u7684 GroupID\uff09 <code>control_by_object</code> <code>repeated string</code> \u8be5\u7269\u4f53\u88ab\u54ea\u4e9b\u5bf9\u8c61\u63a7\u5236\uff08\u548c\u5176\u4ed6\u5bf9\u8c61\u6709\u76f8\u540c\u7684 GroupID\uff09 <code>attach_to_object</code> <code>string</code> \u9644\u7740\u5728\u5176\u4ed6\u5bf9\u8c61\u4e0a\u65f6\uff0c\u5176\u4ed6\u5bf9\u8c61 ID <code>owns</code> <code>string</code> OwnsTo\u5bf9\u8c61 ID <code>liquid_type</code> <code>string</code> \u6db2\u4f53\u7c7b\u578b <code>color</code> <code>string</code> \u989c\u8272\u63cf\u8ff0 <code>shape</code> <code>string</code> \u5f62\u72b6\u63cf\u8ff0 <code>lookslike</code> <code>string</code> \u89c6\u89c9\u8fd1\u4f3c\u63cf\u8ff0 <code>wearing</code> <code>repeated string</code> \u5f53\u524d\u667a\u80fd\u4f53\u7a7f\u6234\u4e86\u54ea\u4e9b\u7269\u4f53 <code>wearingby</code> <code>string</code> \u5f53\u524d\u7269\u4f53\u88ab\u8c01\u7a7f\u6234 <code>luminance</code> <code>float</code> \u4eae\u5ea6\uff080~1\u6216\u5176\u4ed6\u8303\u56f4\uff09 <code>interaction_location_list</code> <code>map&lt;string, Vector3&gt;</code> \u652f\u6301\u4ea4\u4e92\u7684\u4f4d\u7f6e\u5750\u6807\uff08key\u4e3a\u4ea4\u4e92\u7c7b\u578b\uff0c\u5982interact,place,stand\u7b49\uff09 <code>is_part_of</code> <code>string</code> \u5f53\u524d\u7269\u4f53\u662f\u5176\u4ed6\u7269\u4f53\u7684\u4e00\u90e8\u5206\uff0c\u8be5\u503c\u662f\u5176\u4ed6\u7269\u4f53\u7684 id <code>decrease_temperature</code> <code>float</code> \u4ea4\u4e92\u65f6\u5bfc\u81f4\u7684\u6e29\u5ea6\u53d8\u5316\u503c\uff08\u8868\u793a\u7269\u4f53\u662f\u5426\u5236\u51b7\u7b49\uff09 <code>is_beside</code> <code>string</code> \uff08\u63a8\u6d4b\u662f\u8be5\u7269\u4f53\u90bb\u8fd1\u7684\u5176\u4ed6\u5bf9\u8c61\uff1f\uff09 <code>channel</code> <code>string</code> \u7535\u89c6\u9891\u9053 <code>is_Powered</code> <code>bool</code> \u5f53\u524d\u7269\u4f53\u662f\u5426\u6709\u4f9b\u7535 <code>interaction_pose_list</code> <code>map&lt;string, Pose&gt;</code> \u652f\u6301\u4ea4\u4e92\u7684\u4f4d\u7f6eTransform\u5750\u6807\uff0c\u65cb\u8f6c\uff0c\u7f29\u653e\uff08key\u4e3a\u4ea4\u4e92\u7c7b\u578b\uff0c\u5982interact,place,stand\u7b49\uff09 <code>relation_subjects_list</code> <code>map&lt;string, Subjects&gt;</code> \u4ec5\u652f\u6301\u7535\u7ebf\u8fde\u63a5\u7684\u7269\u4f53\u5217\u8868\uff0c key \u662f<code>\"plug\"</code>\uff09 <code>check_point_list</code> <code>map&lt;string, Pose&gt;</code> seek\u4e00\u4e2a\u7269\u4f53\u7684\uff0c\u68c0\u67e5\u70b9\u5217\u8868\uff08key\u4e3a\u4ea4\u4e92\u7c7b\u578b\uff0cdefault\u548c\u5176\u4ed6\uff0cfront, back\u7b49\uff09 <code>b_lock</code> <code>bool</code> \u95e8\u548c\u62bd\u5c49\u662f\u5426\u4e0a\u9501 <code>hanging_on</code> <code>string</code> \u5f53\u524d\u60ac\u6302\u5728\u54ea\u4e2a\u5bf9\u8c61\u4e0a <code>in_container_object</code> <code>string</code> \u88ab\u5305\u542b\u7684\u5bb9\u5668\u5bf9\u8c61 ID <code>in_container_component</code> <code>string</code> \u88ab\u5305\u542b\u7684\u5bb9\u5668\u7ec4\u4ef6\u540d\u79f0 <code>in_container_door</code> <code>repeated string</code> \u88ab\u5305\u542b\u7684\u5bb9\u5668\u95e8\u540d\u79f0\u5217\u8868 <p>\u8be5\u7ec4\u4ef6\u5e7f\u6cdb\u7528\u4e8e\u4e00\u5207\u5b9e\u4f53~\u3002</p>"},{"location":"concepts/pg/#container_state","title":"<code>container_state</code>","text":"<p>\u8be5\u7ec4\u4ef6\u7528\u4e8e\u63cf\u8ff0\u5bb9\u5668\u7c7b\u5bf9\u8c61\u7684\u72b6\u6001\u4fe1\u606f\uff0c\u5305\u62ec\u7a7a\u95f4\u4f53\u79ef\u3001\u5df2\u653e\u7f6e\u7269\u4f53\u3001\u95e8\u7ec4\u4ef6\u7b49\u5185\u5bb9\u3002\u5178\u578b\u5e94\u7528\u573a\u666f\u5305\u62ec\u62bd\u5c49\u3001\u7bb1\u5b50\u3001\u51b0\u7bb1\u3002</p>"},{"location":"concepts/pg/#_13","title":"\ud83d\udcd1 \u5b57\u6bb5\u5b9a\u4e49","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>box</code> <code>AABB</code> \u5bb9\u5668\u7684\u7a7a\u95f4\u5305\u56f4\u76d2\uff08\u8f74\u5bf9\u9f50\u5305\u56f4\u76d2\uff09 <code>transform</code> <code>Transform</code> \u5bb9\u5668\u5728\u4e16\u754c\u7a7a\u95f4\u4e0b\u7684\u53d8\u6362\u4fe1\u606f\uff08\u4f4d\u7f6e+\u65cb\u8f6c+\u7f29\u653e\uff09 <code>residue_volume</code> <code>float</code> \u6682\u672a\u5b9e\u73b0 <code>place_objects</code> <code>repeated string</code> \u5f53\u524d\u653e\u7f6e\u5728\u5bb9\u5668\u4e2d\u7684\u5bf9\u8c61\u540d\u79f0/ID <code>door_components</code> <code>repeated string</code> \u8be5\u5bb9\u5668\u6240\u5305\u542b\u7684\u95e8\u7ec4\u4ef6 <p><code>place_objects</code> \u548c <code>door_components</code> \u662f\u903b\u8f91\u5efa\u6a21\u7684\u5173\u952e\uff0c\u652f\u6301\u52a8\u6001\u589e\u5220\u7269\u4f53\u4e0e\u95e8\u90e8\u4ef6\u72b6\u6001\u540c\u6b65\u3002</p>"},{"location":"concepts/pg/#door_state","title":"<code>door_state</code>","text":"<p>\u8be5\u7ec4\u4ef6\u7528\u4e8e\u63cf\u8ff0\u95e8\u7c7b\u7ec4\u4ef6\u7684\u72b6\u6001\uff0c\u5305\u62ec\u5176\u5f53\u524d\u5f00\u5173\u72b6\u6001\u3001\u901a\u884c\u6027\u3001\u6700\u5927\u5f00\u5408\u89d2\u5ea6/\u8ddd\u79bb\u3001\u7c7b\u578b\u4ee5\u53ca\u9644\u52a0\u4fe1\u606f\u3002</p>"},{"location":"concepts/pg/#_14","title":"\ud83d\udcd1 \u5b57\u6bb5\u5b9a\u4e49","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>door_name</code> <code>string</code> \u95e8\u7684\u540d\u79f0\u6807\u8bc6\uff08\u901a\u5e38\u4e3a\u7ec4\u4ef6\u540d\u6216\u552f\u4e00\u6807\u8bc6\u7b26\uff09 <code>b_impassable_door</code> <code>bool</code> \u8be5\u95e8\u662f\u5426\u4e3a\u4e0d\u53ef\u901a\u884c\u95e8\uff08\u51b0\u7bb1\u67dc\u5b50\u7b49\u5747\u4e3a\u4e0d\u53ef\u901a\u884c\uff09 <code>transform</code> <code>Transform</code> \u95e8\u7684\u4e16\u754c\u7a7a\u95f4\u53d8\u6362\uff08\u4f4d\u7f6e + \u65cb\u8f6c + \u7f29\u653e\uff09 <code>max_open_angular_or_distance</code> <code>float</code> \u95e8\u7684\u6700\u5927\u5f00\u542f\u89d2\u5ea6\uff08\u65cb\u8f6c\u95e8\uff09\u6216\u79fb\u52a8\u8ddd\u79bb\uff08\u6ed1\u52a8\u95e8\uff09 <code>open_angular_or_distance</code> <code>float</code> \u5f53\u524d\u95e8\u7684\u5f00\u5408\u89d2\u5ea6/\u8ddd\u79bb <code>b_closed</code> <code>bool</code> \u95e8\u662f\u5426\u5173\u95ed\uff08\u5f53\u89d2\u5ea6\u6216\u8ddd\u79bb\u6bd4\u4f8b\u5927\u4e8e\u767e\u5206\u4e4b\u516d\u5341\u89c6\u4e3a\u6253\u5f00\uff09 <code>door_type</code> <code>enum DoorType</code> \u95e8\u7684\u7c7b\u578b(\u65cb\u8f6c\u95e8\u6216\u6ed1\u52a8\u95e8) <code>impassable_door_additional_info</code> <code>ImpassableDoorAdditionalInfo</code> \u4e0d\u53ef\u901a\u884c\u95e8\u7684\u9644\u52a0\u4fe1\u606f\uff08\u4e0e oneof \u8054\u5408\u4f7f\u7528\uff09 <code>passable_door_additional_info</code> <code>PassableDoorAdditionalInfo</code> \u53ef\u901a\u884c\u95e8\u7684\u9644\u52a0\u4fe1\u606f\uff08\u4e0e oneof \u8054\u5408\u4f7f\u7528\uff09"},{"location":"concepts/pg/#xr_info","title":"<code>xr_info</code>","text":"<p>\u8be5\u7ec4\u4ef6\u7528\u4e8e\u63cf\u8ff0 NPC \u5728\u865a\u62df\u73b0\u5b9e\uff08VR\uff09\u6216\u52a8\u4f5c\u6355\u6349\uff08MoCap\uff09\u573a\u666f\u4e0b\u7684 \u8f93\u5165\u72b6\u6001\u3001\u59ff\u6001\u6570\u636e\u548c\u4ea4\u4e92\u72b6\u6001\u3002</p>"},{"location":"concepts/pg/#_15","title":"\ud83d\udcd1 \u5b57\u6bb5\u5b9a\u4e49","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>vr_info</code> <code>VRInfo</code> \u5f53\u5904\u4e8e VR \u6a21\u5f0f\u65f6\uff0c\u5305\u542b\u5de6\u53f3\u624b\u7684\u4e16\u754c\u5750\u6807\u59ff\u6001 <code>motion_capture_info</code> <code>MoCapInfo</code> \u5f53\u5904\u4e8e\u52a8\u4f5c\u6355\u6349\u6a21\u5f0f\u65f6\uff0c\u5305\u542b\u9aa8\u9abc\u52a8\u753b\u6570\u636e\u4e0e\u89d2\u8272\u6a21\u578b\u7c7b\u578b <code>camera_pose</code> <code>Pose</code> NPC \u7b2c\u4e00\u89c6\u89d2\u6444\u50cf\u673a\u7684\u4e16\u754c\u5750\u6807\u59ff\u6001 <code>object_in_hand</code> <code>ObjectInHand</code> \u5f53\u524d\u5de6\u53f3\u624b\u6216\u53cc\u624b\u6301\u6709\u7684\u5bf9\u8c61\uff08\u4e0e <code>object_in_hand</code> \u7ec4\u4ef6\u7ed3\u6784\u4e00\u81f4\uff09 <code>is_lefthand_pointing</code> <code>bool</code> \u5de6\u624b\u662f\u5426\u6b63\u5728\u6307\u5411\u67d0\u7269 <code>is_righthand_pointing</code> <code>bool</code> \u53f3\u624b\u662f\u5426\u6b63\u5728\u6307\u5411\u67d0\u7269 <code>camera_param</code> <code>CamParam</code> \u6444\u50cf\u673a\u53c2\u6570\uff08\u5206\u8fa8\u7387\u3001FOV \u7b49\uff09 <code>action_mock_event_index</code> <code>int32</code> \u5f53\u524d\u6a21\u62df\u7684\u52a8\u4f5c\u4e8b\u4ef6\u7d22\u5f15\uff0c\u901a\u5e38\u7528\u4e8e\u6570\u636e\u6807\u6ce8\u4e0e\u8c03\u8bd5"},{"location":"concepts/pg/#xr","title":"\ud83c\udfad XR \u6a21\u5f0f\u5b50\u7ed3\u6784","text":""},{"location":"concepts/pg/#vrinfo","title":"<code>VRInfo</code>","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>left_hand_pose</code> <code>Pose</code> \u5de6\u624b\u7684\u4e16\u754c\u5750\u6807\u59ff\u6001 <code>right_hand_pose</code> <code>Pose</code> \u53f3\u624b\u7684\u4e16\u754c\u5750\u6807\u59ff\u6001"},{"location":"concepts/pg/#mocapinfo","title":"<code>MoCapInfo</code>","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>mocap_character_type</code> <code>enum EMoCapCharacterType</code> \u5f53\u524d\u4f7f\u7528\u7684\u52a8\u4f5c\u6355\u6349\u89d2\u8272\u7c7b\u578b <code>bones_data</code> <code>repeated Bone</code> \u6240\u6709\u9aa8\u9abc\u7684\u52a8\u753b\u6570\u636e\uff08\u542b\u4f4d\u59ff\uff09"},{"location":"concepts/pg/#emocapcharactertype","title":"<code>EMoCapCharacterType</code> \u679a\u4e3e\u503c\u5305\u62ec\uff1a","text":"<ul> <li><code>UE4_DEFAULT</code>\uff1a\u9ed8\u8ba4\u865a\u5e7b\u5f15\u64ce\u6a21\u578b</li> <li><code>TSHIRT_MOM</code>\uff1aT\u6064\u5988\u5988</li> <li><code>SMALL_EYE_BOY</code>\uff1a\u5c0f\u773c\u7537\u5b69</li> <li><code>TSHIRT_DAD</code>\uff1aT\u6064\u7238\u7238</li> <li><code>HOODIE_MOM</code>\uff1a\u536b\u8863\u5988\u5988</li> <li><code>KINDERGARTEN_TEACHER</code>\uff1a\u5e7c\u513f\u56ed\u8001\u5e08</li> </ul> <p>\u8be5\u7ec4\u4ef6\u7528\u4e8e VR\u3001\u5168\u8eab\u52a8\u4f5c\u6355\u6349 NPC\u3002</p>"},{"location":"concepts/pg/#common_attribute","title":"<code>common_attribute</code>","text":"<p>\u8be5\u7ec4\u4ef6\u7528\u4e8e\u63cf\u8ff0\u7269\u4f53\u6216\u89d2\u8272\u7684\u901a\u7528\u5c5e\u6027\u3002</p>"},{"location":"concepts/pg/#_16","title":"\ud83d\udcd1 \u5b57\u6bb5\u5b9a\u4e49","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>sleepy</code> <code>float</code> \u4f7f\u7528\u6b64\u7269\u4f53\uff0c\u964d\u4f4e\u75b2\u5026\u7a0b\u5ea6\u3002\u4e0echaracter attribute \u91cd\u5408\u3002\u8303\u56f4\uff080\uff0c1\uff09\uff0c\u8d8a\u9ad8\u8868\u73b0\u53ef\u964d\u4f4e\u56f0\u5ea6\u8d8a\u5927 <code>boredom</code> <code>float</code> \u4f7f\u7528\u6b64\u7269\u4f53\uff0c\u964d\u4f4e\u65e0\u804a\u7a0b\u5ea6\u3002\u4e0echaracter attribute \u91cd\u5408\u3002\u8303\u56f4\uff080\uff0c1\uff09\uff0c\u8d8a\u9ad8\u8868\u73b0\u53ef\u964d\u4f4e\u65e0\u804a\u5ea6\u8d8a\u5927 <code>asset</code> <code>float</code> \u6b64\u7269\u4f53\u4ef7\u503c\u5c5e\u6027\u3002\u8303\u56f4\uff080\uff0c1\uff09\uff0c\u8d8a\u9ad8\u8868\u73b0\u4ef7\u503c\u5c5e\u6027\u8d8a\u9ad8 <code>common_struct</code> <code>CommonStruct</code> \u5e38\u89c4\u7269\u7406/\u5904\u7406\u5c5e\u6027\uff08\u89c1\u4e0b\u65b9\uff09 <code>relation_struct</code> <code>RelationStruct</code> \u4e0e\u5176\u4ed6\u5bf9\u8c61\u7684\u6765\u6e90\u5173\u7cfb\uff08\u89c1\u4e0b\u65b9\uff09"},{"location":"concepts/pg/#commonstruct","title":"\ud83e\uddf1 <code>CommonStruct</code>","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>mass</code> <code>float</code> \u7269\u4f53\u7684\u8d28\u91cf <code>cutnumber</code> <code>float</code> \u88ab\u5207\u5206\u6210\u7684\u4efd\u6570\uff08\u5982\u86cb\u7cd5\uff09 <code>welldone</code> <code>bool</code> \u662f\u5426\u5df2\u5b8c\u6210\u5904\u7406\uff08\u5982\u716e\u719f\uff09"},{"location":"concepts/pg/#relationstruct","title":"\ud83d\udd17 <code>RelationStruct</code>","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>sourcefrom</code> <code>string</code> \u6b64\u7269\u4f53\u6765\u6e90\u4e8e\u54ea\u4e2a\u7236\u7269\u4f53\uff0c\u5982\u5207\u9762\u5305\uff0c\u9762\u5305\u7247\u6765\u6e90\u4e8e\u5927\u9762\u5305"},{"location":"concepts/pg/#camera_param","title":"<code>camera_param</code>","text":"<p>\u8be5\u7ec4\u4ef6\u7528\u4e8e\u63cf\u8ff0\u76f8\u673a\u7684\u6838\u5fc3\u53c2\u6570\u3002</p>"},{"location":"concepts/pg/#_17","title":"\ud83d\udcd1 \u5b57\u6bb5\u5b9a\u4e49","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>fov</code> <code>float</code> \u76f8\u673a\u89c6\u91ce\u89d2\u5ea6\uff08Field of View\uff0c\u5355\u4f4d\u4e3a\u5ea6\uff09 <code>width</code> <code>float</code> \u76f8\u673a\u8f93\u51fa\u56fe\u50cf\u5bbd\u5ea6\uff08\u50cf\u7d20\uff09 <code>height</code> <code>float</code> \u76f8\u673a\u8f93\u51fa\u56fe\u50cf\u9ad8\u5ea6\uff08\u50cf\u7d20\uff09 <code>luminance</code> <code>float</code> \u5f53\u524d\u89c6\u573a\u4eae\u5ea6\u503c\uff08\u5f71\u54cd\u66dd\u5149\u6a21\u62df\uff09"},{"location":"concepts/pg/#character_attribute","title":"<code>character_attribute</code>","text":"<p>\u8be5\u7ec4\u4ef6\u7528\u4e8e\u63cf\u8ff0\u89d2\u8272\u5f53\u524d\u7684\u751f\u7406\u4e0e\u73af\u5883\u611f\u77e5\u72b6\u6001\uff0c\u5982\u75b2\u5026\u7a0b\u5ea6\u3001\u60c5\u7eea\u72b6\u6001\u3001\u4f53\u6e29\u4e0e\u73af\u5883\u5149\u7167\u7b49\u3002</p>"},{"location":"concepts/pg/#_18","title":"\ud83d\udcd1 \u5b57\u6bb5\u5b9a\u4e49","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>sleepy</code> <code>float</code> \u75b2\u5026\u503c <code>boredom</code> <code>float</code> \u65e0\u804a\u7a0b\u5ea6 <code>temperature</code> <code>float</code> \u5f53\u524d\u89d2\u8272\u4f53\u6e29\uff08\u5355\u4f4d\u4e3a\u6444\u6c0f\u5ea6\uff09 <code>luminance</code> <code>float</code> \u5f53\u524d\u73af\u5883\u611f\u77e5\u5230\u7684\u5149\u7167\u5f3a\u5ea6"},{"location":"concepts/pg/#taking_component","title":"<code>taking_component</code>","text":"<p>\u8be5\u7ec4\u4ef6\u8868\u793a\u624b\u90e8\u6293\u53d6\u7269\u4f53\u4fe1\u606f</p>"},{"location":"concepts/pg/#_19","title":"\ud83d\udcd1 \u5b57\u6bb5\u5b9a\u4e49","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>take_object</code> <code>string</code> \u5f53\u524d\u6b63\u5728\u62ff\u53d6\u7684\u76ee\u6807\u5bf9\u8c61\u540d\u79f0\u6216\u552f\u4e00\u6807\u8bc6\u7b26"},{"location":"concepts/pg/#television","title":"<code>television</code>","text":"<p>\u8be5\u7ec4\u4ef6\u7528\u4e8e\u63cf\u8ff0\u591a\u5a92\u4f53\u8bbe\u5907\uff08\u5982\u7535\u89c6\u673a\u3001\u663e\u793a\u5668\uff09\u7684\u5185\u5bb9\u64ad\u653e\u72b6\u6001\u3002</p>"},{"location":"concepts/pg/#_20","title":"\ud83d\udcd1 \u5b57\u6bb5\u5b9a\u4e49","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>num_of_shows</code> <code>int32</code> \u5f53\u524d\u64ad\u653e\u4e2d\u7684\u8282\u76ee\u6570\u91cf\uff08\u9891\u9053\u6570\uff09 <code>description</code> <code>string</code> \u5f53\u524d\u64ad\u653e\u5185\u5bb9\u7684\u7b80\u8981\u63cf\u8ff0\uff08\u53ef\u7528\u4e8e\u8bed\u4e49\u63a8\u7406\uff09"},{"location":"concepts/pg/#acoustic","title":"<code>acoustic</code>","text":"<p>\u8be5\u7ec4\u4ef6\u7528\u4e8e\u8868\u793a\u5bf9\u8c61\u6240\u643a\u5e26\u6216\u6b63\u5728\u64ad\u653e\u7684\u97f3\u9891\u4fe1\u606f\u3002</p>"},{"location":"concepts/pg/#_21","title":"\ud83d\udcd1 \u5b57\u6bb5\u5b9a\u4e49","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>chunk</code> <code>ChunkData</code> \u5305\u542b\u97f3\u9891\u5185\u5bb9\u7684\u6570\u636e\u5757\uff08\u8be6\u89c1\u4e0b\u65b9\uff09"},{"location":"concepts/pg/#chunkdata","title":"\ud83e\uddf1 <code>ChunkData</code>","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>data</code> <code>bytes</code> \u539f\u59cb\u97f3\u9891\u6570\u636e\uff08PCM 32 \u4e8c\u8fdb\u5236\u6d41\uff09"},{"location":"concepts/pg/#animation","title":"<code>animation</code>","text":"<p>\u8be5\u7ec4\u4ef6\u7528\u4e8e\u63cf\u8ff0\u89d2\u8272\u5f53\u524d\u7684\u52a8\u753b\u8868\u73b0\u72b6\u6001\uff0c\u5305\u62ec\u9aa8\u9abc\u59ff\u6001\u3001\u6574\u4f53\u52a8\u4f5c\u7c7b\u578b\u3001\u5934\u624b\u72b6\u6001\u7b49\u4fe1\u606f</p>"},{"location":"concepts/pg/#_22","title":"\ud83d\udcd1 \u5b57\u6bb5\u5b9a\u4e49","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>bone_list</code> <code>map&lt;string, Vector3&gt;</code> \u6240\u6709\u9aa8\u9abc\u8282\u70b9\u7684\u540d\u79f0\u4e0e\u5c40\u90e8\u4f4d\u7f6e\u6620\u5c04 <code>current_speed</code> <code>float</code> \u5f53\u524d\u79fb\u52a8\u7684\u901f\u5ea6 <code>full_body_type</code> <code>enum EFullBodyType</code> \u5168\u8eab\u52a8\u4f5c\u72b6\u6001\uff08\u8be6\u89c1\u4e0b\u65b9\uff09 <code>upper_body_type</code> <code>enum EUpperBodyType</code> \u4e0a\u534a\u8eab\u52a8\u4f5c\u72b6\u6001 <code>left_hand_state_type</code> <code>enum EHandStateType</code> \u5de6\u624b\u72b6\u6001 <code>right_hand_state_type</code> <code>enum EHandStateType</code> \u53f3\u624b\u72b6\u6001 <code>head_state_type</code> <code>enum EHeadStateType</code> \u5934\u90e8\u72b6\u6001"},{"location":"concepts/pg/#efullbodytype","title":"\ud83e\uddcd <code>EFullBodyType</code>\uff08\u5168\u8eab\u72b6\u6001\uff09","text":"<ul> <li><code>STANDING</code>: \u7ad9\u7acb</li> <li><code>SLEEPING</code>: \u8eba\u4e0b/\u7761\u89c9</li> <li><code>SITTING</code>: \u5750\u7740</li> <li><code>STANDON</code>: \u722c\u4e0a\u67d0\u4e2a\u7269\u4f53\u540e\u7684\u72b6\u6001</li> <li><code>WALKING</code>: \u6b63\u5728\u8d70</li> </ul>"},{"location":"concepts/pg/#eupperbodytype","title":"\ud83e\udde5 <code>EUpperBodyType</code>\uff08\u4e0a\u534a\u8eab\u72b6\u6001\uff09","text":"<ul> <li><code>BODY_IDLE</code>: \u9759\u6b62</li> <li><code>RAISE_HAND</code>: \u4e3e\u624b</li> <li><code>NOD_HEAD</code>: \u70b9\u5934</li> <li><code>SHAKE_HEAD</code>: \u6447\u5934</li> <li><code>CHAT</code>: \u8bf4\u8bdd\u4e2d</li> <li><code>ROMP_PLAY</code>: \u628a\u73a9</li> <li><code>WIPE</code>: \u64e6\u62ed</li> <li><code>EAT_OR_DRINK</code>: \u5403\u6216\u559d</li> <li><code>WAVE_HAND</code>: \u62db\u624b</li> </ul>"},{"location":"concepts/pg/#ehandstatetype","title":"\u270b <code>EHandStateType</code>\uff08\u624b\u90e8\u72b6\u6001\uff09","text":"<ul> <li><code>HAND_IDLE</code>: \u7a7a\u95f2</li> <li><code>HAND_REACHING</code>: \u4f38\u624b</li> <li><code>POINTING_AT</code>: \u6307\u5411</li> </ul>"},{"location":"concepts/pg/#eheadstatetype","title":"\ud83e\udde0 <code>EHeadStateType</code>\uff08\u5934\u90e8\u72b6\u6001\uff09","text":"<ul> <li><code>HEAD_IDLE</code>: \u9759\u6b62</li> <li><code>LOOKING_AT</code>: \u6ce8\u89c6\u67d0\u76ee\u6807</li> </ul>"},{"location":"concepts/pg/#character_movement_state","title":"<code>character_movement_state</code>","text":"<p>\u8be5\u7ec4\u4ef6\u7528\u4e8e\u8868\u793a\u89d2\u8272\u5f53\u524d\u7684\u79fb\u52a8\u72b6\u6001\uff0c\u5305\u62ec\u7ebf\u6027\u901f\u5ea6\u3001\u65cb\u8f6c\u901f\u7387\u4ee5\u53ca\u7279\u6b8a\u79fb\u52a8\u59ff\u6001\uff08\u5982\u8e72\u4f0f\uff09</p>"},{"location":"concepts/pg/#_23","title":"\ud83d\udcd1 \u5b57\u6bb5\u5b9a\u4e49","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>velocity</code> <code>Vector3</code> \u5f53\u524d\u7684\u79fb\u52a8\u901f\u5ea6\u5411\u91cf\uff08\u5355\u4f4d\u4e3a cm/s\uff09 <code>angular_yaw_velocity</code> <code>float</code> \u5f53\u524d\u7ed5 Yaw\uff08\u5782\u76f4\u8f74\uff09\u7684\u65cb\u8f6c\u901f\u5ea6\uff08\u5355\u4f4d\u4e3a \u00b0/s\uff09 <code>is_crouching</code> <code>bool</code> \u662f\u5426\u5904\u4e8e\u8e72\u4f0f\u59ff\u6001"},{"location":"concepts/pg/#emotion_state","title":"<code>emotion_state</code>","text":"<p>\u8be5\u7ec4\u4ef6\u7528\u4e8e\u8868\u8fbe\u89d2\u8272\u5f53\u524d\u7684\u60c5\u7eea\u72b6\u6001\uff0c\u91c7\u7528\u952e\u503c\u5bf9\u7ed3\u6784\u8bb0\u5f55\u591a\u79cd\u60c5\u7eea\u53ca\u5176\u5f3a\u5ea6\u3002</p>"},{"location":"concepts/pg/#_24","title":"\ud83d\udcd1 \u5b57\u6bb5\u5b9a\u4e49","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>emotion</code> <code>map&lt;string, float&gt;</code> \u5404\u79cd\u60c5\u7eea\u53ca\u5176\u5f3a\u5ea6\uff08\u53d6\u503c\u8303\u56f4\u4e3a 0~1\uff09 <p>\u652f\u6301\u7684\u952e\uff1a<code>\"happy\"</code>, <code>\"sad\"</code>, <code>\"angry\"</code>, <code>\"fear\"</code> \u3002\u503c\u8d8a\u9ad8\u8868\u793a\u8be5\u60c5\u7eea\u8d8a\u5f3a\u70c8\u3002</p>"},{"location":"concepts/pg/#view_info","title":"<code>view_info</code>","text":"<p>\u8be5\u7ec4\u4ef6\u7528\u4e8e\u63cf\u8ff0\u76f8\u673a\u89c6\u89d2\u7684\u53c2\u6570\u4e0e\u4f4d\u59ff</p>"},{"location":"concepts/pg/#_25","title":"\ud83d\udcd1 \u5b57\u6bb5\u5b9a\u4e49","text":"\u5b57\u6bb5\u540d \u7c7b\u578b \u8bf4\u660e <code>camera_pose</code> <code>Pose</code> \u5f53\u524d\u76f8\u673a\u89c6\u89d2\u7684\u4e16\u754c\u5750\u6807\u4f4d\u59ff\uff08\u4f4d\u7f6e + \u671d\u5411\uff09 <code>camera_param</code> <code>CamParam</code> \u76f8\u673a\u53c2\u6570\uff08\u89c6\u91ce\u89d2\u3001\u5206\u8fa8\u7387\u3001\u4eae\u5ea6\u7b49\uff0c\u8be6\u89c1 <code>camera_param</code> \u7ec4\u4ef6\uff09"},{"location":"concepts/pg_manager/","title":"\ud83e\udde9 PGManager\uff1a\u573a\u666f\u4fe1\u606f\u7ed3\u6784\u7684\u6838\u5fc3\u6865\u6881","text":"<p>PGManager \u662f TongSim \u4e2d\u7528\u4e8e\u7ba1\u7406\u573a\u666f\u4fe1\u606f\u7684\u5173\u952e\u6a21\u5757\u3002\u5b83\u7ef4\u62a4\u4e86\u4e00\u4e2a\u6765\u81ea Unreal \u7aef\u7684\u5b9e\u65f6\u7ed3\u6784\u5316\u6570\u636e\u6d41\u79f0\u4e3a Parsing Graph\uff08PG\uff09\uff0c\u5305\u542b\u5f53\u524d\u573a\u666f\u4e2d\u6240\u6709\u667a\u80fd\u4f53\u3001\u7269\u4f53\u53ca\u5176\u7ec4\u4ef6\u7684\u72b6\u6001\u4e0e\u7ed3\u6784\u3002</p> <p>API \u53c2\u8003</p>"},{"location":"concepts/pg_manager/#pg","title":"\u80cc\u666f\uff1a\u4e3a\u4ec0\u4e48\u9700\u8981 PG\uff1f","text":"<p>TongSim \u4e2d\u7684 Agent\u4e0e\u865a\u62df\u4e16\u754c\u4ea4\u4e92\u5bc6\u5207\u4f9d\u8d56\u4e8e\u5bf9\u73af\u5883\u72b6\u6001\u7684\u7406\u89e3\u3002\u8fd9\u79cd\u72b6\u6001\u4fe1\u606f\u6765\u81ea\u591a\u4e2a\u6765\u6e90\uff0c\u5982\u7269\u4f53\u7684\u4f4d\u7f6e\u3001\u7c7b\u578b\u3001\u80fd\u91cf\u503c\u3001\u624b\u4e2d\u7269\u4f53\u7b49\u3002\u5982\u679c\u6bcf\u6b21\u90fd\u5355\u72ec\u53d1\u9001 gRPC \u8bf7\u6c42\u83b7\u53d6\u8fd9\u4e9b\u6570\u636e\uff1a</p> <ul> <li>\u901a\u4fe1\u5f00\u9500\u5927\uff0c\u54cd\u5e94\u6162</li> <li>\u8de8\u7ec4\u4ef6\u67e5\u8be2\u7ec4\u5408\u7e41\u7410</li> <li>\u4e0d\u652f\u6301\u72b6\u6001\u7684\u6301\u7eed\u8ddf\u8e2a\u4e0e\u5bf9\u6bd4</li> </ul> <p>\u4e3a\u6b64\uff0cTongSim \u6784\u5efa\u4e86 PG \u6a21\u578b\uff0c\u901a\u8fc7\u9ad8\u9891\u6d41\u5f0f\u66f4\u65b0\uff0c\u5168\u91cf + \u589e\u91cf\u7684\u5408\u5e76\u673a\u5236\uff0c\u6784\u5efa\u51fa\u968f\u65f6\u53ef\u7528\u7684\u573a\u666f\u5feb\u7167\u3002<code>PGManager</code> \u5c31\u662f\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u7ba1\u7406\u8005\u3002</p>"},{"location":"concepts/pg_manager/#_1","title":"\u2699\ufe0f \u8bbe\u8ba1\u7406\u5ff5","text":"<ul> <li>\u63a5\u5165 Unreal \u7684 PG \u6570\u636e\u6d41\uff1a\u5c06\u5e95\u5c42 gRPC \u6570\u636e\u5408\u5e76\u4e3a\u7ed3\u6784\u6e05\u6670\u3001\u53ef\u67e5\u8be2\u7684\u7ed3\u6784\u4f53</li> <li>\u9762\u5411\u7528\u6237\u7b80\u5316\u67e5\u8be2\u63a5\u53e3\uff1a\u65e0\u9700\u624b\u52a8\u5904\u7406 component ID\u3001protobuf \u7ed3\u6784\uff0c\u53ea\u9700\u58f0\u660e component \u548c\u5b57\u6bb5\u5373\u53ef\u63d0\u53d6\u6570\u636e</li> <li>\u9002\u5e94\u5b9e\u65f6\u573a\u666f\u66f4\u65b0\uff1a\u589e\u91cf\u66f4\u65b0\u5408\u5e76\u673a\u5236\u4fdd\u8bc1\u6027\u80fd\u540c\u65f6\u517c\u5bb9\u957f\u671f\u8fd0\u884c</li> </ul>"},{"location":"concepts/pg_manager/#_2","title":"\ud83e\udded \u5178\u578b\u4f7f\u7528\u6d41\u7a0b","text":"<p>\u901a\u5e38\u8fd9\u6837\u4f7f\u7528 PGManager\uff1a</p> <ol> <li>\u4f7f\u7528 <code>start_pg_stream()</code> \u542f\u52a8\u4e0e Unreal \u7684 PG \u6570\u636e\u540c\u6b65\u6d41</li> <li>\u4f7f\u7528 <code>get_pg_metainfo_schema()</code> \u83b7\u53d6\u652f\u6301\u7684\u7ec4\u4ef6\u4e0e\u5b57\u6bb5\u3002</li> <li>\u4f7f\u7528 <code>query()</code> \u83b7\u53d6\u4f60\u6240\u5173\u5fc3\u7684\u5b57\u6bb5\u6570\u636e\uff08\u5982 pose\u3001energy\u3001\u624b\u6301\u7269\u4f53\u7b49\uff09</li> <li>\u4e5f\u53ef\u4ee5\u5728\u4efb\u610f\u65f6\u523b\u62c9\u53d6\u5b8c\u6574 PG \u6216\u5355\u4e2a subject \u7684\u72b6\u6001\u505a\u8c03\u8bd5\u6216\u5206\u6790</li> </ol> <p>\u4f60\u53ef\u4ee5\u5c06 PG \u7406\u89e3\u4e3a \"\u5f53\u524d\u573a\u666f\u7684 Ground Truth \u7f13\u5b58\"\uff0c\u5b83\u5b9e\u65f6\u66f4\u65b0\uff0c\u9002\u5408\u7528\u4e8e\uff1a</p> <ul> <li>\u667a\u80fd\u4f53\u4efb\u52a1\u89c4\u5212\u4e0e\u73af\u5883\u7406\u89e3</li> <li>\u5206\u6790\u67d0\u7c7b\u7269\u4f53\u7684\u5206\u5e03\u4e0e\u5c5e\u6027</li> <li>\u57fa\u4e8e\u52a8\u753b\u72b6\u6001\u3001\u89d2\u8272\u59ff\u6001\u505a\u884c\u4e3a\u63a8\u7406</li> </ul>"},{"location":"concepts/pg_manager/#_3","title":"\ud83d\udcd8 \u8865\u5145\u8bf4\u660e","text":"<p>\u6bcf\u6b21\u5207\u6362\u5173\u5361\uff08open_level\uff09\u540e\uff0c\u9700\u91cd\u65b0\u8c03\u7528 start_pg_stream() \u5f00\u542f\u6570\u636e\u6d41</p> <p>\u5177\u4f53\u7528\u6cd5\u53ef\u53c2\u8003: TODO</p>"},{"location":"dev_guide/cli/","title":"\ud83d\udccb \u5e38\u7528\u547d\u4ee4\u884c\u6307\u4ee4","text":"<p>\u672c\u9875\u9762\u6c47\u603b\u4e86 TongSim \u9879\u76ee\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u5e38\u7528\u7684\u547d\u4ee4\u884c\u6307\u4ee4\uff0c\u6db5\u76d6\u4f9d\u8d56\u5b89\u88c5\u3001\u4ee3\u7801\u68c0\u67e5\u3001\u6d4b\u8bd5\u3001\u6587\u6863\u6784\u5efa\u7b49\u573a\u666f\u3002\u5efa\u8bae\u914d\u5408 <code>uv</code> \u5de5\u5177\u4f7f\u7528\uff0c\u53ef\u63d0\u5347\u8fd0\u884c\u6548\u7387\u548c\u4f9d\u8d56\u4e00\u81f4\u6027\u3002</p>"},{"location":"dev_guide/cli/#uv","title":"\u26a1 <code>uv</code> \u5e38\u7528\u547d\u4ee4","text":"<p><code>uv</code> \u662f\u672c\u9879\u76ee\u7684\u7edf\u4e00\u4f9d\u8d56\u7ba1\u7406\u4e0e\u6267\u884c\u5de5\u5177\uff0c\u7528\u4e8e\u66ff\u4ee3 <code>pip</code>\u3001<code>poetry</code>\u3001<code>pipenv</code> \u7b49\u4f20\u7edf\u5de5\u5177\u7ec4\u5408\u3002</p> <pre><code>uv sync                 # \u5b89\u88c5\u9ed8\u8ba4\u4f9d\u8d56\uff08\u9ed8\u8ba4\u7ec4\uff09\nuv sync --all-groups   # \u5b89\u88c5\u6240\u6709\u4f9d\u8d56\uff08\u5305\u62ec dev/test/docsd \u7b49\uff09\nuv sync --group docs   # \u4ec5\u5b89\u88c5\u6587\u6863\u5f00\u53d1\u6240\u9700\u4f9d\u8d56\n</code></pre> <pre><code>uv run ./examples/xxx.py       # \u6267\u884c Python \u811a\u672c\n</code></pre>"},{"location":"dev_guide/cli/#_1","title":"\u2699\ufe0f \u4f9d\u8d56\u9879\u7ba1\u7406","text":"<pre><code>uv add numpy                            # \u5c06 `numpy` \u6dfb\u52a0\u5230\u9ed8\u8ba4\u5206\u7ec4\nuv add mkdocs --group docs              # \u5c06 `mkdocs` \u6dfb\u52a0\u5230 docs \u5206\u7ec4\n\nuv remove numpy                         # \u79fb\u9664 `numpy` \u5305\n\nuv add tongsim-api-protocol --upgrade-package tongsim-api-protocol     # \u5347\u7ea7 `tongsim-api-protocol` \u5305\n</code></pre> <p>\u4f9d\u8d56\u5206\u7ec4\u5efa\u8bae</p> <p>\u6ce8\u610f\u4f7f\u7528 <code>--group</code> \u660e\u786e\u6307\u5b9a\u4f9d\u8d56\u7528\u9014\uff0c\u4f8b\u5982:</p> <ul> <li><code>docs</code>: \u6587\u6863\u76f8\u5173\u4f9d\u8d56\uff08\u5982 <code>mkdocs</code>, <code>material</code>\uff09</li> <li><code>test</code>: \u6d4b\u8bd5\u76f8\u5173\u4f9d\u8d56\uff08\u5982 <code>pytest</code>, <code>coverage</code>\uff09</li> <li><code>dev</code>: \u5f00\u53d1\u8f85\u52a9\u5de5\u5177\uff08\u5982 <code>ruff</code>, <code>pre-commit</code>\uff09</li> </ul> <p>\u8fd9\u6837\u53ef\u4ee5\u5728\u534f\u4f5c\u5f00\u53d1\u4e2d\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u4f9d\u8d56\u5197\u4f59\u3002</p>"},{"location":"dev_guide/cli/#_2","title":"\ud83d\udd12 \u9501\u5b9a\u4f9d\u8d56\u7248\u672c\uff08\u624b\u52a8\uff09","text":"<p>\u5982\u9700\u66f4\u65b0 <code>uv.lock</code> \u6587\u4ef6\uff0c\u53ef\u624b\u52a8\u6267\u884c:</p> <pre><code>uv lock\n</code></pre>"},{"location":"dev_guide/cli/#pytest","title":"\ud83e\uddea \u6d4b\u8bd5\u547d\u4ee4\uff08<code>pytest</code>\uff09","text":"<pre><code>uv run pytest -s --grpc-ip=127.0.0.1\n</code></pre> <p>\u5e38\u7528\u53c2\u6570:</p> <pre><code>uv run pytest -s             # \u5141\u8bb8\u6807\u51c6\u8f93\u51fa\u76f4\u63a5\u663e\u793a\u5728\u63a7\u5236\u53f0\u4e2d\nuv run pytest -k keyword     # \u8fd0\u884c\u5339\u914d\u6307\u5b9a\u5173\u952e\u5b57\u7684\u6d4b\u8bd5\nuv run pytest --maxfail=3    # \u6700\u591a\u5931\u8d25 3 \u4e2a\u540e\u505c\u6b62\n</code></pre>"},{"location":"dev_guide/cli/#pre-commit","title":"\u2705 \u4ee3\u7801\u8d28\u91cf\u68c0\u67e5\uff08<code>pre-commit</code>\uff09","text":"<pre><code>uv run pre-commit install      # \u5b89\u88c5\u63d0\u4ea4\u94a9\u5b50\uff08\u9996\u6b21\u8bbe\u7f6e\uff09\nuv run pre-commit run --all-files  # \u624b\u52a8\u6267\u884c\u5168\u90e8\u68c0\u67e5\u5668\n</code></pre> <p><code>pre-commit</code> \u4e2d\u5df2\u96c6\u6210:</p> <ul> <li>\u7a7a\u683c\u3001\u7a7a\u884c\u3001\u5408\u5e76\u51b2\u7a81\u68c0\u6d4b</li> <li>JSON/YAML/TOML \u914d\u7f6e\u8bed\u6cd5\u6821\u9a8c</li> <li><code>ruff</code> \u68c0\u67e5\u4e0e\u683c\u5f0f\u5316</li> <li><code>uv-sync</code> \u68c0\u67e5\u4f9d\u8d56\u9501\u4e00\u81f4\u6027</li> </ul>"},{"location":"dev_guide/cli/#_3","title":"\ud83e\uddf9 \u4ee3\u7801\u98ce\u683c\u68c0\u67e5\u4e0e\u683c\u5f0f\u5316","text":""},{"location":"dev_guide/cli/#ruff","title":"\u4f7f\u7528 <code>ruff</code>","text":"<pre><code>uv run ruff check .                    # \u6267\u884c\u9759\u6001\u4ee3\u7801\u68c0\u67e5\nuv run ruff check --fix                # \u81ea\u52a8\u4fee\u590d\u90e8\u5206\u9519\u8bef\nuv run ruff check --select I --fix     # \u4fee\u590d import \u987a\u5e8f\nuv run ruff format                     # \u683c\u5f0f\u5316\u6574\u4e2a\u9879\u76ee\n</code></pre>"},{"location":"dev_guide/cli/#black","title":"\u4f7f\u7528 <code>black</code>\uff08\u5982\u9700\uff09","text":"<p>\u672c\u9879\u76ee\u9ed8\u8ba4\u4f7f\u7528 <code>ruff format</code>\uff0c\u4f46\u517c\u5bb9 <code>black</code></p> <pre><code>uv run black .\n</code></pre>"},{"location":"dev_guide/cli/#mkdocs","title":"\ud83d\udcda \u6587\u6863\u6784\u5efa\uff08<code>mkdocs</code>\uff09","text":"<pre><code>uv run mkdocs serve             # \u542f\u52a8\u672c\u5730\u6587\u6863\u5f00\u53d1\u670d\u52a1\nuv run mkdocs serve -a 0.0.0.0:8001  # \u6307\u5b9a\u7aef\u53e3\u548c\u76d1\u542c\u5730\u5740\nuv run mkdocs build             # \u6784\u5efa\u9759\u6001\u6587\u6863\uff08\u8f93\u51fa\u5230 public/\uff09\n</code></pre> <p>\u6587\u6863\u5165\u53e3\u914d\u7f6e\u5728 <code>mkdocs.yml</code>\uff0c\u5185\u5bb9\u4f4d\u4e8e <code>docs/</code> \u76ee\u5f55\u3002</p>"},{"location":"dev_guide/cli/#uv_1","title":"\ud83d\ude80 \u6253\u5305\u4e0e\u53d1\u5e03\uff08<code>uv</code> \u6784\u5efa\uff09","text":"<pre><code>uv build\nuv publish --publish-url https://nexus.mybigai.ac.cn/repository/pypi-host\n</code></pre> <ul> <li><code>uv build</code> \u4f1a\u751f\u6210 <code>.whl</code> \u548c <code>.tar.gz</code> \u5305\u81f3 <code>dist/</code> \u76ee\u5f55</li> <li><code>uv publish</code> \u7528\u4e8e\u4e0a\u4f20\u5305\u5230\u79c1\u6709\u955c\u50cf\uff08BIGAI Nexus PyPI\uff09</li> </ul>"},{"location":"dev_guide/setup/","title":"\ud83d\udcbb \u5f00\u53d1\u73af\u5883","text":""},{"location":"dev_guide/setup/#python","title":"\ud83d\udc0d Python \u5f00\u53d1\u73af\u5883","text":"<p>\u672c\u9879\u76ee\u4f7f\u7528 uv \u8fdb\u884c\u4f9d\u8d56\u7ba1\u7406\u4e0e\u8fd0\u884c\u5de5\u5177\uff0c\u66ff\u4ee3 <code>pip + venv</code> \u7b49\u4f20\u7edf\u65b9\u6848\u3002</p> <p>\u5efa\u8bae\u4f60\u67e5\u9605\u5b98\u65b9\u6587\u6863\u719f\u6089 <code>uv</code> \u7684\u57fa\u672c\u4f7f\u7528\u65b9\u5f0f\uff0c\u6216\u53c2\u8003\u6211\u4eec\u51c6\u5907\u7684\u9879\u76ee\u5e38\u7528\u547d\u4ee4\u3002</p>"},{"location":"dev_guide/setup/#_1","title":"\u521d\u59cb\u5316\u9879\u76ee\u4f9d\u8d56","text":"<p>\u5b89\u88c5uv\u540e\uff0c\u8bf7\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u8fd0\u884c:</p> <pre><code>uv sync --all-groups                # \u8be5\u547d\u4ee4\u4f1a\u5b89\u88c5\u6240\u6709\u5206\u7ec4\u7684\u4f9d\u8d56\uff0c\u5305\u62ec\u5f00\u53d1\u3001\u6d4b\u8bd5\u3001\u6587\u6863\u7b49\u3002\nuv run pre-commit install           # \u6ce8\u518c pre-commit\n</code></pre>"},{"location":"dev_guide/setup/#git","title":"\ud83e\uddea Git \u5206\u652f","text":"<p>\u672c\u9879\u76ee\u91c7\u7528\u4e3b\u6d41\u7684 \u5206\u652f\u534f\u4f5c\u6a21\u578b\uff0c\u7ed3\u5408\u5f00\u6e90\u793e\u533a\u5b9e\u8df5\u4e0e\u5185\u90e8\u5f00\u53d1\u6d41\u7a0b\uff0c\u786e\u4fdd\u4ee3\u7801\u8d28\u91cf\u3001\u534f\u4f5c\u6548\u7387\u4e0e\u7248\u672c\u53d1\u5e03\u7684\u6709\u5e8f\u6027\u3002</p>"},{"location":"dev_guide/setup/#_2","title":"\u4e3b\u5e72\u5206\u652f\uff08\u6c38\u4e45\u5b58\u5728\uff09","text":"\u5206\u652f\u540d \u8bf4\u660e <code>main</code> \u751f\u4ea7\u4e3b\u5206\u652f\uff0c\u7528\u4e8e\u53d1\u5e03\u7a33\u5b9a\u7248\u672c\u3002\u9002\u914d CI \u81ea\u52a8\u53d1\u5e03\u6d41\u7a0b\u3002\u4e3a\u4fdd\u62a4\u4e3b\u5e72\u8d28\u91cf\uff0c\u8bf7\u52ff\u5728 <code>main</code> \u4e0a\u76f4\u63a5\u5f00\u53d1\u3002 <code>dev</code> \u5f00\u53d1\u4e3b\u5206\u652f\uff0c\u7528\u4e8e\u5408\u5e76\u65e5\u5e38\u529f\u80fd\u3001\u6587\u6863\u4e0e\u6d4b\u8bd5\u5f00\u53d1\u5206\u652f\uff0c\u7ecf\u8fc7\u9a8c\u8bc1\u540e\u518d\u5408\u5e76\u5230 <code>main</code>"},{"location":"dev_guide/setup/#_3","title":"\u529f\u80fd\u5206\u652f\uff08\u4e34\u65f6\u5206\u652f\uff09","text":"\u5206\u652f\u540d\u89c4\u5219 \u8bf4\u660e <code>feat/xxx-xxx</code> \u2728 \u529f\u80fd\u5f00\u53d1\u5206\u652f\uff0c\u6765\u6e90\u4e8e <code>dev</code>\uff0c\u63d0\u4ea4\u529f\u80fd\u5f00\u53d1\u76f8\u5173\u5185\u5bb9 <code>doc/xxx-xxx</code> \ud83d\udcdd \u6587\u6863\u7f16\u8f91\u5206\u652f\uff0c\u6765\u6e90\u4e8e <code>dev</code>\uff0c\u7528\u4e8e\u8865\u5145\u6216\u4fee\u590d\u6587\u6863\u5185\u5bb9 <code>fix/xxx</code> \ud83d\udc1b Bug \u4fee\u590d\uff08\u901a\u5e38\u662f\u7d27\u6025\u95ee\u9898\u6216\u7528\u6237\u53cd\u9988\uff09 <code>refactor/xxx</code> \ud83e\uddf9 \u4ee3\u7801\u91cd\u6784\uff08\u91cd\u5199\u5b9e\u73b0\uff0c\u4e0d\u6539\u53d8\u5916\u90e8\u884c\u4e3a\uff09 <code>perf/xxx</code> \u26a1 \u6027\u80fd\u4f18\u5316\uff08\u63d0\u5347\u8fd0\u884c\u6548\u7387\u3001\u51cf\u5c11\u8d44\u6e90\u5360\u7528\u7b49\uff09 <code>chore/xxx</code> \ud83e\uddf0 \u6742\u9879\u7ef4\u62a4\uff08\u4f9d\u8d56\u5347\u7ea7\u3001\u914d\u7f6e\u8c03\u6574\u3001CI \u4f18\u5316\u7b49\uff09"},{"location":"dev_guide/setup/#_4","title":"\u63a8\u8350\u5f00\u53d1\u6d41\u7a0b","text":"<ol> <li>\u521b\u5efa\u529f\u80fd\u5206\u652f</li> </ol> <p>\u4ece <code>dev</code> \u5206\u652f\u62c9\u51fa\u65b0\u5206\u652f:</p> <pre><code>git switch dev\ngit pull\ngit checkout -b feat/your-feature-name\n</code></pre> <ol> <li>\u63d0\u4ea4\u4ee3\u7801 &amp; \u5408\u5e76\u8bf7\u6c42</li> </ol> <p>\u5f00\u53d1\u5b8c\u6210\u540e\u63d0\u4ea4 Merge Request\uff08MR\uff09\u5230 <code>dev</code> \u5206\u652f\uff0c\u9700\u81f3\u5c11\u4e00\u4f4d\u56e2\u961f\u6210\u5458 Review \u540e\u65b9\u53ef\u5408\u5e76\u3002</p> <p>\u2705 \u5efa\u8bae\u4f7f\u7528 <code>Squash</code> \u65b9\u5f0f\u5408\u5e76\uff0c\u4ee5\u4fdd\u6301 <code>dev</code> \u5206\u652f\u5386\u53f2\u7b80\u6d01\u3002</p>"},{"location":"dev_guide/setup/#pre-commit","title":"\ud83e\uddf9 \u4ee3\u7801\u8d28\u91cf\u68c0\u67e5\uff08Pre-commit\uff09","text":"<p>\u672c\u9879\u76ee\u4f7f\u7528 <code>pre-commit</code> \u81ea\u52a8\u5316\u5de5\u5177\uff0c\u5728\u63d0\u4ea4\u4ee3\u7801\u524d\u81ea\u52a8\u6267\u884c\u4e00\u7cfb\u5217\u4ee3\u7801\u8d28\u91cf\u68c0\u67e5\u4e0e\u683c\u5f0f\u5316\u64cd\u4f5c\uff0c\u786e\u4fdd\u63d0\u4ea4\u4ee3\u7801\u7b26\u5408\u89c4\u8303\u3001\u6e05\u6d01\u3001\u65e0\u8bed\u6cd5\u9690\u60a3\u3002</p>"},{"location":"dev_guide/setup/#git_1","title":"\u5b89\u88c5 Git \u63d0\u4ea4\u94a9\u5b50","text":"<pre><code>uv run pre-commit install\n</code></pre> <p>\u5b89\u88c5\u540e\uff0cGit \u4f1a\u5728\u6bcf\u6b21\u6267\u884c <code>git commit</code> \u524d\u81ea\u52a8\u8fd0\u884c\u4ee5\u4e0b\u68c0\u67e5\u9879:</p> <ul> <li>\u53bb\u9664\u5c3e\u90e8\u7a7a\u683c\uff08<code>trailing-whitespace</code>\uff09</li> <li>\u4fee\u590d\u7f3a\u5931\u6216\u91cd\u590d\u7684\u6587\u4ef6\u7ed3\u5c3e\u7a7a\u884c\uff08<code>end-of-file-fixer</code>\uff09</li> <li>\u68c0\u67e5\u914d\u7f6e\u6587\u4ef6\u8bed\u6cd5\uff08<code>.toml</code> / <code>.yaml</code> / <code>.json</code>\uff09</li> <li>\u68c0\u67e5\u662f\u5426\u5b58\u5728\u672a\u89e3\u51b3\u7684\u5408\u5e76\u51b2\u7a81\u6807\u8bb0\uff08<code>check-merge-conflict</code>\uff09</li> <li>\u6821\u9a8c\u4f9d\u8d56\u662f\u5426\u4e0e\u9501\u6587\u4ef6\u4e00\u81f4\uff08<code>uv-sync</code>\uff09</li> <li>\u68c0\u67e5 <code>uv.lock</code> \u6587\u4ef6\u662f\u5426\u9700\u8981\u66f4\u65b0\uff08<code>uv-lock</code>\uff09</li> <li>\u4f7f\u7528 <code>ruff</code> \u8fdb\u884c\u4ee3\u7801\u68c0\u67e5\u4e0e\u81ea\u52a8\u4fee\u590d\uff08<code>--fix</code> \u6a21\u5f0f\uff09</li> <li>\u4f7f\u7528 <code>ruff format</code> \u8fdb\u884c\u7edf\u4e00\u4ee3\u7801\u683c\u5f0f\u5316</li> </ul>"},{"location":"dev_guide/setup/#_5","title":"\u624b\u52a8\u8fd0\u884c\u6240\u6709\u68c0\u67e5","text":"<pre><code>uv run pre-commit run --all-files\n</code></pre> <p>\u8be5\u547d\u4ee4\u4f1a\u5728\u6574\u4e2a\u9879\u76ee\u8303\u56f4\u5185\u6267\u884c\u6240\u6709\u542f\u7528\u7684\u94a9\u5b50\uff0c\u5e38\u7528\u4e8e CI \u524d\u672c\u5730\u9a8c\u8bc1\u6216\u4e00\u6b21\u6027\u4fee\u590d\u9879\u76ee\u65e7\u4ee3\u7801\u3002</p> <p>VSCode \u63d2\u4ef6\u5efa\u8bae</p> <p>\u4e3a\u83b7\u5f97\u6700\u4f73\u4f53\u9a8c\uff0c\u5efa\u8bae\u5b89\u88c5\u4ee5\u4e0b\u63d2\u4ef6\u6765\u5b9e\u73b0\u4ee3\u7801\u7f16\u8f91\u9636\u6bb5\u7684\u81ea\u52a8\u68c0\u67e5\u4e0e\u4fee\u590d:</p> <ul> <li>\ud83d\udc0d Ruff \u2014 \u5b9e\u65f6 Lint \u4e0e\u81ea\u52a8\u683c\u5f0f\u5316</li> <li>\ud83c\udfa8 Black Formatter \u2014 \u8f85\u52a9\u5904\u7406\u683c\u5f0f\u5316\uff08\u5c3d\u7ba1\u672c\u9879\u76ee\u4f7f\u7528 <code>ruff format</code>\uff09</li> <li>\u26a1 Pylance \u2014 \u5feb\u901f\u3001\u7c7b\u578b\u611f\u77e5\u7684 Python \u5206\u6790\u5f15\u64ce</li> </ul> <p>\u5b89\u88c5\u540e\u8bf7\u5728 VSCode \u8bbe\u7f6e\u4e2d\u542f\u7528 <code>\"Format on Save\"</code> \u4ee5\u81ea\u52a8\u6267\u884c\u4ee3\u7801\u98ce\u683c\u4fee\u590d\u3002</p>"},{"location":"dev_guide/setup/#_6","title":"\ud83d\udcda \u6587\u6863\u5f00\u53d1","text":"<p>\u672c\u9879\u76ee\u4f7f\u7528 MkDocs \u4f5c\u4e3a\u9759\u6001\u6587\u6863\u751f\u6210\u5de5\u5177\uff0c\u914d\u5408 Material for MkDocs \u4e3b\u9898\u63d0\u4f9b\u826f\u597d\u7684\u6587\u6863\u53ef\u8bfb\u6027\u548c\u4ea4\u4e92\u4f53\u9a8c\u3002</p> <p>\u6587\u6863\u5185\u5bb9\u4f4d\u4e8e <code>docs/</code> \u76ee\u5f55\uff0c\u914d\u7f6e\u6587\u4ef6\u4e3a <code>mkdocs.yml</code>\uff0c\u652f\u6301\u591a\u8bed\u8a00\u3001\u6a21\u5757\u5316\u7ec4\u7ec7\u3001\u4ee3\u7801\u9ad8\u4eae\u3001\u6807\u7b7e\u9875\u3001\u7248\u672c\u5207\u6362\u7b49\u9ad8\u7ea7\u529f\u80fd\u3002</p>"},{"location":"dev_guide/setup/#_7","title":"\u5b89\u88c5\u6587\u6863\u76f8\u5173\u4f9d\u8d56","text":"<p>\u8bf7\u5148\u786e\u4fdd\u5df2\u7ecf\u5b89\u88c5\u9879\u76ee\u7684 <code>docs</code> \u5206\u7ec4\u4f9d\u8d56:</p> <pre><code>uv sync --group docs\n</code></pre>"},{"location":"dev_guide/setup/#_8","title":"\u542f\u52a8\u672c\u5730\u6587\u6863\u5f00\u53d1\u670d\u52a1\u5668","text":"<p>\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5728\u672c\u5730\u542f\u52a8\u5f00\u53d1\u670d\u52a1\u5668\uff0c\u652f\u6301\u70ed\u66f4\u65b0:</p> <pre><code>uv run mkdocs serve\n</code></pre> <p>\u9ed8\u8ba4\u5730\u5740\u4e3a: http://127.0.0.1:8000\uff08\u53ef\u914d\u7f6e\uff09</p>"},{"location":"dev_guide/setup/#_9","title":"\u672c\u5730\u9a8c\u8bc1\u6784\u5efa\u662f\u5426\u6b63\u5e38","text":"<p>\u5728\u672c\u5730\u6784\u5efa\u9759\u6001\u7ad9\u70b9\uff0c\u786e\u8ba4\u65e0\u9519\u8bef:</p> <pre><code>uv run mkdocs build\n</code></pre> <p>\u6784\u5efa\u7ed3\u679c\u5c06\u8f93\u51fa\u5230 <code>public/</code> \u76ee\u5f55\uff08\u53ef\u914d\u7f6e\uff09\u3002</p>"},{"location":"dev_guide/setup/#_10","title":"\ud83d\ude80 \u9879\u76ee\u6253\u5305\u4e0e\u53d1\u5e03","text":"<p>\u672c\u9879\u76ee\u4f7f\u7528 <code>uv</code> \u8fdb\u884c\u6784\u5efa\u4e0e\u53d1\u5e03\u3002</p>"},{"location":"dev_guide/setup/#_11","title":"\u624b\u52a8\u53d1\u5e03\uff08\u63a8\u8350\u7528\u4e8e\u5185\u6d4b\u6216\u79c1\u6709\u90e8\u7f72\uff09","text":"<p>\u4ee5\u53d1\u5e03\u5230 BIGAI \u7684 Nexus \u79c1\u6709 PyPI \u6e90\u4e3a\u4f8b:</p> <pre><code>uv build\nuv publish --publish-url https://nexus.mybigai.ac.cn/repository/pypi-host\n</code></pre> <p>\u4e0a\u8ff0\u547d\u4ee4\u4f1a:</p> <ul> <li>\u6784\u5efa <code>dist/*.whl</code> \u5305\u548c <code>*.tar.gz</code> \u6e90\u7801\u5305</li> <li>\u4e0a\u4f20\u5230\u6307\u5b9a\u7684\u955c\u50cf\u6e90\u4e2d\uff08\u652f\u6301\u8ba4\u8bc1\uff09</li> </ul>"},{"location":"dev_guide/setup/#cicd","title":"\u81ea\u52a8\u53d1\u5e03\uff08CI/CD\uff09","text":"<p>\u81ea\u52a8\u53d1\u5e03\u6d41\u7a0b\uff0c\u5c06\u5728\u4ee5\u4e0b\u573a\u666f\u81ea\u52a8\u89e6\u53d1:</p> <ul> <li>Push \u5e26\u6709 <code>vX.Y.Z</code> Git\u6807\u7b7e\uff08\u5982 <code>v0.3.1a4</code>\uff09\u65f6</li> </ul> <p>\u53d1\u5e03\u524d\u68c0\u67e5\u5efa\u8bae</p> <ul> <li>\u8bf7\u52a1\u5fc5\u786e\u4fdd\u7248\u672c\u53f7\u5df2\u66f4\u65b0\uff01</li> <li>\u53ef\u5728\u672c\u5730\u6253\u5305\u540e\uff0c\u68c0\u67e5 <code>dist/*.whl</code> \u8fdb\u884c\u53d1\u5e03\u524d\u9a8c\u8bc1</li> </ul>"},{"location":"dev_guide/setup/#_12","title":"\ud83d\udcc2 \u9879\u76ee\u7ed3\u6784\u6982\u89c8","text":"<pre><code>TongSim-python-sdk/\n\u251c\u2500\u2500 docs/                     # MkDocs \u6587\u6863\u76ee\u5f55\n\u251c\u2500\u2500 examples/                 # \u529f\u80fd\u793a\u4f8b\u76ee\u5f55\n\u251c\u2500\u2500 src/                      # \u4e3b\u4ee3\u7801\u76ee\u5f55\n\u251c\u2500\u2500 tests/                    # \u5355\u5143\u6d4b\u8bd5\u811a\u672c\u76ee\u5f55\n\u251c\u2500\u2500 mkdocs.yml                # MkDocs \u914d\u7f6e\u6587\u4ef6\n\u251c\u2500\u2500 pyproject.toml            # \u9879\u76ee\u914d\u7f6e\u6587\u4ef6\uff08\u7531 uv \u89e3\u6790\uff09\n\u2514\u2500\u2500 README.md                 # \u9879\u76ee\u8bf4\u660e\u6587\u6863\n</code></pre>"},{"location":"dev_guide/setup/#_13","title":"\ud83d\udd17 \u53c2\u8003\u94fe\u63a5","text":"<ul> <li>uv \u5b98\u65b9\u6587\u6863</li> <li>pre-commit \u5b98\u7f51</li> <li>ruff \u6587\u6863</li> <li>MkDocs \u5b98\u7f51</li> <li>MkDocs Material \u5b98\u7f51</li> </ul>"},{"location":"dev_guide/testing/","title":"\ud83e\uddec \u5355\u5143\u6d4b\u8bd5\uff1a\u4f7f\u7528 Pytest","text":"<p>\u672c\u9879\u76ee\u4f7f\u7528 pytest \u4f5c\u4e3a\u6d4b\u8bd5\u6846\u67b6\uff0c\u914d\u5408 <code>uv</code> \u7edf\u4e00\u6267\u884c\u6d4b\u8bd5\u547d\u4ee4\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u6d4b\u8bd5\u6765\u9a8c\u8bc1\u6838\u5fc3 API \u884c\u4e3a\u3002</p>"},{"location":"dev_guide/testing/#_1","title":"\ud83d\udcdd \u7f16\u5199\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b","text":"<p>\u5728tests\u4e0b\u521b\u5efa\u4e00\u4e2a\u6d4b\u8bd5\u6587\u4ef6 <code>test_example.py</code>:</p> <pre><code># test_example.py\n\ndef add(a, b):\n    return a + b\n\ndef test_add():\n    assert add(1, 2) == 3\n</code></pre> <p>\u2705 <code>pytest</code> \u4f1a\u81ea\u52a8\u8bc6\u522b\u4ee5 <code>test_</code> \u5f00\u5934\u7684\u51fd\u6570\u4f5c\u4e3a\u6d4b\u8bd5\u7528\u4f8b\u3002</p> <p>\u5728\u7ec8\u7aef\u4e2d\u8fd0\u884c:</p> <pre><code>uv run pytest -k test_add\n</code></pre> <p>\u4f60\u5c06\u770b\u5230\u5982\u4e0b\u8f93\u51fa:</p> <pre><code>collected 1 item\n\ntest_example.py .                                           [100%]\n\n1 passed in 0.01s\n</code></pre>"},{"location":"dev_guide/testing/#conftestpy","title":"\ud83e\udde9 conftest.py \u7b80\u4ecb","text":"<p><code>tests/conftest.py</code> \u4e2d\u5b9a\u4e49\u4e86\u5168\u5c40\u5171\u4eab\u7684\u6d4b\u8bd5\u5de5\u5177\uff0c\u76ee\u524d\u5305\u62ec:</p> <ul> <li>\u2705 <code>--gprc-ip</code> : \u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u53c2\u6570\u63a7\u5236 gRPC \u6d4b\u8bd5\u8fde\u63a5\u5730\u5740</li> <li>\u2705 <code>conn_main</code>, <code>conn_alt</code>: \u57fa\u4e8e\u8fde\u63a5\u5c01\u88c5\u7684 session \u7ea7 fixture\uff0c\u53ef\u5728\u591a\u4e2a\u6d4b\u8bd5\u4e2d\u590d\u7528</li> <li>\u2705 <code>setup_logging</code>: \u521d\u59cb\u5316\u65e5\u5fd7\u7cfb\u7edf</li> </ul>"},{"location":"dev_guide/testing/#fixture","title":"\ud83d\udce6 fixture","text":"<p><code>fixture</code> \u662f pytest \u63d0\u4f9b\u7684\u4e00\u79cd\u53ef\u590d\u7528\u7684\u6d4b\u8bd5\u201c\u51c6\u5907\u51fd\u6570\u201d\u3002</p> <pre><code>import pytest\n\n@pytest.fixture\ndef sample_list():\n    return [1, 2, 3]\n\ndef test_len(sample_list):\n    assert len(sample_list) == 3\n</code></pre> <p>\u2705 \u6d4b\u8bd5\u51fd\u6570\u4e2d\u53ea\u8981\u5199\u4e0a <code>sample_list</code> \u53c2\u6570\uff0cpytest \u5c31\u4f1a\u81ea\u52a8\u8c03\u7528\u5bf9\u5e94\u7684 fixture \u5e76\u4f20\u5165\u8fd4\u56de\u503c\u3002</p>"},{"location":"dev_guide/testing/#assert","title":"\ud83e\udde0 \u7406\u89e3 assert \u65ad\u8a00","text":"<p>Python \u7684 <code>assert</code> \u662f\u6d4b\u8bd5\u4e2d\u6700\u5e38\u7528\u7684\u8bed\u53e5\u3002</p> <pre><code>assert 2 + 2 == 4     # \u2705 \u901a\u8fc7\nassert len(\"hi\") == 3 # \u274c \u5931\u8d25\uff0c\u5c06\u62a5\u9519\n</code></pre> <p>\u5931\u8d25\u65f6 <code>pytest</code> \u4f1a\u81ea\u52a8\u663e\u793a\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u5e2e\u52a9\u8c03\u8bd5\u3002</p> <ul> <li>\u2705 \u6240\u6709 <code>assert</code> \u90fd\u5e94\u5177\u5907\u660e\u786e\u7684\u5224\u65ad\u76ee\u6807</li> <li>\u2705 \u5931\u8d25\u65f6\u63d0\u4f9b\u8db3\u591f\u7684\u4fe1\u606f\uff08\u5982\u65e5\u5fd7\u3001\u5f02\u5e38\u6808\uff09</li> </ul>"},{"location":"dev_guide/testing/#_2","title":"\ud83d\udcc1 \u6d4b\u8bd5\u6587\u4ef6\u4e0e\u51fd\u6570\u547d\u540d\u89c4\u8303","text":"\u89c4\u5219 \u793a\u4f8b \u6587\u4ef6\u540d\u4ee5 <code>test_</code> \u5f00\u5934 <code>test_math.py</code> \u51fd\u6570\u540d\u4ee5 <code>test_</code> \u5f00\u5934 <code>test_add()</code> \u6d4b\u8bd5\u6587\u4ef6\u53ef\u4f4d\u4e8e\u4efb\u610f\u76ee\u5f55 \u63a8\u8350\u653e\u5728 <code>tests/</code> \u6587\u4ef6\u5939\u4e2d"},{"location":"dev_guide/testing/#_3","title":"\ud83d\udccc \u5e38\u7528\u547d\u4ee4\u901f\u67e5","text":"<pre><code>uv run pytest -s . --grpc-ip=127.0.0.1                                          # \u8fde\u63a5\u672c\u5730\u7684 TongSim Unreal \u8fd0\u884c\u6240\u6709\u6d4b\u8bd5\u811a\u672c\nuv run pytest tests/connection/test_grpc_connection.py                          # \u8fd0\u884c\u6307\u5b9a\u6587\u4ef6\nuv run pytest -k test_unary_api                                                 # \u4ec5\u8fd0\u884c\u6307\u5b9a\u51fd\u6570\uff08\u652f\u6301\u6a21\u7cca\u5339\u914d\uff09\n</code></pre> <p>\u5982\u9700\u4e86\u89e3\u66f4\u591a\u6d4b\u8bd5\u6280\u5de7\uff0c\u53ef\u53c2\u8003:</p> <ul> <li>pytest \u5b98\u65b9\u6587\u6863</li> <li>Python \u6d4b\u8bd5\u5b9e\u6218\u4e66\u7c4d\u63a8\u8350</li> </ul>"},{"location":"getting_started/overview/","title":"\ud83c\udf1f TongSim \u5b89\u88c5\u9009\u62e9\u603b\u89c8","text":"<p>\u26a0\ufe0f \u91cd\u8981\uff1a\u672c\u4ed3\u5e93\u4e3a \u6bd4\u8d5b\u4e13\u7528\u7cbe\u7b80\u7248\uff08\u8bf7\u5148\u9605\u8bfb\uff09</p> <p>TongSim\uff08\u672c\u6b21\u5f00\u6e90\uff09\u4ec5\u4f9b\u6bd4\u8d5b\u4f7f\u7528\uff0c\u529f\u80fd\u7ecf\u8fc7\u5927\u5e45\u88c1\u526a\u3002</p> <ul> <li>\u5b89\u88c5\u6bd4\u8d5b\u7248\u672c TongSim\u8bf7\u8f6c\u5230 \u6bd4\u8d5b Env \u4ed3\u5e93\u6587\u6863\uff1a<code>Env Docs</code>\u3002</li> <li>\u4e0b\u65b9\u51fa\u73b0\u7684\u5b89\u88c5\u65b9\u6cd5\u63cf\u8ff0\u7684\u662f\u9662\u5185\u5b8c\u6574\u7248\u672c TongSim\u7684\u5b89\u88c5\u903b\u8f91\uff0c\u4f9b\u53c2\u8003\uff1b\u5982\u9700\u4f53\u9a8c\u5b8c\u6574\u7248\u672c\uff0c\u8bf7\u8054\u7cfb\u5185\u90e8\u4eba\u5458\u3002</li> <li>\u672c\u6b21\u6bd4\u8d5b\u53d1\u5e03\u7248\u672c\u4e3a\u4e13\u7528\u7cbe\u7b80\u7248\u7684\u6784\u5efa\uff1a\u5927\u91cf\u4f20\u611f\u3001\u4ea4\u4e92\u3001\u8d44\u4ea7\u3001\u52a8\u4f5c\u7b49\u529f\u80fd\u672a\u5305\u542b\uff1b</li> </ul> <p>\u6b22\u8fce\u4f7f\u7528 TongSim\u3002\u5728\u5f00\u59cb\u5b89\u88c5\u524d\uff0c\u8bf7\u6839\u636e\u60a8\u7684\u7cfb\u7edf\u548c\u7528\u9014\u9009\u62e9\u5408\u9002\u7684\u5b89\u88c5\u65b9\u5f0f\uff0c\u5e76\u6ce8\u610f\u5bf9\u5e94\u7684\u7248\u672c\u5206\u652f\u9009\u62e9\u3002</p>"},{"location":"getting_started/overview/#_1","title":"\ud83d\udca1 \u5206\u652f / \u7248\u672c\u8bf4\u660e","text":"<p>\u4e3a\u4ec0\u4e48\u5b58\u5728\u591a\u4e2a\u5206\u652f\uff1f</p> <p>TongSim \u5728\u6838\u5fc3\u529f\u80fd\u4e0a\u4fdd\u6301\u4e00\u81f4\uff0c\u4f46\u4e3a\u4e86\u9002\u914d\u4e0d\u540c\u7684\u5e94\u7528\u573a\u666f\uff0c\u4f1a\u5728\u4e0d\u540c\u5206\u652f\u4f1a\u5b9a\u5236\u4e0d\u540c\u7684\u5730\u56fe\u3001\u6a21\u578b\u7b49\u8d44\u4ea7\u914d\u7f6e\u3002\u7528\u6237\u53ef\u6839\u636e\u9700\u6c42\u9009\u62e9\u5408\u9002\u7684\u5206\u652f\u5b89\u88c5\u4f7f\u7528\u3002</p>"},{"location":"getting_started/overview/#windows","title":"\ud83d\udda5\ufe0f Windows \u5ba2\u6237\u7aef\u53d1\u5e03\u7248","text":"<p>\u901a\u8fc7 SVN \u62c9\u53d6\u53ef\u8fd0\u884c\u7684\u6253\u5305\u7248\u672c\uff08\u5305\u542b EXE\u3001\u8d44\u6e90\u548c\u914d\u7f6e\u6587\u4ef6\uff09\uff0c\u9002\u5408\u76f4\u63a5\u8fd0\u884c\u4f53\u9a8c\u3002</p> <ul> <li>\u53ef\u9009\u5206\u652f\uff1a</li> <li>TongAI \u53d1\u5e03\u7248\uff1a<code>http://svn.mybigai.ac.cn:18080/svn/Demo/trunk/AIBabyUE5Client</code></li> <li> <p>TongLoop \u53d1\u5e03\u7248\uff1a<code>http://svn.mybigai.ac.cn:18080/svn/TongLoop/trunk/windows_client/</code></p> </li> <li> <p>SVN \u5730\u5740\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>svn checkout http://svn.mybigai.ac.cn:18080/svn/Demo/trunk/AIBabyUE5Client\n</code></pre>"},{"location":"getting_started/overview/#windows_1","title":"\ud83e\uddf0 Windows \u7f16\u8f91\u5668\u7248","text":"<p>\u901a\u8fc7 SVN \u62c9\u53d6 Unreal \u9879\u76ee\u8d44\u6e90\uff0c\u53ef\u5728 TongSim \u53d1\u5e03\u7684 UE \u7f16\u8f91\u5668\u4e2d\u6253\u5f00\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u84dd\u56fe\u3001\u5173\u5361\u3001\u89d2\u8272\u7b49\u3002</p> <ul> <li>\u53ef\u9009\u5206\u652f\uff1a</li> <li>TongAI \u7f16\u8f91\u5668\uff1a<code>http://svn.mybigai.ac.cn:18080/svn/TongSim/trunk</code></li> <li>TongAI \u5f15\u64ce\uff1a<code>http://svn.mybigai.ac.cn:18080/svn/Demo/trunk/TongUnrealEngine</code></li> <li>TongLoop \u7f16\u8f91\u5668\uff1a<code>http://svn.mybigai.ac.cn:18080/svn/TongLoop/trunk/project/</code></li> <li> <p>TongLoop \u5f15\u64ce\uff1a<code>http://svn.mybigai.ac.cn:18080/svn/TongLoop/trunk/engine/</code></p> </li> <li> <p>SVN \u5730\u5740\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>svn checkout http://svn.mybigai.ac.cn:18080/svn/TongSim/trunk\n</code></pre>"},{"location":"getting_started/overview/#docker-ubuntu","title":"\ud83d\udc33 Docker \u955c\u50cf\uff08\u9002\u7528\u4e8e Ubuntu\uff09","text":"<p>TongSim \u63d0\u4f9b\u4e86\u9884\u6784\u5efa\u7684\u955c\u50cf\uff0c\u652f\u6301 GUI \u4e0e Headless \u6a21\u5f0f\uff0c\u9002\u5408\u5927\u89c4\u6a21\u4eff\u771f\u4efb\u52a1\u548c\u4e91\u7aef\u90e8\u7f72\u3002</p> <ul> <li>\u53ef\u9009\u955c\u50cf\u6807\u7b7e\uff1a</li> <li>TongAI \u9879\u76ee\u4f7f\u7528\uff1a<code>harbor.mybigai.ac.cn/tongsim/tongai</code></li> <li> <p>TongLoop \u9879\u76ee\u4f7f\u7528\uff1a<code>harbor.mybigai.ac.cn/tongsim/tongloop</code></p> </li> <li> <p>Harbor \u955c\u50cf\u62c9\u53d6\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker pull harbor.mybigai.ac.cn/tongsim/tongai:latest\n</code></pre> <p>Harbor \u5730\u5740\uff08\u767b\u5f55\u540e\u53ef\u67e5\u770b\u6240\u6709\u955c\u50cf\uff09\uff1a \ud83d\udc49 HARBOR \u955c\u50cf\u5730\u5740</p>"},{"location":"getting_started/overview/#_2","title":"\ud83d\ude80 \u5b89\u88c5\u9009\u9879\u4e00\u89c8","text":"\ud83d\udda5\ufe0f \u64cd\u4f5c\u7cfb\u7edf \ud83d\udce6 \u5b89\u88c5\u65b9\u5f0f \u2705 \u573a\u666f\u63a8\u8350 Windows \u5ba2\u6237\u7aef\u53d1\u5e03\u7248\uff08SVN \u62c9\u53d6 + EXE \u542f\u52a8\uff09 \u63a8\u8350\u9700\u8981\u5feb\u901f\u4f53\u9a8c\u7684\u7528\u6237\u3002\u9002\u5408\u6f14\u793a\u3001\u6d4b\u8bd5\u3001\u5f55\u5236 Demo\u3002\u65e0\u9700\u5f00\u53d1\u73af\u5883\u914d\u7f6e\u3002 Windows \u7f16\u8f91\u5668\u53d1\u5e03\u7248\uff08SVN \u62c9\u53d6 + UE \u7f16\u8f91\u5668\uff09 \u63a8\u8350\u9700\u8981\u4fee\u6539\u5730\u56fe\u3001\u89d2\u8272\u3001\u84dd\u56fe\u903b\u8f91\u7b49\u5185\u5bb9\u7684\u7528\u6237\u3002 Linux\uff08Ubuntu\uff09 Docker \u955c\u50cf\u8fd0\u884c \u63a8\u8350\u5728\u670d\u52a1\u5668\u4e0a\u8fdb\u884c\u6279\u91cf\u4eff\u771f\u3001\u6a21\u578b\u8bad\u7ec3\u6216\u8fdc\u7a0b\u90e8\u7f72\u7528\u6237\u4f7f\u7528\u3002\u65e0\u9700\u56fe\u5f62\u754c\u9762\u3002"},{"location":"getting_started/overview/#_3","title":"\ud83d\udd11 \u5982\u4f55\u9009\u62e9\uff1f","text":"<ul> <li>\u2705 \u5feb\u901f\u4f53\u9a8c TongSim \u2192 \u4f7f\u7528 Windows \u53d1\u5e03\u7248 \u6216 Docker \u955c\u50cf</li> <li>\u2705 \u5728 Linux / \u4e91\u7aef / \u65e0\u754c\u9762\u73af\u5883\u8fd0\u884c \u2192 \u4f7f\u7528 Docker \u955c\u50cf</li> <li>\u2705 \u9700\u8981\u5f00\u53d1\u6216\u4fee\u6539 UE \u73af\u5883\u5185\u5bb9 \u2192 \u4f7f\u7528 \u7f16\u8f91\u5668\u53d1\u5e03\u7248</li> <li>\u2705 \u9700\u8981\u4fee\u6539\u5e95\u5c42 UE \u5f15\u64ce\u6216\u9879\u76ee\u529f\u80fd \u2192 \u4f7f\u7528 \u6e90\u7801\u7248 UE \u5f15\u64ce + TongSim UE \u9879\u76ee</li> </ul>"},{"location":"getting_started/overview/#_4","title":"\ud83d\udccc \u76f8\u5173\u6587\u6863","text":"<ul> <li>Windows \u5e73\u53f0\u5b89\u88c5\u6307\u5357</li> <li>Ubuntu Docker \u955c\u50cf\u5b89\u88c5\u6307\u5357</li> </ul>"},{"location":"getting_started/overview/#_5","title":"\u26a0\ufe0f \u6ce8\u610f\u4e8b\u9879","text":"<p>\u8def\u5f84\u547d\u540d\u89c4\u8303</p> <p>\u8bf7\u786e\u4fdd\u6240\u6709\u5b89\u88c5\u8def\u5f84 \u4e0d\u5305\u542b\u4e2d\u6587\u3001\u7a7a\u683c\u6216\u7279\u6b8a\u5b57\u7b26\uff0c\u4ee5\u907f\u514d\u8d44\u6e90\u52a0\u8f7d\u9519\u8bef\u6216\u4f9d\u8d56\u89e3\u6790\u5931\u8d25\u3002</p>"},{"location":"getting_started/python_sdk_installation/","title":"\ud83d\udc0d TongSim Python SDK \u5b89\u88c5\u6307\u5357","text":"<p>\u26a0\ufe0f \u91cd\u8981\uff1a\u672c\u4ed3\u5e93\u4e3a \u6bd4\u8d5b\u4e13\u7528\u7cbe\u7b80\u7248\uff08\u8bf7\u5148\u9605\u8bfb\uff09</p> <p>TongSim\uff08\u672c\u6b21\u5f00\u6e90\uff09\u4ec5\u4f9b\u6bd4\u8d5b\u4f7f\u7528\uff0c\u529f\u80fd\u7ecf\u8fc7\u5927\u5e45\u88c1\u526a\u3002</p> <ul> <li>\u5b89\u88c5\u6bd4\u8d5b\u7248\u672c TongSim\u8bf7\u8f6c\u5230 \u6bd4\u8d5b Env \u4ed3\u5e93\u6587\u6863\uff1a<code>Env Docs</code>\u3002</li> <li>\u4e0b\u65b9\u51fa\u73b0\u7684\u5b89\u88c5\u65b9\u6cd5\u63cf\u8ff0\u7684\u662f\u9662\u5185\u5b8c\u6574\u7248\u672c TongSim\u7684\u5b89\u88c5\u903b\u8f91\uff0c\u4f9b\u53c2\u8003\uff1b\u5982\u9700\u4f53\u9a8c\u5b8c\u6574\u7248\u672c\uff0c\u8bf7\u8054\u7cfb\u5185\u90e8\u4eba\u5458\u3002</li> <li>\u672c\u6b21\u6bd4\u8d5b\u53d1\u5e03\u7248\u672c\u4e3a\u4e13\u7528\u7cbe\u7b80\u7248\u7684\u6784\u5efa\uff1a\u5927\u91cf\u4f20\u611f\u3001\u4ea4\u4e92\u3001\u8d44\u4ea7\u3001\u52a8\u4f5c\u7b49\u529f\u80fd\u672a\u5305\u542b\uff1b</li> </ul> <p>TongSim Python SDK \u63d0\u4f9b\u4e86\u63a7\u5236 TongSim Unreal \u4eff\u771f\u5e73\u53f0\u7684\u6838\u5fc3 API\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7 \u9662\u5185 PyPI \u955c\u50cf\u6e90 \u5b89\u88c5\uff0c\u6216\u4ece\u6e90\u7801\u6784\u5efa\u5f00\u53d1\u73af\u5883\u3002</p>"},{"location":"getting_started/python_sdk_installation/#pypi","title":"\ud83d\udce6 \u4ece\u9662\u5185 PyPI \u955c\u50cf\u6e90\u5b89\u88c5","text":"<p>TongSim Python SDK \u53ef\u4ee5\u901a\u8fc7\u9662\u5185 PyPI \u955c\u50cf\u6e90\u5b8c\u6210\u5b89\u88c5\uff0c\u652f\u6301 <code>uv</code> \u4e0e <code>conda</code> \u4e24\u79cd\u5e38\u89c1\u73af\u5883\u7ba1\u7406\u5de5\u5177\u3002\u8bf7\u6839\u636e\u4f60\u7684\u9879\u76ee\u7ba1\u7406\u504f\u597d\u9009\u62e9\u5bf9\u5e94\u65b9\u5f0f\u3002</p> \ud83d\udd27 \u4f7f\u7528 uv \u5b89\u88c5\uff08\u63a8\u8350\uff09\ud83d\udc0d \u4f7f\u7528 conda \u5b89\u88c5 <p>\u63a8\u8350\u4f7f\u7528 <code>uv</code> \u4f5c\u4e3a\u73b0\u4ee3\u9879\u76ee\u7ba1\u7406\u5de5\u5177\uff0c\u517c\u5bb9\u6027\u5f3a\uff0c\u901f\u5ea6\u5feb\u3002</p> <pre><code># pyproject.toml \u4e2d\u914d\u7f6e\u955c\u50cf\u6e90\u7d22\u5f15\n[tool.uv.sources]\ntongsim = { index = \"bigai\" }\ntongsim-api-protocol = { index = \"bigai\" }\n\n[[tool.uv.index]]\nname = \"bigai\"\nurl = \"https://nexus.mybigai.ac.cn/repository/pypi/simple\"\n</code></pre> <p>\u7136\u540e\u5b89\u88c5\uff1a</p> <pre><code>uv add tongsim\n</code></pre> <p>\u5173\u4e8e uv \u4e0e\u955c\u50cf\u6e90</p> <p>\u7531\u4e8e <code>tongsim</code> \u4f9d\u8d56 <code>tongsim-api-protocol</code>\uff0c\u4e24\u8005\u5747\u9700\u4ece\u9662\u5185\u955c\u50cf\u6e90\u4e0b\u8f7d\u3002\u5efa\u8bae\u5728 <code>pyproject.toml</code> \u4e2d\u5c06\u5176\u7d22\u5f15\u663e\u5f0f\u7ed1\u5b9a\u4e3a <code>bigai</code>\uff0c\u4ee5\u907f\u514d uv \u62c9\u53d6\u5931\u8d25\u7684\u95ee\u9898\u3002</p> <p>\u5982\u679c\u4f60\u66f4\u4e60\u60ef\u4f7f\u7528 <code>conda</code> \u7ba1\u7406 Python \u73af\u5883\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p> <pre><code>conda create -n tongsim python=3.12 -y\nconda activate tongsim\n\n# \u914d\u7f6e pip \u4f7f\u7528\u955c\u50cf\u6e90\npip config set global.index-url https://nexus.mybigai.ac.cn/repository/pypi/simple\n\n# \u5b89\u88c5 SDK\npip install tongsim\n</code></pre>"},{"location":"getting_started/python_sdk_installation/#_1","title":"\ud83d\udd17 \u955c\u50cf\u6e90\u5730\u5740\uff1a","text":"<ul> <li> <p>\u955c\u50cf\u6e90 Index\uff1a   <code>https://nexus.mybigai.ac.cn/repository/pypi/simple</code></p> </li> <li> <p>\u6d4f\u89c8\u955c\u50cf\u6e90\u5305\u4e0e\u7248\u672c\uff1a \u70b9\u51fb\u8fdb\u5165TongSim\u7248\u672c\u67e5\u8be2\u9875\u9762 \ud83d\udd0d</p> </li> </ul>"},{"location":"getting_started/python_sdk_installation/#_2","title":"\ud83d\udd27 \u4ece\u6e90\u7801\u6784\u5efa\u5b89\u88c5","text":"<p>\u5982\u9700\u8c03\u8bd5 Python SDK\uff0c\u53ef\u76f4\u63a5\u4ece Git \u62c9\u53d6\u6e90\u7801\u3002</p>"},{"location":"getting_started/python_sdk_installation/#git","title":"\ud83d\udcc1 Git \u4ed3\u5e93\u5730\u5740","text":"<pre><code>git clone https://gitlab.mybigai.ac.cn/tongsim/tongsim-python.git\ncd tongsim-python\n</code></pre>"},{"location":"getting_started/python_sdk_installation/#uv","title":"uv \u521d\u59cb\u5316","text":"<pre><code>uv sync\n</code></pre>"},{"location":"getting_started/python_sdk_installation/#_3","title":"\ud83d\ude80 \u8fd0\u884c\u793a\u4f8b","text":"<pre><code>uv run python examples/demo.py\n</code></pre>"},{"location":"getting_started/python_sdk_installation/#_4","title":"\u2705 \u5b89\u88c5\u786e\u8ba4","text":"<pre><code>python -c \"import tongsim; print(tongsim.__version__)\"\n</code></pre>"},{"location":"getting_started/python_sdk_installation/#_5","title":"\ud83d\udccc \u76f8\u5173\u8bf4\u660e","text":"<ul> <li><code>tongsim-api-protocol</code> \u662f\u4e00\u4e2a\u4e0e TongSim Unreal \u901a\u4fe1\u6240\u7528\u7684 proto \u5b9a\u4e49\u751f\u6210\u6a21\u5757\uff0c\u5fc5\u987b\u4ece\u955c\u50cf\u6e90\u5b89\u88c5</li> </ul>"},{"location":"getting_started/python_sdk_installation/#_6","title":"\ud83d\udcda \u63a8\u8350\u9605\u8bfb","text":"<ul> <li>\u5f00\u53d1\u73af\u5883\u8bbe\u7f6e\u6307\u5357</li> <li>\u5e38\u7528\u547d\u4ee4\u53c2\u8003</li> </ul>"},{"location":"getting_started/ubuntu_docker_installation/","title":"\ud83d\udc27 TongSim Ubuntu \u5e73\u53f0\u5b89\u88c5\u4e0e\u8fd0\u884c\u6307\u5357\uff08Docker \u7248\uff09","text":"<p>\u26a0\ufe0f \u91cd\u8981\uff1a\u672c\u4ed3\u5e93\u4e3a \u6bd4\u8d5b\u4e13\u7528\u7cbe\u7b80\u7248\uff08\u8bf7\u5148\u9605\u8bfb\uff09</p> <p>TongSim\uff08\u672c\u6b21\u5f00\u6e90\uff09\u4ec5\u4f9b\u6bd4\u8d5b\u4f7f\u7528\uff0c\u529f\u80fd\u7ecf\u8fc7\u5927\u5e45\u88c1\u526a\u3002</p> <ul> <li>\u5b89\u88c5\u6bd4\u8d5b\u7248\u672c TongSim\u8bf7\u8f6c\u5230 \u6bd4\u8d5b Env \u4ed3\u5e93\u6587\u6863\uff1a<code>Env Docs</code>\u3002</li> <li>\u4e0b\u65b9\u51fa\u73b0\u7684\u5b89\u88c5\u65b9\u6cd5\u63cf\u8ff0\u7684\u662f\u9662\u5185\u5b8c\u6574\u7248\u672c TongSim\u7684\u5b89\u88c5\u903b\u8f91\uff0c\u4f9b\u53c2\u8003\uff1b\u5982\u9700\u4f53\u9a8c\u5b8c\u6574\u7248\u672c\uff0c\u8bf7\u8054\u7cfb\u5185\u90e8\u4eba\u5458\u3002</li> <li>\u672c\u6b21\u6bd4\u8d5b\u53d1\u5e03\u7248\u672c\u4e3a\u4e13\u7528\u7cbe\u7b80\u7248\u7684\u6784\u5efa\uff1a\u5927\u91cf\u4f20\u611f\u3001\u4ea4\u4e92\u3001\u8d44\u4ea7\u3001\u52a8\u4f5c\u7b49\u529f\u80fd\u672a\u5305\u542b\uff1b</li> </ul> <p>\u6b22\u8fce\u4f7f\u7528 TongSim Docker \u7248\u672c\uff01\u672c\u6307\u5357\u5e2e\u52a9\u4f60\u5728 Ubuntu \u5e73\u53f0\u5b8c\u6210\u5b89\u88c5\u3001\u914d\u7f6e\u5e76\u987a\u5229\u8fd0\u884c TongSim\u3002\u6211\u4eec\u9488\u5bf9\u65b0\u624b\u7528\u6237\uff0c\u9010\u6b65\u4ecb\u7ecd\u64cd\u4f5c\u542b\u4e49\u4e0e\u80cc\u666f\u3002</p>"},{"location":"getting_started/ubuntu_docker_installation/#docker-nvidia-container-toolkit","title":"\ud83d\ude80 \u5b89\u88c5 Docker \u4e0e NVIDIA Container Toolkit","text":""},{"location":"getting_started/ubuntu_docker_installation/#_1","title":"\u51c6\u5907\u5de5\u4f5c: \u66f4\u65b0\u7cfb\u7edf\u5e76\u5b89\u88c5\u57fa\u7840\u5de5\u5177","text":"<p>\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u66f4\u65b0\u8f6f\u4ef6\u5305\u7d22\u5f15\u5e76\u5b89\u88c5\u5fc5\u8981\u5de5\u5177\uff08\u652f\u6301 HTTPS\u3001\u4ed3\u5e93\u7ba1\u7406\u7b49\uff09:</p> <p><pre><code>sudo apt update &amp;&amp; \\\nsudo apt install -y apt-transport-https ca-certificates curl software-properties-common\n</code></pre> \ud83d\udca1 \u8bf4\u660e: \u786e\u4fdd\u7cfb\u7edf\u8f6f\u4ef6\u4fe1\u606f\u662f\u6700\u65b0\u72b6\u6001\uff0c\u5e76\u5b89\u88c5\u652f\u6301\u5b89\u5168\u4e0b\u8f7d\u53ca\u4ed3\u5e93\u7ba1\u7406\u7684\u7ec4\u4ef6\u3002</p>"},{"location":"getting_started/ubuntu_docker_installation/#docker","title":"\u914d\u7f6e Docker \u5b98\u65b9\u4ed3\u5e93\uff08\u4f7f\u7528\u963f\u91cc\u4e91\u52a0\u901f\uff09","text":"<p>\u6dfb\u52a0 GPG \u5bc6\u94a5\u5e76\u914d\u7f6e\u963f\u91cc\u4e91 Docker \u4ed3\u5e93:</p> <p><pre><code>curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository \"deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable\"\n</code></pre> \ud83d\udca1 \u8bf4\u660e: \u5bfc\u5165 Docker \u7b7e\u540d\uff0c\u4fdd\u8bc1\u8f6f\u4ef6\u5305\u5b89\u5168\uff1b\u6dfb\u52a0\u4ed3\u5e93\u5730\u5740\uff0c\u4ece\u963f\u91cc\u4e91\u955c\u50cf\u52a0\u901f\u4e0b\u8f7d\u3002</p>"},{"location":"getting_started/ubuntu_docker_installation/#docker_1","title":"\u5b89\u88c5 Docker \u5e76\u914d\u7f6e\u6743\u9650","text":"<p>\u5b89\u88c5 Docker \u53ca\u76f8\u5173\u7ec4\u4ef6\uff0c\u5e76\u914d\u7f6e\u5f53\u524d\u7528\u6237\u53ef\u514d sudo \u8fd0\u884c:</p> <p><pre><code>sudo apt update &amp;&amp; \\\nsudo apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin &amp;&amp; \\\n</code></pre> \ud83d\udca1 \u8bf4\u660e: \u5b89\u88c5 Docker \u793e\u533a\u7248</p> \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u67e5\u770b\u5b89\u88c5\u662f\u5426\u6b63\u786e <ul> <li>\u63a7\u5236\u53f0\u6267\u884c<code>sudo systemctl status docker</code> </li> </ul> <p><pre><code>sudo systemctl\u00a0start\u00a0docker\nsudo\u00a0systemctl\u00a0enable\u00a0docker\nsudo groupadd docker\nsudo gpasswd -a $USER docker\nnewgrp docker\n</code></pre> \ud83d\udca1 \u8bf4\u660e:  \u542f\u52a8 Docker \u670d\u52a1, \u914d\u7f6e\u5f53\u524d\u7528\u6237\u52a0\u5165 <code>docker</code> \u7ec4\uff0c\u65e0\u9700 sudo \u5373\u53ef\u64cd\u4f5c docker</p>"},{"location":"getting_started/ubuntu_docker_installation/#nvidia-container-toolkit-gpu","title":"\u5b89\u88c5 NVIDIA Container Toolkit\uff08\u542f\u7528 GPU\uff09","text":"<p><pre><code>curl -fsSL https://mirrors.ustc.edu.cn/libnvidia-container/gpgkey | \\\n    sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg\ncurl -s -L https://mirrors.ustc.edu.cn/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \\\n    sed 's#deb https://nvidia.github.io#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://mirrors.ustc.edu.cn#g' | \\\n    sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list\nsudo apt update\nsudo apt install -y nvidia-container-toolkit\nsudo systemctl restart docker\n</code></pre> \ud83d\udca1 \u8bf4\u660e: \u6dfb\u52a0 NVIDIA \u5bb9\u5668\u5de5\u5177\u5305\u6e90\uff0c\u7528\u4e8e\u5bb9\u5668\u4e2d\u8c03\u7528 GPU\u3002 (\u4e0b\u8f7dGPG\u5bc6\u94a5\u5e76\u914d\u7f6eAPT\u6e90), \u5b89\u88c5\u5de5\u5177\u5305\u540e\u91cd\u542f Docker \u751f\u6548\u3002</p>"},{"location":"getting_started/ubuntu_docker_installation/#tongsim","title":"\ud83d\udc33 \u83b7\u53d6\u5e76\u8fd0\u884c TongSim \u955c\u50cf","text":""},{"location":"getting_started/ubuntu_docker_installation/#_2","title":"\u767b\u5f55\u901a\u7814\u9662\u5185\u79c1\u6709\u4ed3\u5e93","text":"<p><pre><code>docker login harbor.mybigai.ac.cn\n</code></pre> \ud83d\udca1 \u8bf4\u660e: \u8f93\u5165\u4e0e IDAP \u4e00\u81f4\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u6388\u6743\u4ece\u79c1\u6709\u4ed3\u5e93\u4e0b\u8f7d\u955c\u50cf\u3002</p>"},{"location":"getting_started/ubuntu_docker_installation/#_3","title":"\u62c9\u53d6\u955c\u50cf","text":"<p><pre><code>docker pull harbor.mybigai.ac.cn/tongsim/tongai\n</code></pre> \ud83d\udca1 \u8bf4\u660e: \u4e0b\u8f7d\u6700\u65b0 TongSim \u955c\u50cf\u5230\u672c\u5730\u3002</p>"},{"location":"getting_started/ubuntu_docker_installation/#x11","title":"\u542f\u7528\u56fe\u5f62\u754c\u9762\u652f\u6301\uff08X11\uff09","text":"<p><pre><code>xhost +\n</code></pre> \ud83d\udca1 \u8bf4\u660e: \u5141\u8bb8\u5bb9\u5668\u8bbf\u95ee\u5bbf\u4e3b\u673a X11\uff0c\u7528\u4e8e\u663e\u793a GUI \u7a97\u53e3\u3002</p>"},{"location":"getting_started/ubuntu_docker_installation/#_4","title":"\u542f\u52a8\u5bb9\u5668","text":"<pre><code>docker run -ti --gpus=all --rm --entrypoint=bash \\\n  -e DISPLAY=$DISPLAY --net=host --device /dev/snd \\\n  -v /tmp/.X11-unix:/tmp/.X11-unix:rw \\\n  harbor.mybigai.ac.cn/tongsim/tongai\n</code></pre>"},{"location":"getting_started/ubuntu_docker_installation/#_5","title":"\ud83d\udca1 \u4e3b\u8981\u53c2\u6570\u8bf4\u660e:","text":"\u53c2\u6570 \u542b\u4e49 <code>--gpus=all</code> \u542f\u7528\u5168\u90e8 GPU \u8bbe\u5907 <code>--rm</code> \u5bb9\u5668\u9000\u51fa\u540e\u81ea\u52a8\u5220\u9664 <code>--entrypoint=bash</code> \u8fdb\u5165 bash \u7ec8\u7aef\u800c\u975e\u9ed8\u8ba4\u5165\u53e3 <code>-e DISPLAY=$DISPLAY</code> \u5171\u4eab\u5bbf\u4e3b\u673a\u663e\u793a\u73af\u5883\u53d8\u91cf <code>--net=host</code> \u4f7f\u7528\u5bbf\u4e3b\u673a\u7f51\u7edc <code>--device /dev/snd</code> \u5141\u8bb8\u5bb9\u5668\u8bbf\u95ee\u97f3\u9891\u8bbe\u5907 <code>-v /tmp/.X11-unix:/tmp/.X11-unix:rw</code> \u6302\u8f7d X11 \u901a\u4fe1 socket\uff0c\u652f\u6301 GUI \u7a97\u53e3\u663e\u793a"},{"location":"getting_started/ubuntu_docker_installation/#tongsim_1","title":"\u542f\u52a8 TongSim \u5e94\u7528","text":"<p>\u5728\u5bb9\u5668\u4e2d\u6267\u884c:</p> <p><pre><code>./run_local.sh\n</code></pre> \ud83d\udca1 \u8bf4\u660e: \u4ee5\u672c\u5730\u6a21\u5f0f\u542f\u52a8 TongSim\u3002</p> <p>\u82e5\u9700\u63a8\u6d41\u5230\u5a92\u4f53\u4e2d\u5fc3: <pre><code>./run_local_mediacenter.sh\n</code></pre> \ud83d\udca1 \u8bf4\u660e: \u542f\u52a8 TongSim \u5e76\u63a8\u6d41\u3002</p>"},{"location":"getting_started/ubuntu_docker_installation/#_6","title":"\u26a0\ufe0f \u6ce8\u610f\u4e8b\u9879","text":"<p>\u91cd\u8981\u63d0\u793a</p> <ul> <li>\u786e\u4fdd\u5bbf\u4e3b\u673a\u5df2\u6b63\u786e\u5b89\u88c5 NVIDIA \u9a71\u52a8\u5e76\u53ef\u6b63\u5e38\u8fd0\u884c <code>nvidia-smi</code>\u3002</li> <li>\u5efa\u8bae\u9996\u6b21\u62c9\u53d6\u955c\u50cf\u540e\u6d4b\u8bd5 GUI \u754c\u9762\u663e\u793a\u529f\u80fd\uff08\u4f8b\u5982\u7b80\u5355\u7684 X11 \u7a97\u53e3\u7a0b\u5e8f\uff09\u3002</li> <li>\u6ce8\u610f\u4fdd\u8bc1\u7ec8\u7aef <code>xhost +</code></li> </ul>"},{"location":"getting_started/ubuntu_docker_installation/#_7","title":"\ud83d\udccc \u5e38\u7528\u6307\u4ee4\u901f\u67e5","text":"\u64cd\u4f5c \u547d\u4ee4 \u67e5\u770b Docker \u72b6\u6001 <code>sudo systemctl status docker</code> \u542f\u52a8 Docker \u670d\u52a1 <code>sudo systemctl start docker</code> \u8bbe\u7f6e Docker \u5f00\u673a\u542f\u52a8 <code>sudo systemctl enable docker</code> \u67e5\u770b\u672c\u5730\u955c\u50cf\u5217\u8868 <code>docker images</code> \u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668 <code>docker ps</code>"},{"location":"getting_started/windows_client_installation/","title":"TongSim \u5ba2\u6237\u7aef \u5b89\u88c5\u6307\u5357\uff08Windows \u5e73\u53f0\uff09","text":"<p>\u26a0\ufe0f \u91cd\u8981\uff1a\u672c\u4ed3\u5e93\u4e3a \u6bd4\u8d5b\u4e13\u7528\u7cbe\u7b80\u7248\uff08\u8bf7\u5148\u9605\u8bfb\uff09</p> <p>TongSim\uff08\u672c\u6b21\u5f00\u6e90\uff09\u4ec5\u4f9b\u6bd4\u8d5b\u4f7f\u7528\uff0c\u529f\u80fd\u7ecf\u8fc7\u5927\u5e45\u88c1\u526a\u3002</p> <ul> <li>\u5b89\u88c5\u6bd4\u8d5b\u7248\u672c TongSim\u8bf7\u8f6c\u5230 \u6bd4\u8d5b Env \u4ed3\u5e93\u6587\u6863\uff1a<code>Env Docs</code>\u3002</li> <li>\u4e0b\u65b9\u51fa\u73b0\u7684\u5b89\u88c5\u65b9\u6cd5\u63cf\u8ff0\u7684\u662f\u9662\u5185\u5b8c\u6574\u7248\u672c TongSim\u7684\u5b89\u88c5\u903b\u8f91\uff0c\u4f9b\u53c2\u8003\uff1b\u5982\u9700\u4f53\u9a8c\u5b8c\u6574\u7248\u672c\uff0c\u8bf7\u8054\u7cfb\u5185\u90e8\u4eba\u5458\u3002</li> <li>\u672c\u6b21\u6bd4\u8d5b\u53d1\u5e03\u7248\u672c\u4e3a\u4e13\u7528\u7cbe\u7b80\u7248\u7684\u6784\u5efa\uff1a\u5927\u91cf\u4f20\u611f\u3001\u4ea4\u4e92\u3001\u8d44\u4ea7\u3001\u52a8\u4f5c\u7b49\u529f\u80fd\u672a\u5305\u542b\uff1b</li> </ul> <p>\ud83d\udcbb \u63a8\u8350\u914d\u7f6e</p> <ul> <li>\u663e\u5361: NVIDIA RTX 3070 \u6216\u66f4\u9ad8\uff0840 \u7cfb\u5217\u6700\u4f73\uff09</li> <li>\u786c\u76d8: \u5269\u4f59\u7a7a\u95f4 \u2265 100 GB</li> </ul>"},{"location":"getting_started/windows_client_installation/#_1","title":"\ud83d\ude80 \u663e\u5361\u9a71\u52a8\u5b89\u88c5","text":"<p>1\ufe0f\u20e3 \u5b89\u88c5 NVIDIA GeForce Experience\u3002 2\ufe0f\u20e3 \u901a\u8fc7 GeForce Experience \u4e0b\u8f7d\u5e76\u5b89\u88c5\u6700\u65b0\u663e\u5361\u9a71\u52a8\u3002</p> <p></p>"},{"location":"getting_started/windows_client_installation/#svn","title":"\ud83d\udee0 \u5b89\u88c5 SVN \u5de5\u5177","text":"<p>1\ufe0f\u20e3 \u4e0b\u8f7d\u5e76\u5b89\u88c5 TortoiseSVN\u3002 2\ufe0f\u20e3 \u5b89\u88c5\u8fc7\u7a0b\u4e2d \u52a1\u5fc5\u52fe\u9009 <code>command line client tools</code>\u3002</p> <p></p>"},{"location":"getting_started/windows_client_installation/#tongsim","title":"\ud83d\udce6 \u83b7\u53d6 TongSim","text":"<p>1\ufe0f\u20e3 \u5728\u76ee\u6807\u76ee\u5f55\uff08\u8def\u5f84 \u4e0d\u542b\u4e2d\u6587\uff09\u53f3\u952e\u9009\u62e9 SVN Checkout\u3002 2\ufe0f\u20e3 \u586b\u5199\u4ed3\u5e93\u5730\u5740: <pre><code>http://svn.mybigai.ac.cn:18080/svn/Demo/trunk/AIBabyUE5Client\n</code></pre> 3\ufe0f\u20e3 \u6210\u529f\u62c9\u53d6\u540e\u76ee\u5f55\u793a\u4f8b:</p> <p></p> <p>4\ufe0f\u20e3 \u542f\u52a8\u7a0b\u5e8f: \u53cc\u51fb <code>\u5927\u4efb\u52a1\u5e73\u53f0TongSim.exe</code>\u3002\uff08\u9996\u6b21\u8fd0\u884c\u4f1a\u63d0\u793a\u5b89\u88c5\u4e00\u4e9b\u7f3a\u5931\u7684 C++ \u8fd0\u884c\u5e93\uff09</p> <p></p>"},{"location":"getting_started/windows_client_installation/#tongsim_1","title":"\ud83d\udd04 \u66f4\u65b0 TongSim","text":"<p>1\ufe0f\u20e3 \u5728\u9879\u76ee\u76ee\u5f55\u53f3\u952e\u9009\u62e9 SVN Update\uff0c\u62c9\u53d6\u6700\u65b0\u7248\u672c\u3002</p> <p></p> <p>2\ufe0f\u20e3 \u5207\u6362\u6307\u5b9a\u7248\u672c: \u53f3\u952e\u9009\u62e9 SVN Update to revision\uff0c\u8f93\u5165 revision \u7f16\u53f7\u6216\u70b9\u51fb Show Log \u9009\u62e9\u7248\u672c\u3002</p> <p></p>"},{"location":"getting_started/windows_client_installation/#faq","title":"\u2753 \u5e38\u89c1\u95ee\u9898\uff08FAQ\uff09","text":"SVN \u64cd\u4f5c\u51fa\u73b0\u9519\u8bef <ul> <li>\u82e5\u76ee\u5f55\u9501\u5b9a\u6216\u51fa\u9519\uff0c\u53f3\u952e\u9009\u62e9 SVN Clean Up\u3002</li> </ul> <ul> <li>\u5982\u679c\u63d0\u793a\u6743\u9650\u95ee\u9898\uff0c\u8bf7\u901a\u8fc7\u4efb\u52a1\u7ba1\u7406\u5668\u68c0\u67e5\u662f\u5426\u6709\u5176\u4ed6\u8fdb\u7a0b\u5360\u7528 SVN \u76ee\u5f55\u6216\u6587\u4ef6\u3002</li> </ul> \u5b89\u88c5\u540e\u5ba2\u6237\u7aef\u542f\u52a8\u62a5\u9519 <ul> <li>\u63a8\u8350\u8fdb\u5165\u7b54\u7591\u7fa4\uff0c\u5b89\u88c5\u516c\u544a\u4e2d\u7684 DXRepair \u5de5\u5177\uff0c\u8fd0\u884c\u81ea\u68c0 \u663e\u5361\u9a71\u52a8\u3001 DirectX \u548c MSVC++ \u5e93\u7684\u73af\u5883\u60c5\u51b5\u3002</li> </ul>"}]}